{"title":"VIM爬坡到半山腰的总结","date":"2016-11-30T01:43:00.000Z","author":"xujiaji","thumbnail":"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/vim-1/home.png","link":"post/vim-note1","comments":true,"tags":["Linux","Vim","笔记"],"categories":["Linux"],"updated":"2019-04-08T06:57:01.540Z","content":"<div class=\"article-img\"><p><img src=\"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/vim-1/banner.png\" alt=\"banner\" data-zoomable=\"\"></p></div>\n<h2 id=\"简介\">简介<a href=\"post/vim-note1#简介\"></a></h2><p>将Linux Mint做为我的主系统后，来来回回到处撞墙。慢慢的到现在不仅习惯了Linux下的娱乐和开发，居然还渐渐的顺手顺眼起来，对于Linux生存有了保障的我现在对Linux下的<code>VIM</code>开始好奇了。</p>\n<p>虽听说VIM乃是上古神器，但一直以来对于VIM映像只有黑不溜秋的界面、白晃晃的文字，只知道从命令界面进去后可以点击<code>i</code>进入文本编辑模式、上下左右箭头移动光标、修改完成后<code>Ese</code>然后<code>:wq</code>保存退出、走人。总的来说不想撩你，怕惹祸上身，最终精尽人亡（精神的精）。</p>\n<p>这到现在都没面试，哎！手里闲不住，前几天开始对VIM开始下手了，胆颤心惊的先去网上秋秋别人的VIM长啥样啊！谷歌直接搜图片吧！（我已做好随时逝去）。这一看，瓦特？vim可以分屏？这个人的vim界面还有目录？这GIT分支结构侧边栏怎么都来了？为什么左侧还有代码行号？这些人的代码高亮的这么好看？最下面的那行漂亮的状态栏我咋过没有？我瞬间就被这些人的界面给吸引住了，我感觉我从农村第一次来到城市。</p>\n<p>就这样我走上了撩VIM之路（我有Java精神我不怕，万物皆对象），到现在我已经将上面看到的目录结构弄出来、代码行号、代码高亮主题更换、状态栏显示、VIM中使用GIT等加入到我的VIM之中。从中我了解到了VIM的插件放哪、怎么配置插件，学习了一波基本命令助我前行。我认为写代码最主要的就是要先有个安心、悦目的环境，然后是快捷的操作，这样写代码会感觉很舒服。当然，还有就是提升了一个格调，集齐技术、快捷、装逼、高效与一身。</p>\n<p>下图是我当前的VIM界面截图，是不是有鼻子有眼了。<br><img src=\"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/vim-1/my-vim.png\" alt=\"This is my vim.\"></p>\n<h2 id=\"有想要到达的方向，一切的困难不过是个过程\">有想要到达的方向，一切的困难不过是个过程<a href=\"post/vim-note1#有想要到达的方向，一切的困难不过是个过程\"></a></h2><h3 id=\"我从这里开始入门\">我从这里开始入门<a href=\"post/vim-note1#我从这里开始入门\"></a></h3><p>先为您献上链接：<br><a href=\"http://www.imooc.com/article/13269\" target=\"_blank\" rel=\"noopener\">世界上最牛的编辑器： Vim 1 (原创动图演示所有例子!)</a><br><a href=\"http://www.imooc.com/article/13272\" target=\"_blank\" rel=\"noopener\">世界上最牛的编辑器： Vim 2 (原创动图演示所有例子!)</a><br><a href=\"http://www.imooc.com/article/13275\" target=\"_blank\" rel=\"noopener\">世界上最牛的编辑器： Vim 3 (原创动图演示所有例子!)</a></p>\n<p>当这三篇看完后，可以了解到VIM的基本操作，可以安装一些插件（其实我也只是用到了里面的几个插件，其他没用的先不管吧！）。虽然现在你是不明不白的安装了一些插件，但重在先体验体验VIM的感觉。</p>\n<p>这里我想要补充一下(因为我是用的Linux，其他系统原谅我没了解)：<br><code>.vimrc</code>就是vim的配置文件<br><code>.vim/bundle</code>目录下放的都是插件，可以直接将Github插件<code>git clone</code>（下载到）这个目录。</p>\n<p><code>.vim/bundle/vundle</code></p>\n<ol>\n<li>如果您下载了上面教程的<code>.vim</code>里面会有这个目录，这个插件可以在Github搜索然后更新一下。</li>\n<li>如果是Github上可下载的插件就不用亲自去克隆下来了，直接在<code>.vimrc</code>添加如：<code>Plugin &#39;majutsushi/tagbar&#39;</code>（Github地址是：<code>htttps://github.com/majutsushi/tagbar</code>），直接取后面一部分就行了。</li>\n<li>最后打开终端输入<code>vim</code>回车，进入Vim。然后，输入命令<code>:PluginInstall</code>就会将所有的第二步这种形式的插件自动下载下来。</li>\n</ol>\n<h3 id=\"从这里开始明白了Vim插件管理，如何配置\">从这里开始明白了Vim插件管理，如何配置<a href=\"post/vim-note1#从这里开始明白了Vim插件管理，如何配置\"></a></h3><p>还是先敬上链接：<br><a href=\"http://bhilburn.org/stop-being-scared-of-vim/\" target=\"_blank\" rel=\"noopener\">不要在害怕Vim</a></p>\n<p>当然我的英语水平是个渣渣，越来越不得不多学学English了。看了了大概，总体上面是介绍，下面是实际的一些例子。有预览图，理解起来还是比较轻松。里面介绍了一个Vim游戏<a href=\"http://vim-adventures.com/\" target=\"_blank\" rel=\"noopener\">http://vim-adventures.com/</a> ，挺有意思了玩到三关之后要money，20多美元解锁，屌丝的我只能干望着了。</p>\n<p>这里简单说一下我装了的里面提及的几个：<br><a href=\"https://github.com/tpope/vim-fugitive\" target=\"_blank\" rel=\"noopener\">fugitive</a>：可以在Vim中对项目进行Git命令操作。<br><a href=\"https://github.com/sjl/gundo.vim\" target=\"_blank\" rel=\"noopener\">gundo</a>：查看提交以树行结构展示（请看下图）<br><img src=\"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/vim-1/gundo.jpg\" alt=\"gundo\"><br><a href=\"https://github.com/scrooloose/nerdtree\" target=\"_blank\" rel=\"noopener\">nerdtree</a>：展示目录结构，看起比使用<code>:Ve</code>展示的目录爽多了。（请看下图）<br><img src=\"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/vim-1/nerdtree.png\" alt=\"nerdtree\"><br><a href=\"https://github.com/Lokaltog/powerline\" target=\"_blank\" rel=\"noopener\">powerline</a>：底部状态栏，这个可是把我给折腾够了，不过弄完之后，瞬间展示效果杠杠的。<br><img src=\"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/vim-1/powerline.png\" alt=\"powerline\"></p>\n<blockquote>\n<p>还是简单记录一下我的历程吧！</p>\n</blockquote>\n<p>一开始我以为和其他插件一样，直接在<code>.vimrc</code>中添加<code>Plugin &#39;Lokaltog/powerline&#39;</code>然后在Vim中<code>:PluginInstall</code>，Very Good搞定。其实不然，根本就可以不需要往<code>.vim/bundle</code>中添加，需要配置python，需要在<code>.vimrc</code>中配置。</p>\n<p>通过这篇文章：<a href=\"http://www.hi-linux.com/2016/04/22/%E4%B8%BABash%E5%92%8CVIM%E9%85%8D%E7%BD%AE%E4%B8%80%E4%B8%AA%E7%BE%8E%E8%A7%82%E5%A5%A2%E5%8D%8E%E7%9A%84%E7%8A%B6%E6%80%81%E6%8F%90%E7%A4%BA%E6%A0%8F/\" target=\"_blank\" rel=\"noopener\">为Bash和VIM配置一个美观奢华的状态提示栏</a><br>我不仅仅将Vim给加上了状态栏，命令界面的用户状态也变了，我把默认的字体改成powerline的字体，更加美观。先欣赏一下：</p>\n<div class=\"article-img\"><p><img src=\"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/vim-1/termina.png\" alt=\"My termina\" data-zoomable=\"\"></p></div>\n<p>我的步骤：</p>\n<ol>\n<li><p>安装python-pip 与 git 套件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python-pip git</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用pip安装Powerline</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install --user powerline-status</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>字体配置（如果没有这字体，那么Powerline的那些符号我的会显示乱码）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/powerline/fonts.git</span><br><span class=\"line\">$ cd fonts</span><br><span class=\"line\">$ ./install.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置环境，打开<code>.bashrc</code>，添加如下信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export TERM=&quot;screen-256color&quot;</span><br><span class=\"line\">export PATH=&quot;$HOME/.local/bin:$PATH&quot;</span><br><span class=\"line\">export POWERLINE_COMMAND=powerline</span><br><span class=\"line\">export POWERLINE_CONFIG_COMMAND=powerline-config</span><br><span class=\"line\">powerline-daemon -q</span><br><span class=\"line\">POWERLINE_BASH_CONTINUATION=1</span><br><span class=\"line\">POWERLINE_BASH_SELECT=1</span><br><span class=\"line\">. ~/.local/lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>第二行是加入powerline的命令位置，下图是查看位置。<br><img src=\"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/vim-1/powerline-position.png\" alt=\"查看powerline命令位置\"><br>最下面的一行是安装powerline后的路径<code>. ~/.local/lib/python2.7/site-packages/powerline</code>可能大家会有所不同。（再执行第二步你会看到安装位置哦，如下图）<br><img src=\"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/vim-1/powerline-position2.png\" alt=\"查看powerline的安装位置\"></p>\n<ol start=\"5\">\n<li>选择字体，此时您应该已经可以在命令中中显示如上图的状态了，只是默字体可能无法显示其真正效果。<code>Edit &gt; Preferences</code>看下图：我直接搜索选择了<code>powerline semi</code><br><img src=\"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/vim-1/choose-font.png\" alt=\"选择字体操作\"></li>\n<li><p>最终目的不要忘了，是配置Vim啊！<br>此时只需要在<code>.vimrc</code>中添加如下信息即可：（第一行为powerline目录）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set rtp+=~/.local/lib/python2.7/site-packages/powerline/bindings/vim/</span><br><span class=\"line\">set guifont=Sauce\\ Code\\ Powerline:h14.5</span><br><span class=\"line\">set laststatus=2</span><br><span class=\"line\">set encoding=utf-8</span><br><span class=\"line\">set t_Co=256</span><br><span class=\"line\">set number</span><br><span class=\"line\">set fillchars+=stl:\\ ,stlnc:\\</span><br><span class=\"line\">set term=xterm-256color</span><br><span class=\"line\">set termencoding=utf-8</span><br><span class=\"line\">set background=dark</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启Vim看看，是不是搞定了！</p>\n</li>\n</ol>\n<blockquote>\n<p>最后献上一个我现在用的主题</p>\n</blockquote>\n<p><a href=\"https://github.com/morhetz/gruvbox\" target=\"_blank\" rel=\"noopener\">gruvbox</a></p>\n<p>配置.vimrc<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugin &apos;morhetz/gruvbox&apos;</span><br><span class=\"line\">colorscheme gruvbox</span><br><span class=\"line\">set background=light</span><br><span class=\"line\">set background=dark</span><br></pre></td></tr></table></figure></p>\n<p>在Vim中下载<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:PluginInstall</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>好了就到这里，其他插件看个人需求添加，都是大同小异的了。</p>\n</blockquote>\n<h2 id=\"总结结束\">总结结束<a href=\"post/vim-note1#总结结束\"></a></h2><p>在放几个网址在这里：<br><a href=\"http://vim.rtorr.com/\" target=\"_blank\" rel=\"noopener\">Vim Cheat Sheet</a> : 多种语音查看Vim命令<br><a href=\"http://vimcolors.com/\" target=\"_blank\" rel=\"noopener\">vimcolors</a> : 很多的Vim配色<br><a href=\"http://blog.csdn.net/ly0303521/article/details/50761365\" target=\"_blank\" rel=\"noopener\"><a href=\"http://blog.csdn.net/ly0303521/article/details/50761365\" target=\"_blank\" rel=\"noopener\">AndroidStudio——-IdeaVim插件</a></a></p>\n<blockquote>\n<p>从现在开启Vim神器功能，进入无尽的砍怪之旅吧！</p>\n</blockquote>\n<hr>\n<p>Github：<a href=\"https://github.com/xujiaji\" target=\"_blank\" rel=\"noopener\">@xujiaji</a></p>\n<blockquote>\n<p>本文是我开始VIM爬到半山坡后的总结！什么半山坡啊！装B，其实就是刚刚个入了门，哈哈。<br>如有欠妥之处还望给予指正，如有什么Vim淫巧还望推荐，谢谢！</p>\n</blockquote>\n","prev":{"title":"Git笔记","link":"post/git-notes"},"next":{"title":"面向对象设计-依赖倒置原则（DIP）","link":"post/ood-dip"},"plink":"https://blog.xujiaji.com/post/vim-note1/","toc":[{"title":"简介","id":"简介","index":"1"},{"title":"有想要到达的方向，一切的困难不过是个过程","id":"有想要到达的方向，一切的困难不过是个过程","index":"2","children":[{"title":"我从这里开始入门","id":"我从这里开始入门","index":"2.1"},{"title":"从这里开始明白了Vim插件管理，如何配置","id":"从这里开始明白了Vim插件管理，如何配置","index":"2.2"}]},{"title":"总结结束","id":"总结结束","index":"3"}],"reward":true,"copyright":{"author":"xujiaji","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow noopener\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","link":"<a href=\"https://blog.xujiaji.com/post/vim-note1/\" title=\"VIM爬坡到半山腰的总结\">https://blog.xujiaji.com/post/vim-note1/</a>"}}