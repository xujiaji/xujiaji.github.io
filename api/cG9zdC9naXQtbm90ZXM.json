{"title":"Git笔记","date":"2017-12-12T03:02:34.000Z","author":"xujiaji","thumbnail":"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/git-notes.png","link":"post/git-notes","comments":true,"tags":["Git","笔记"],"categories":["工具"],"updated":"2019-05-05T07:30:44.427Z","content":"<p>记录在Git的使用过程中遇到的操作</p>\n<a id=\"more\"></a>\n<h1 id=\"Git笔记\">Git笔记<a href=\"post/git-notes#Git笔记\"></a></h1><h2 id=\"初始化git仓库\">初始化git仓库<a href=\"post/git-notes#初始化git仓库\"></a></h2><ul>\n<li><p>移动到需要初始化的目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加修改后的文件，或用“.”表示添加当前目录所有修改内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add &lt;文件&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>提交修改了什么内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m \"&lt;内容&gt;\"</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"查看状态\">查看状态<a href=\"post/git-notes#查看状态\"></a></h3><ul>\n<li><p>查看当前版本库的状态，如：修改了什么文件，是否有需要添加或者提交的文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看修改前后的不同之处（difference）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看工作区和版本库里HEAD指向的版本（最新版本）有什么区别</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff HEAD -- &lt;文件&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"版本回退\">版本回退<a href=\"post/git-notes#版本回退\"></a></h2><ul>\n<li><p>查看commit提交的日志，每个commit都有一串哈希值表示id</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>用一行信息来展示一次提交的信息（简化上面的展示）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log --pretty=oneline</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Git中，用<code>HEAD</code>表示当前版本，上个版本表示为<code>HEAD^</code>，上上版本就是<code>HEAD^^</code>…。也可直接指定，如往上100个版本：<code>HEAD~100</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard HEAD^</span><br><span class=\"line\">HEAD is now at ebeb505 add distributed</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果窗口还没关闭，还可以后悔。<code>7a19</code>是commit id的SHA1值开头，他会自动根据开头这几个字符去找</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard 7a19</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果窗口关闭，那么也能后悔。查看你的历史命令的记录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reflog</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"撤销修改\">撤销修改<a href=\"post/git-notes#撤销修改\"></a></h2><ul>\n<li><p>如果还没有<code>git add</code>时想要撤销修改</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -- &lt;文件&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果<code>git add</code>了，想要撤销。先进行进行下面将文件从暂存区退回到工作区，然后在进行上面步骤。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset HEAD &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"删除文件\">删除文件<a href=\"post/git-notes#删除文件\"></a></h2><ul>\n<li><p>当删除文件后，需要更新版本库时。最后还需要commit提交</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add/rm &lt;file&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"远程仓库\">远程仓库<a href=\"post/git-notes#远程仓库\"></a></h2><ul>\n<li><p>添加为本地仓库并联远程仓库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin xxx.git</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除已并联的远程库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote rm origin</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重新设置远程仓库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote set-url origin git@xxx.com/xxx/xxx.git</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>本地仓库并联多个远程仓库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote rm origin</span><br><span class=\"line\">git remote add github git@github.com:xxx/xxx.git</span><br><span class=\"line\">git remote add gitee git@gitee.com:xxx/xxx.git</span><br><span class=\"line\"></span><br><span class=\"line\">git remote -v</span><br><span class=\"line\">... gitee    git@gitee.com:xxx/xxx.git (fetch)</span><br><span class=\"line\">... gitee    git@gitee.com:xxx/xxx.git (push)</span><br><span class=\"line\">... github    git@github.com:xxx/xxx.git (fetch)</span><br><span class=\"line\">... github    git@github.com:xxx/xxx.git (push)</span><br><span class=\"line\"></span><br><span class=\"line\">git push github master</span><br><span class=\"line\">git push gitee master</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>推送到远程仓库，第一次推送加上<code>-u</code>会把本地master分支和远程master分支并联起来，以后推送或拉取可简化命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看远程仓库的名称，一般是origin，如果没有远程仓库则没有结果。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看更详细信息，如果没有推送权限则没有(push)标记的地址。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"设置用户信息\">设置用户信息<a href=\"post/git-notes#设置用户信息\"></a></h2>  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name \"John Doe\"</span><br><span class=\"line\">git config --global user.email johndoe@example.com</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果使用了 –global ，那么该命令只需要运行一次，因为之后无论你在该系统上做任何事情， Git 都会使用那些信息。<br>当你想针对特定项目使用不同的用户名称与邮件地址时，可以在那个项目目录下运行没有 –global 选项的命令来配置。</p>\n</blockquote>\n<h2 id=\"分支\">分支<a href=\"post/git-notes#分支\"></a></h2><ul>\n<li><p>查看本地分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看远程分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -a</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建分支1.1.2并切换到1.1.2分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b 1.1.2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>拆分写法</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch 1.1.2</span><br><span class=\"line\">git checkout 1.1.2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除本地分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d 1.1.2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>把该分支上的所有本地提交推送到远程库（推送时，后面指定本地分支，这样git就会把该分支推送到远程库对应的远程分支上。）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建远程origin的dev分支到本地</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b dev origin/dev</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>指定本地分支dev和远程origin/dev的链接</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --set-upstream-to=origin/dev dev</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>推送本地分支到远程分支，远程分支不存在则创建</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin 1.1.2:1.1.2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>本地分支留空则是删除远程分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin :1.1.2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>合并work分支到当前分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge work</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>合并分支时，git可能会用Fast forward模式。但这个模式下删除分支后会丢失分支信息。如要禁用Fast forward模式可在merge时<code>--no-ff</code>生成一个新的commit</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge --no-ff -m \"&lt;commit内容&gt;\" &lt;分支&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>强制删除分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -D &lt;分支名&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"标签\">标签<a href=\"post/git-notes#标签\"></a></h2><ul>\n<li><p>创建标签，默认为<code>HEAD</code>，也可以指定一个commit id</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag &lt;tagname&gt;</span><br><span class=\"line\">git tag &lt;tagname&gt; &lt;commit id&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建带有说明的标签</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -a &lt;tagname&gt; -m \"&lt;说明&gt;\" &lt;commit id&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看所有标签</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看标签信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git show &lt;tagname&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除标签</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d &lt;tagname&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>推送某个标签到远程</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin &lt;tagname&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>一次性推送全部尚未推送到远程的本地分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --tags</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除远程标签时，先删除本地，然后push，格式如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d &lt;tagname&gt;</span><br><span class=\"line\">git push origin :refs/tags/&lt;tagname&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"解决冲突\">解决冲突<a href=\"post/git-notes#解决冲突\"></a></h2><ul>\n<li>当<code>git merge</code>发生冲突的时候</li>\n<li>可先通过<code>git status</code>查看冲突的文件</li>\n<li>Git用<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>，<code>=======</code>，<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>标记出不同分支的内容我们修改后保存。</li>\n<li>然后<code>git add</code>、<code>git commit -m</code>提交。</li>\n<li><p>查看分支合并图</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log --graph</span><br><span class=\"line\">git log --graph --pretty=oneline --abbrev-commit</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"stash\">stash<a href=\"post/git-notes#stash\"></a></h2><ul>\n<li><p>临时需要处理其他分支任务的时候，可以将当前分支没完成的工作储藏起来。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git stash</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看当前分支储藏</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git stash list</span></span><br><span class=\"line\">stash@&#123;0&#125;: WIP on dev: 5e7a253 merge dev2 test</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>恢复储藏</p>\n<ul>\n<li>1.用<code>git stash apply</code>恢复，恢复后，<br>stash内容并不删除，需要用<code>git stash drop</code>删除。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git stash list</span><br><span class=\"line\">stash@&#123;0&#125;: WIP on dev: 5e7a253 merge dev2 test</span><br><span class=\"line\">git stash apply stash@&#123;0&#125;</span><br><span class=\"line\">git stash list</span><br><span class=\"line\">stash@&#123;0&#125;: WIP on dev: 5e7a253 merge dev2 test</span><br><span class=\"line\">git stash drop stash@&#123;0&#125;</span><br><span class=\"line\">Dropped stash@&#123;0&#125; (78fffa0577da9beb962a341cf13d74d9cfa148c6)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>2.用<code>git stash pop</code>恢复的同时删去stash</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git stash pop</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"git-pull和本地冲突\">git pull和本地冲突<a href=\"post/git-notes#git-pull和本地冲突\"></a></h2><blockquote>\n<p>冲突log</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br><span class=\"line\">remote: Counting objects: 24, done.</span><br><span class=\"line\">remote: Compressing objects: 100% (17/17), done.</span><br><span class=\"line\">remote: Total 24 (delta 7), reused 23 (delta 6), pack-reused 0</span><br><span class=\"line\">Unpacking objects: 100% (24/24), done.</span><br><span class=\"line\">From https://github.com/elmorec/hexo-theme-inside</span><br><span class=\"line\">   a98e719..3b64c8a  master     -&gt; origin/master</span><br><span class=\"line\">error: Your local changes to the following files would be overwritten by merge:</span><br><span class=\"line\">        _config.yml</span><br><span class=\"line\">Please commit your changes or stash them before you merge.</span><br><span class=\"line\">Aborting</span><br><span class=\"line\">Updating a98e719..3b64c8a</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>1、用 <code>git stash</code>本地暂时保存起来</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git stash</span><br><span class=\"line\">Saved working directory and index state WIP on master: a98e719 update scripts</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>2、pull<br>3、还原<code>git stash pop stash@{0}</code></p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git stash pop stash@&#123;0&#125;</span><br><span class=\"line\">Auto-merging _config.yml</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Your branch is up-to-date with 'origin/master'.</span><br></pre></td></tr></table></figure>\n<h2 id=\"克隆其他分支\">克隆其他分支<a href=\"post/git-notes#克隆其他分支\"></a></h2><blockquote>\n<p>如下所示，只克隆source分支</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone -b source git@github.com:xujiaji/xujiaji.github.io.git</span><br></pre></td></tr></table></figure>\n<h2 id=\"强制覆盖远程\">强制覆盖远程<a href=\"post/git-notes#强制覆盖远程\"></a></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -f</span><br></pre></td></tr></table></figure>\n<h2 id=\"忽略特殊文件-gitignore\">忽略特殊文件.gitignore<a href=\"post/git-notes#忽略特殊文件-gitignore\"></a></h2><ul>\n<li><p>忽略python编译产生的<code>.pyc</code>、<code>.pyo</code>、dist等文件或目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Python:</span></span><br><span class=\"line\">*.py[cod]</span><br><span class=\"line\">*.so</span><br><span class=\"line\">*.egg</span><br><span class=\"line\">*.egg-info</span><br><span class=\"line\">dist</span><br><span class=\"line\">build</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"配置别名\">配置别名<a href=\"post/git-notes#配置别名\"></a></h2><blockquote>\n<p>–global是针对当前用户起作用，如果不加只对当前仓库起作用</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global alias.lg \"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit\"</span><br><span class=\"line\"></span><br><span class=\"line\">git lg</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>配置文件位置：当前项目<code>.git/config</code></p>\n</li>\n<li><p>当前用户的Git配置文件，在用户主目录的<code>.gitconfig</code>，配置别名可修改这个文件，也可删除用命令重新配置。</p>\n</li>\n</ul>\n","prev":{"title":"linux(Ubuntu)笔记","link":"post/linux-notes"},"next":{"title":"VIM爬坡到半山腰的总结","link":"post/vim-note1"},"plink":"https://blog.xujiaji.com/post/git-notes/","toc":[{"title":"Git笔记","id":"Git笔记","index":"1","children":[{"title":"初始化git仓库","id":"初始化git仓库","index":"1.1","children":[{"title":"查看状态","id":"查看状态","index":"1.1.1"}]},{"title":"版本回退","id":"版本回退","index":"1.2"},{"title":"撤销修改","id":"撤销修改","index":"1.3"},{"title":"删除文件","id":"删除文件","index":"1.4"},{"title":"远程仓库","id":"远程仓库","index":"1.5"},{"title":"设置用户信息","id":"设置用户信息","index":"1.6"},{"title":"分支","id":"分支","index":"1.7"},{"title":"标签","id":"标签","index":"1.8"},{"title":"解决冲突","id":"解决冲突","index":"1.9"},{"title":"stash","id":"stash","index":"1.10"},{"title":"git pull和本地冲突","id":"git-pull和本地冲突","index":"1.11"},{"title":"克隆其他分支","id":"克隆其他分支","index":"1.12"},{"title":"强制覆盖远程","id":"强制覆盖远程","index":"1.13"},{"title":"忽略特殊文件.gitignore","id":"忽略特殊文件-gitignore","index":"1.14"},{"title":"配置别名","id":"配置别名","index":"1.15"}]}],"reward":true,"copyright":{"author":"xujiaji","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow noopener\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","link":"<a href=\"https://blog.xujiaji.com/post/git-notes/\" title=\"Git笔记\">https://blog.xujiaji.com/post/git-notes/</a>"}}