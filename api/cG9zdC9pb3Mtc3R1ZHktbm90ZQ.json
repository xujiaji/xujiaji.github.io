{"title":"iOS开发-零碎笔记","date":"2018-07-16T00:08:16.000Z","author":"xujiaji","slug":"ios-study-note","comments":true,"tags":["iOS","swift","学习","笔记"],"categories":["iOS"],"updated":"2018-11-02T07:20:12.000Z","content":"<p>记录一些iOS学习过程中的笔记<br><a id=\"more\"></a></p>\n<h2 id=\"创建项目目录结构\"><a href=\"#创建项目目录结构\" class=\"headerlink\" title=\"创建项目目录结构\"></a>创建项目目录结构</h2><ol>\n<li>AppDelegate.swift:生命周期及变量的定义</li>\n<li>ViewController.swift: MVC的C</li>\n<li>Assets.xcasset:放资源文件，如图片等</li>\n<li>info.plist：配置文件</li>\n<li>xxxTest: 单元测试</li>\n<li>Products:生成的文件</li>\n<li>Main.storyboard: 视图</li>\n</ol>\n<h2 id=\"关闭软键盘\"><a href=\"#关闭软键盘\" class=\"headerlink\" title=\"关闭软键盘\"></a>关闭软键盘</h2><blockquote>\n<p>关闭代码</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">textField.resignFirstResponder()</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>关闭方式1：<br>在Controller中重写touchesEnded()方法，然后在这里面关闭软件盘，意思是点击空白处关闭</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">touchesEnded</span><span class=\"params\">(<span class=\"number\">_</span> touches: Set&lt;UITouch&gt;, with event: UIEvent?)</span></span> &#123;</span><br><span class=\"line\">    name.resignFirstResponder()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>关闭方式2：<br>点击下一步时，关闭软键盘；<br>Controller实现UITextFieldDelegate协议；<br>实现UITextFieldDelegate协议中的textFieldShouldReturn方法；</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">textFieldShouldReturn</span><span class=\"params\">(<span class=\"number\">_</span> textField: UITextField)</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">    textField.resignFirstResponder()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"UIDatePicker选择时间后计算年龄\"><a href=\"#UIDatePicker选择时间后计算年龄\" class=\"headerlink\" title=\"UIDatePicker选择时间后计算年龄\"></a>UIDatePicker选择时间后计算年龄</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">calAge</span><span class=\"params\">(by datePicker: UIDatePicker)</span></span> -&gt; <span class=\"type\">Int</span>? &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> gregorian = <span class=\"type\">NSCalendar</span>(calendarIdentifier: .gregorian)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> now = <span class=\"type\">Date</span>()</span><br><span class=\"line\">    <span class=\"keyword\">let</span> components = gregorian?.components(<span class=\"type\">NSCalendar</span>.<span class=\"type\">Unit</span>.year, from: datePicker.date, to: now, options: <span class=\"type\">NSCalendar</span>.<span class=\"type\">Options</span>.<span class=\"keyword\">init</span>(rawValue: <span class=\"number\">0</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> components?.year</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"页面跳转，传递数据\"><a href=\"#页面跳转，传递数据\" class=\"headerlink\" title=\"页面跳转，传递数据\"></a>页面跳转，传递数据</h2><p>有两个Controller：ViewController和GalleryViewController。从ViewController跳转到GalleryViewController。<br>ViewController重写方法：prepare，该方法在页面跳转时会被调用，我们需要在里面判断是跳转到哪个页面。<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">prepare</span><span class=\"params\">(<span class=\"keyword\">for</span> segue: UIStoryboardSegue, sender: <span class=\"keyword\">Any</span>?)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 需要给Segue取名</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> segue.identifier == <span class=\"string\">\"GoToGallery\"</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> index = beautyPicker.selectedRow(inComponent: <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">var</span> imageName: <span class=\"type\">String</span>?</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> index &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">            imageName = <span class=\"string\">\"fangbingbing\"</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            imageName = <span class=\"string\">\"libingbing\"</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">            imageName = <span class=\"string\">\"wangfei\"</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">            imageName = <span class=\"string\">\"yangmi\"</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">            imageName = <span class=\"string\">\"zhouxu\"</span></span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            imageName = <span class=\"literal\">nil</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 得到下一个页面的Controller</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> vc = segue.destination <span class=\"keyword\">as</span>! <span class=\"type\">GalleryViewController</span></span><br><span class=\"line\">        vc.imageName = imageName</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"通过图片文件名设置图片\"><a href=\"#通过图片文件名设置图片\" class=\"headerlink\" title=\"通过图片文件名设置图片\"></a>通过图片文件名设置图片</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beautyImage.image = <span class=\"type\">UIImage</span>(named: imageName)</span><br></pre></td></tr></table></figure>\n<h2 id=\"unwind-segue关闭页面\"><a href=\"#unwind-segue关闭页面\" class=\"headerlink\" title=\"unwind segue关闭页面\"></a>unwind segue关闭页面</h2><p>关闭页面后，Controller可以获得上个页面传回来的值<br>该方法写在前一个页面<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@IBAction</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">closedPrePage</span><span class=\"params\">(segue: UIStoryboardSegue)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"closed\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"TableView下移一个状态栏的高度解决\"><a href=\"#TableView下移一个状态栏的高度解决\" class=\"headerlink\" title=\"TableView下移一个状态栏的高度解决\"></a>TableView下移一个状态栏的高度解决</h2><ol>\n<li><p>方法一</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> #available(iOS <span class=\"number\">11.0</span>, *) &#123;</span><br><span class=\"line\">    tableView.contentInsetAdjustmentBehavior = .never</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法二，内容上部分区域向上偏移一个状态栏的高度</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">collectionView?.contentInset.top = -<span class=\"type\">UIApplication</span>.shared.statusBarFrame.height</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"TableView-添加刷新\"><a href=\"#TableView-添加刷新\" class=\"headerlink\" title=\"TableView 添加刷新\"></a>TableView 添加刷新</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> refreshControl = <span class=\"type\">UIRefreshControl</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 初始化刷新</span></span><br><span class=\"line\">refreshControl.backgroundColor = <span class=\"type\">UIColor</span>.blue <span class=\"comment\">//设置刷新的背景颜色</span></span><br><span class=\"line\">refreshControl.attributedTitle = <span class=\"type\">NSAttributedString</span>(string: <span class=\"string\">\"刷新一下：\\(Data())\"</span>, attributes: [<span class=\"type\">NSAttributedStringKey</span>.foregroundColor: <span class=\"type\">UIColor</span>.white]) <span class=\"comment\">// 设置字体颜色</span></span><br><span class=\"line\">refreshControl.tintColor = <span class=\"type\">UIColor</span>.green <span class=\"comment\">// 加载菊花颜色</span></span><br><span class=\"line\">refreshControl.tintAdjustmentMode = .dimmed <span class=\"comment\">// 色彩调整模式</span></span><br><span class=\"line\">refreshControl.addTarget(<span class=\"keyword\">self</span>, action: #selector(addcount), <span class=\"keyword\">for</span>: .valueChanged) <span class=\"comment\">//添加方法目标</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加该刷新</span></span><br><span class=\"line\">tableView.refreshControl = refreshControl</span><br></pre></td></tr></table></figure>\n<p>刷新方法<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@objc</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">addcount</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    dataArrary.append(contentsOf: dataArrary)</span><br><span class=\"line\">    tableView.reloadData()</span><br><span class=\"line\">    refreshControl.endRefreshing()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"向项目添加字体\"><a href=\"#向项目添加字体\" class=\"headerlink\" title=\"向项目添加字体\"></a>向项目添加字体</h2><p><a href=\"https://developer.apple.com/documentation/uikit/text_display_and_fonts/adding_a_custom_font_to_your_app\" target=\"_blank\" rel=\"noopener\">https://developer.apple.com/documentation/uikit/text_display_and_fonts/adding_a_custom_font_to_your_app</a></p>\n<p>由于iOS的用的字体名称并不是文件名称，而是字体本身名称。<br>下面代码搜索所有字体，然后我们在控制台，找到多出来的名称。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> family: <span class=\"type\">String</span> <span class=\"keyword\">in</span> <span class=\"type\">UIFont</span>.familyNames</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(family)\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> names: <span class=\"type\">String</span> <span class=\"keyword\">in</span> <span class=\"type\">UIFont</span>.fontNames(forFamilyName: family)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"== \\(names)\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置tabbar-字体和字体大小\"><a href=\"#设置tabbar-字体和字体大小\" class=\"headerlink\" title=\"设置tabbar 字体和字体大小\"></a>设置tabbar 字体和字体大小</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.viewDidLoad()</span><br><span class=\"line\">    <span class=\"keyword\">let</span> appearance = <span class=\"type\">UITabBarItem</span>.appearance()</span><br><span class=\"line\">    appearance.setTitleTextAttributes([<span class=\"type\">NSAttributedStringKey</span>.font: <span class=\"type\">UIFont</span>(name: <span class=\"string\">\"Ubuntu-Light\"</span>, size: <span class=\"number\">9</span>)!], <span class=\"keyword\">for</span>: .normal)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"UIButton-isEnabled-false后图片按钮的背景图片被改变\"><a href=\"#UIButton-isEnabled-false后图片按钮的背景图片被改变\" class=\"headerlink\" title=\"UIButton.isEnabled = false后图片按钮的背景图片被改变\"></a>UIButton<code>.isEnabled = false</code>后图片按钮的背景图片被改变</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">UIButton</span>.adjustsImageWhenDisabled = <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"UITableView或UICollectionView被TabBar遮盖\"><a href=\"#UITableView或UICollectionView被TabBar遮盖\" class=\"headerlink\" title=\"UITableView或UICollectionView被TabBar遮盖\"></a>UITableView或UICollectionView被TabBar遮盖</h2><div class=\"article-img\"><p><img src=\"https://raw.githubusercontent.com/xujiaji/xujiaji.github.io/pictures/blog/ios-note/note-screen1.png\" alt=\"\"></p></div>\n<h2 id=\"UITableView调用reloadData导致移动到列表顶部失效\"><a href=\"#UITableView调用reloadData导致移动到列表顶部失效\" class=\"headerlink\" title=\"UITableView调用reloadData导致移动到列表顶部失效\"></a>UITableView调用<code>reloadData</code>导致移动到列表顶部失效</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">UIView</span>.animate(withDuration: <span class=\"number\">0</span>, animations: &#123;</span><br><span class=\"line\">    <span class=\"keyword\">self</span>.tableView.contentOffset = <span class=\"type\">CGPoint</span>.zero</span><br><span class=\"line\">&#125;, completion: &#123; <span class=\"number\">_</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"keyword\">self</span>.tableView.reloadData()</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"NavigationBar导致CollectionViewCell或TableViewCell偏移\"><a href=\"#NavigationBar导致CollectionViewCell或TableViewCell偏移\" class=\"headerlink\" title=\"NavigationBar导致CollectionViewCell或TableViewCell偏移\"></a>NavigationBar导致CollectionViewCell或TableViewCell偏移</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">self</span>.collectionView?.contentInsetAdjustmentBehavior = .automatic</span><br></pre></td></tr></table></figure>\n<h2 id=\"获取app版本\"><a href=\"#获取app版本\" class=\"headerlink\" title=\"获取app版本\"></a>获取app版本</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// 获取版本名</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> appVersion = <span class=\"type\">Bundle</span>.main.infoDictionary![<span class=\"string\">\"CFBundleShortVersionString\"</span>] <span class=\"keyword\">as</span>? <span class=\"type\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// 获取版本号</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> versionNumber = <span class=\"type\">Bundle</span>.main.infoDictionary![<span class=\"string\">\"CFBundleVersion\"</span>] <span class=\"keyword\">as</span>? <span class=\"type\">String</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"清理缓存\"><a href=\"#清理缓存\" class=\"headerlink\" title=\"清理缓存\"></a>清理缓存</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">clearCache</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 取出cache文件夹目录 缓存文件都在这个目录下</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> cachePath = <span class=\"type\">NSSearchPathForDirectoriesInDomains</span>(<span class=\"type\">FileManager</span>.<span class=\"type\">SearchPathDirectory</span>.cachesDirectory, <span class=\"type\">FileManager</span>.<span class=\"type\">SearchPathDomainMask</span>.userDomainMask, <span class=\"literal\">true</span>).first</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 取出文件夹下所有文件数组</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> fileArr = <span class=\"type\">FileManager</span>.<span class=\"keyword\">default</span>.subpaths(atPath: cachePath!)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 遍历删除</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> fileArr! &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> path = cachePath?.appendingFormat(<span class=\"string\">\"/\\(file)\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"type\">FileManager</span>.<span class=\"keyword\">default</span>.fileExists(atPath: path!) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> <span class=\"type\">FileManager</span>.<span class=\"keyword\">default</span>.removeItem(atPath: path!)</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"打开网页本软件的appstore\"><a href=\"#打开网页本软件的appstore\" class=\"headerlink\" title=\"打开网页本软件的appstore\"></a>打开网页本软件的appstore</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// App Store URL.</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> appStoreLink = <span class=\"string\">\"https://itunes.apple.com/cn/app/id1144351773?mt=8\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* First create a URL, then check whether there is an installed app that can</span></span><br><span class=\"line\"><span class=\"comment\"> open it on the device. */</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> url = <span class=\"type\">URL</span>(string: appStoreLink), <span class=\"type\">UIApplication</span>.shared.canOpenURL(url) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Attempt to open the URL.</span></span><br><span class=\"line\">    <span class=\"type\">UIApplication</span>.shared.<span class=\"keyword\">open</span>(url, options: [:], completionHandler: &#123;(success: <span class=\"type\">Bool</span>) <span class=\"keyword\">in</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> success &#123;</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">\"Launching \\(url) was successful\"</span>)</span><br><span class=\"line\">        &#125;&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置圆形展示图像\"><a href=\"#设置圆形展示图像\" class=\"headerlink\" title=\"设置圆形展示图像\"></a>设置圆形展示图像</h2><ol>\n<li>设置<code>UIImageView</code>宽度和高度，假如设置为60*60</li>\n<li>设置运行时属性，设置圆弧为30（正方形边长度一半）<img src=\"https://raw.githubusercontent.com/xujiaji/xujiaji.github.io/pictures/blog/ios-note/20181102144521.png\" alt=\"\"></li>\n<li>勾选<code>Clip to Bounds</code>，<img src=\"https://raw.githubusercontent.com/xujiaji/xujiaji.github.io/pictures/blog/ios-note/20181102145029.png\" alt=\"\"></li>\n</ol>\n","prev":{"title":"iOS用UISegmentedControl设计一个顶部分页导航-Swift（翻译文）","slug":"ios-uisegmented-design"},"next":{"title":"Swift学习笔记","slug":"swift-study-note"},"link":"https://blog.xujiaji.com/post/ios-study-note/","toc":[{"title":"创建项目目录结构","id":"创建项目目录结构","index":"1"},{"title":"关闭软键盘","id":"关闭软键盘","index":"2"},{"title":"UIDatePicker选择时间后计算年龄","id":"UIDatePicker选择时间后计算年龄","index":"3"},{"title":"页面跳转，传递数据","id":"页面跳转，传递数据","index":"4"},{"title":"通过图片文件名设置图片","id":"通过图片文件名设置图片","index":"5"},{"title":"unwind segue关闭页面","id":"unwind-segue关闭页面","index":"6"},{"title":"TableView下移一个状态栏的高度解决","id":"TableView下移一个状态栏的高度解决","index":"7"},{"title":"TableView 添加刷新","id":"TableView-添加刷新","index":"8"},{"title":"向项目添加字体","id":"向项目添加字体","index":"9"},{"title":"设置tabbar 字体和字体大小","id":"设置tabbar-字体和字体大小","index":"10"},{"title":"UIButton<code>.isEnabled = false</code>后图片按钮的背景图片被改变","id":"UIButton-isEnabled-false后图片按钮的背景图片被改变","index":"11"},{"title":"UITableView或UICollectionView被TabBar遮盖","id":"UITableView或UICollectionView被TabBar遮盖","index":"12"},{"title":"UITableView调用<code>reloadData</code>导致移动到列表顶部失效","id":"UITableView调用reloadData导致移动到列表顶部失效","index":"13"},{"title":"NavigationBar导致CollectionViewCell或TableViewCell偏移","id":"NavigationBar导致CollectionViewCell或TableViewCell偏移","index":"14"},{"title":"获取app版本","id":"获取app版本","index":"15"},{"title":"清理缓存","id":"清理缓存","index":"16"},{"title":"打开网页本软件的appstore","id":"打开网页本软件的appstore","index":"17"},{"title":"设置圆形展示图像","id":"设置圆形展示图像","index":"18"}],"copyright":{"author":"xujiaji","link":"<a href=\"https://blog.xujiaji.com/post/ios-study-note/\" title=\"iOS开发-零碎笔记\">https://blog.xujiaji.com/post/ios-study-note/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow noopener\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"2018年7月16日"},"reward":true}