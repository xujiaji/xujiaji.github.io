{"title":"XMVP：一个通过泛型实现的MVP框架2年的演化路","date":"2018-09-21T10:22:15.000Z","author":"xujiaji","thumbnail":"https://raw.githubusercontent.com/xujiaji/xujiaji.github.io/pictures/blog/xmvp/banner.png","slug":"xmvp-framework","comments":true,"tags":["Android","Library"],"categories":["Android"],"updated":"2018-12-25T15:23:22.697Z","content":"<blockquote>\n<p>XMVP框架是我的第一个框架，刚从Android起步第一次了解MVP模式时决心写一个自己的东西框架，到现在已运用在我写的多个项目中。虽然两年了，但核心的思路没有改变，到现在变换也不是太多，精简了一些代码，添加了一些功能。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"起步2016\">起步2016<a href=\"post/xmvp-framework#起步2016\"></a></h2><p>这是个刚出社会找工作痛苦的时期，我个人不太喜欢生活中麻烦的事情。安静是我的本性，于是想写个属于自己的框架，为未来做些铺垫。于是，便有了XMVP，名字“X”是臭不要脸的加上了自己名字的开头字母。</p>\n<h4 id=\"目标\">目标<a href=\"post/xmvp-framework#目标\"></a></h4><p><strong>该框架的目标很简单，为了省掉View、Model、Presenter层之间的依赖实现过程，通过简单的配置，框架自动实现依赖关系</strong></p>\n<p>实现的原理：获取配置的泛型类型，通过反射实例化P层和M层。</p>\n<h4 id=\"代码\">代码<a href=\"post/xmvp-framework#代码\"></a></h4><p><strong>1.</strong> 关键能让我开始做这个框架的核心代码如下：</p>\n<blockquote>\n<p>传入对象的Class和需要过滤泛型得的匹配的对象，然后遍历<code>klass</code>中配置的泛型判断是不是<code>filterClass</code>的子类，如果是则找到了配置的泛型类型。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">Class&lt;T&gt; <span class=\"title\">getGenericClass</span><span class=\"params\">(Class&lt;?&gt; klass, Class&lt;?&gt; filterClass)</span> </span>&#123;</span><br><span class=\"line\">    Type type = klass.getGenericSuperclass(); <span class=\"comment\">// 获取父类Class类型，它包含了所配置的泛型类型</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (type == <span class=\"keyword\">null</span> || !(type <span class=\"keyword\">instanceof</span> ParameterizedType)) <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>; <span class=\"comment\">// 判断是否是泛型类型</span></span><br><span class=\"line\">    ParameterizedType parameterizedType = (ParameterizedType) type;</span><br><span class=\"line\">    Type[] types = parameterizedType.getActualTypeArguments(); <span class=\"comment\">// 由于一个类可能不止配置了一个泛型，获取该对象所有泛型类型</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Type t : types) &#123;</span><br><span class=\"line\">        Class&lt;T&gt; tClass = (Class&lt;T&gt;) t;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (filterClass.isAssignableFrom(tClass)) &#123; <span class=\"comment\">// 通过filterClass找到需要的目标类型</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> tClass;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>2.</strong> 使用也非常简单，精简代码如下所示，4步配置就实现了MVP</p>\n<ul>\n<li>首先定义契约（Contract），定义View、Model、Presenter的接口，并且都需要继承自<code>XContract</code></li>\n<li>创建Model实现类</li>\n<li>创建Presenter实现类继承<code>XBasePresenter</code>，泛型中关联View接口和Model实现类</li>\n<li>创建View实现类继承<code>XBaseActivity</code>或其子类，泛型中关联Presenter实现类</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 契约</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">HomeContract</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Presenter</span> <span class=\"keyword\">extends</span> <span class=\"title\">XContract</span>.<span class=\"title\">Presenter</span></span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">View</span> <span class=\"keyword\">extends</span> <span class=\"title\">XContract</span>.<span class=\"title\">View</span></span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Model</span> <span class=\"keyword\">extends</span> <span class=\"title\">XContract</span>.<span class=\"title\">Model</span> </span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// M层实现</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomeModel</span> <span class=\"keyword\">implements</span> <span class=\"title\">HomeContract</span>.<span class=\"title\">Model</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// P层实现</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomePresenter</span></span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"keyword\">extends</span> <span class=\"title\">XBasePresenter</span>&lt;<span class=\"title\">HomeContract</span>.<span class=\"title\">View</span>, <span class=\"title\">HomeModel</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"keyword\">implements</span> <span class=\"title\">HomeContract</span>.<span class=\"title\">Presenter</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// V层实现</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomeActivity</span></span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"keyword\">extends</span> <span class=\"title\">XBaseActivity</span>&lt;<span class=\"title\">HomePresenter</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  <span class=\"keyword\">implements</span> <span class=\"title\">HomeContract</span>.<span class=\"title\">View</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>3.</strong> 最初XMVP框架做出时写的一篇文章 <a href=\"https://www.jianshu.com/p/7c71c0d6c150\" target=\"_blank\" rel=\"noopener\">封了一个Android MVP框架，就叫XMVP吧！</a></p>\n<hr>\n<blockquote>\n<p>就这样，第一阶段宣告完毕，然后就是优化和修复一些bug，当然上面的<code>getGenericClass</code>这个方法也是后期优化过的结果。</p>\n</blockquote>\n<h2 id=\"想偷懒了就开发了MVPManager插件，快速生成XMVP代码\">想偷懒了就开发了MVPManager插件，快速生成XMVP代码<a href=\"post/xmvp-framework#想偷懒了就开发了MVPManager插件，快速生成XMVP代码\"></a></h2><p><img src=\"https://raw.githubusercontent.com/xujiaji/MVPManager/master/display/banner.png\" alt=\"\"><br>也就是<code>XMVP</code>框架开发出来也就1个月之内的事情吧！这时感觉写契约（Contract），写<code>XMVP</code>各个实现类，都是重复的劳动力，每一个新的界面就得去创建这么些文件太过辛苦。结果虽然变得有条理有模块，但是工作量有些重复和增加，有些时候配置泛型忘了还需要看之前是怎么配置的。</p>\n<p>当时其实也有创建MVP文件的插件之类的东西，但是不符合<code>XMVP</code>的实情，泛型还是得自己动手，于是决心自己写一个<code>intellij</code>插件，当然在<code>AS</code>中也能使用。</p>\n<h4 id=\"创建MVP代码截图，这是最新的创建代码界面的截图\">创建MVP代码截图，这是最新的创建代码界面的截图<a href=\"post/xmvp-framework#创建MVP代码截图，这是最新的创建代码界面的截图\"></a></h4><blockquote>\n<p>在1.0的基础上，增加了可将同一个模块放一个包中或将MVP分在对应的包中的选项；增加了可以不是XMVP框架的情况下使用</p>\n</blockquote>\n<div class=\"article-img\"><p><img src=\"https://github.com/xujiaji/MVPManager/raw/master/display/update_2_0_0.png\" alt=\"\" data-zoomable=\"\"></p></div>\n<h4 id=\"这是一张动态图，是一张旧版本的演示图。只需要和上面的截图结合来看一下哦\">这是一张动态图，是一张旧版本的演示图。只需要和上面的截图结合来看一下哦<a href=\"post/xmvp-framework#这是一张动态图，是一张旧版本的演示图。只需要和上面的截图结合来看一下哦\"></a></h4><div class=\"article-img\"><p><img src=\"https://github.com/xujiaji/MVPManager/raw/master/display/edit_MVPManager.gif\" alt=\"\" data-zoomable=\"\"></p></div>\n<h4 id=\"最后还有个逆向增加或删除XMVP契约中定义方法的功能\">最后还有个逆向增加或删除XMVP契约中定义方法的功能<a href=\"post/xmvp-framework#最后还有个逆向增加或删除XMVP契约中定义方法的功能\"></a></h4><blockquote>\n<p>会同时更新实现类的方法，本人是写出这个功能，但几乎不用的啦</p>\n</blockquote>\n<div class=\"article-img\"><p><img src=\"https://github.com/xujiaji/MVPManager/raw/master/display/open_change_MVPManager.gif\" alt=\"\" data-zoomable=\"\"></p></div>\n<h4 id=\"刚刚开发出来MVPManager的时候，我也写了篇文章介绍-这个AS插件能帮你快速管理MVP\">刚刚开发出来MVPManager的时候，我也写了篇文章介绍 这个AS插件能帮你快速管理MVP<a href=\"post/xmvp-framework#刚刚开发出来MVPManager的时候，我也写了篇文章介绍-这个AS插件能帮你快速管理MVP\"></a></h4><hr>\n<blockquote>\n<p>就这样，第二阶段结束了。其主要目的就是为了解决MVP重复逻辑的代码量问题</p>\n</blockquote>\n<h2 id=\"实践中的更新\">实践中的更新<a href=\"post/xmvp-framework#实践中的更新\"></a></h2><p>在不断的实践运用中也发现了很多没有考虑到或者忽略的问题，其中最映像深刻的不过于有次上线应用的时候，混淆居然会导致无法创建Presenter熬夜找了很久。</p>\n<p>还有就是忽略了Fragment有app包和v4包两个地方，框架中只写了一个，考虑的都比较片面。</p>\n<p>只有在实践中才能真正的考验，一直以来大概就我和少数的小伙伴在使用。虽然用的比较少，但是写出来后就要对它负责嘛！</p>\n<h4 id=\"使用中的一些个人技巧\">使用中的一些个人技巧<a href=\"post/xmvp-framework#使用中的一些个人技巧\"></a></h4><p><strong>1.</strong> 很多时候，Activity和Presenter，更或者Model都有共用的地方，此时我们需要作出提取抽象。于是我们就需要继承<code>XBaseActivity</code>、<code>XBaseFragment</code>、<code>XBasePresenter</code>再做一层抽象，这样如果以后不想用<code>XMVP</code>框架有更好的选择也更好替换哈。如下所示：</p>\n<blockquote>\n<p>BaseActivity.java</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BaseActivity</span>&lt;<span class=\"title\">T</span> <span class=\"keyword\">extends</span> <span class=\"title\">XBasePresenter</span>&gt; <span class=\"keyword\">extends</span> <span class=\"title\">XBaseActivity</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onInitCircle</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.onInitCircle();</span><br><span class=\"line\">    ButterKnife.bind(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>BasePresenter.java</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BasePresenter</span>&lt;<span class=\"title\">T</span> <span class=\"keyword\">extends</span> <span class=\"title\">XContract</span>.<span class=\"title\">View</span>, <span class=\"title\">E</span> <span class=\"keyword\">extends</span> <span class=\"title\">XContract</span>.<span class=\"title\">Model</span>&gt; <span class=\"keyword\">extends</span> <span class=\"title\">XBasePresenter</span>&lt;<span class=\"title\">T</span>, <span class=\"title\">E</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> CompositeDisposable mCompositeDisposable;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">end</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.end();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mCompositeDisposable != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            mCompositeDisposable.clear();</span><br><span class=\"line\">            mCompositeDisposable = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>向上面这样，我们通过一个中间层，处理一些我们需要统一调用的或处理的一些东西</p>\n<p><strong>2.</strong> 对于Presenter回调Model处理后返回的数据监听，我们可以定义一个通用监听接口，如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">GenericListener</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">success</span><span class=\"params\">(T t)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">error</span><span class=\"params\">(<span class=\"keyword\">int</span> code, String err)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>并且，我们可以对这个接口进行实现，我们可以统一对错误信息做些提示或处理</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GenericListenerImp</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"keyword\">implements</span> <span class=\"title\">GenericListener</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">GenericListenerImp</span><span class=\"params\">(<span class=\"comment\">/*可以传入进来base view或base presenter，如果有错误可以调用对应方法统一处理*/</span>)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">error</span><span class=\"params\">(<span class=\"keyword\">int</span> code, String err)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 对错误做出统一处理</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>3.</strong> 我们最常用的就是刷新加载列表了，几乎所有app中都需要，并且在同一个应用中的加载逻辑都是一样的，于是我们可以将其抽象出来，使用的时候会非常方便。</p>\n<blockquote>\n<p>首先定义一个基础刷新契约，每一个有刷新的view的接口都直接从这里继承</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">BaseRefreshContract</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Presenter</span> <span class=\"keyword\">extends</span> <span class=\"title\">XContract</span>.<span class=\"title\">Presenter</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 请求数据</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">requestLoadListData</span><span class=\"params\">(<span class=\"keyword\">int</span> page)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 请求更新列表数据</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">requestUpdateListData</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">View</span> &lt;<span class=\"title\">X</span>&gt; <span class=\"keyword\">extends</span> <span class=\"title\">XContract</span>.<span class=\"title\">View</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 更新列表成功</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">updateListSuccess</span><span class=\"params\">(List&lt;X&gt; datas, <span class=\"keyword\">boolean</span> isEnd)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 更新失败</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">updateListFail</span><span class=\"params\">(String err)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 加载数据成功</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">loadListDataSuccess</span><span class=\"params\">(List&lt;X&gt; datas, <span class=\"keyword\">int</span> currentPage, <span class=\"keyword\">boolean</span> isEnd)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 加载数据失败</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@param</span> err</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">loadListDataFail</span><span class=\"params\">(String err)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 数据已经被加载完</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">loadListDateOver</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>然后抽象View，这里以Activity为例，Fragment一致。我使用了<code>SwipeRefreshLayout</code>作为刷新，<code>BaseRecyclerViewAdapterHelper</code>处理填充数据和加载数据</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BaseRefreshActivity</span>&lt;<span class=\"title\">E</span> ,<span class=\"title\">X</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseQuickAdapter</span>&lt;<span class=\"title\">E</span>, <span class=\"title\">BaseViewHolder</span>&gt;, <span class=\"title\">T</span> <span class=\"keyword\">extends</span> <span class=\"title\">XBasePresenter</span>&gt; <span class=\"keyword\">extends</span> <span class=\"title\">BaseActivity</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"keyword\">implements</span></span></span><br><span class=\"line\"><span class=\"class\">        <span class=\"title\">BaseRefreshContract</span>.<span class=\"title\">View</span>&lt;<span class=\"title\">E</span>&gt;,</span></span><br><span class=\"line\"><span class=\"class\">        <span class=\"title\">BaseQuickAdapter</span>.<span class=\"title\">RequestLoadMoreListener</span>,</span></span><br><span class=\"line\"><span class=\"class\">        <span class=\"title\">SwipeRefreshLayout</span>.<span class=\"title\">OnRefreshListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> currentPage;<span class=\"comment\">//当前的页面</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> X mAdapter;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">boolean</span> isEnd;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> SwipeRefreshLayout swipeLayout;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> RecyclerView mRecyclerView;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onInitCircle</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onInitCircle();</span><br><span class=\"line\">        mAdapter = getAdapter();</span><br><span class=\"line\">        mRecyclerView = getRecyclerView();</span><br><span class=\"line\">        swipeLayout = getSwipeLayout();</span><br><span class=\"line\">        swipeLayout.setOnRefreshListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        mAdapter.setOnLoadMoreListener(<span class=\"keyword\">this</span>, mRecyclerView);</span><br><span class=\"line\">        mRecyclerView.setAdapter(mAdapter);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> X <span class=\"title\">getAdapter</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> SwipeRefreshLayout <span class=\"title\">getSwipeLayout</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> RecyclerView <span class=\"title\">getRecyclerView</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 更新列表成功</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateListSuccess</span><span class=\"params\">(List&lt;E&gt; datas, <span class=\"keyword\">boolean</span> isEnd)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.isEnd = isEnd;</span><br><span class=\"line\">        currentPage = <span class=\"number\">1</span>;</span><br><span class=\"line\">        mAdapter.setNewData(datas);</span><br><span class=\"line\">        swipeLayout.setRefreshing(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isEnd) &#123;</span><br><span class=\"line\">            loadListDateOver();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            mAdapter.setEnableLoadMore(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            mAdapter.loadMoreComplete();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 更新失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateListFail</span><span class=\"params\">(String err)</span> </span>&#123;</span><br><span class=\"line\">        swipeLayout.setRefreshing(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        mAdapter.setEnableLoadMore(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        ToastUtil.getInstance().showLongT(err);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 加载数据成功</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadListDataSuccess</span><span class=\"params\">(List&lt;E&gt; datas, <span class=\"keyword\">int</span> currentPage, <span class=\"keyword\">boolean</span> isEnd)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.currentPage = currentPage;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.isEnd = isEnd;</span><br><span class=\"line\">        mAdapter.addData(datas);</span><br><span class=\"line\">        swipeLayout.setEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        mAdapter.loadMoreComplete();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 加载数据失败</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> err</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadListDataFail</span><span class=\"params\">(String err)</span> </span>&#123;</span><br><span class=\"line\">        swipeLayout.setEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        mAdapter.loadMoreFail();</span><br><span class=\"line\">        ToastUtil.getInstance().showLongT(err);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 数据已经被加载完</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadListDateOver</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        mAdapter.loadMoreEnd();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onRefresh</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!swipeLayout.isRefreshing())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            swipeLayout.setRefreshing(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        getPresenter().requestUpdateListData();</span><br><span class=\"line\">        mAdapter.setEnableLoadMore(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadMoreRequested</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isEnd) &#123;</span><br><span class=\"line\">            loadListDateOver();</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        swipeLayout.setEnabled(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        getPresenter().requestLoadListData(++currentPage);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> BaseRefreshContract.<span class=\"function\">Presenter <span class=\"title\">getPresenter</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (presenter <span class=\"keyword\">instanceof</span> BaseRefreshContract.Presenter) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>  (BaseRefreshContract.Presenter) presenter;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"presenter please extends BaseRefreshContract.Presenter\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用：定义一个列表页面的契约</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ArticleDetailContract</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">View</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseRefreshContract</span>.<span class=\"title\">View</span>&lt;<span class=\"title\">CircleMsgEntity</span>.<span class=\"title\">CommentBean</span>&gt; </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Presenter</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseRefreshContract</span>.<span class=\"title\">Presenter</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Model</span> <span class=\"keyword\">extends</span> <span class=\"title\">XContract</span>.<span class=\"title\">Model</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">catArticleDetails</span><span class=\"params\">(<span class=\"keyword\">int</span> articleId, <span class=\"keyword\">int</span> page, CompositeDisposable cd, NetRequestListener&lt;Result&lt;CircleMsgEntity&gt;&gt; listener)</span></span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用：View实现层，由于这是一个公司项目中的类，省略的所有的无关代码<br><code>CircleMsgEntity.CommentBean</code> 是一个Adapter(ArticleCommentAdapter)填充的实体类<br><code>ArticleCommentAdapter</code> 是一个继承BaseRecyclerViewAdapterHelper框架中的<code>BaseQuickAdapter</code>的类，并且该类是这样的：<code>public class ArticleCommentAdapter extends BaseQuickAdapter&lt;CircleMsgEntity.CommentBean, BaseViewHolder&gt;</code> 必须保证Activity第一个泛型和Adapter的第一个泛型类型一致</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ArticleDetailActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseRefreshActivity</span>&lt;<span class=\"title\">CircleMsgEntity</span>.<span class=\"title\">CommentBean</span>, <span class=\"title\">ArticleCommentAdapter</span>, <span class=\"title\">ArticleDetailPresenter</span>&gt; <span class=\"keyword\">implements</span> <span class=\"title\">ArticleDetailContract</span>.<span class=\"title\">View</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@BindView</span>(R.id.recycler)</span><br><span class=\"line\">    RecyclerView recycler;</span><br><span class=\"line\">    <span class=\"meta\">@BindView</span>(R.id.refresh)</span><br><span class=\"line\">    SwipeRefreshLayout refresh;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onInitCircle</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onInitCircle();</span><br><span class=\"line\">        onRefresh();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">layoutId</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> R.layout.activity_article_detail;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> ArticleCommentAdapter <span class=\"title\">getAdapter</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ArticleCommentAdapter(ArticleCommentAdapter.TYPE_NORMAL);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> SwipeRefreshLayout <span class=\"title\">getSwipeLayout</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        refresh.setColorSchemeResources(R.color.yellow);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> refresh;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> RecyclerView <span class=\"title\">getRecyclerView</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        recycler.setLayoutManager(<span class=\"keyword\">new</span> LinearLayoutManager(<span class=\"keyword\">this</span>));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> recycler;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用： Presenter实现层</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ArticleDetailPresenter</span> <span class=\"keyword\">extends</span> <span class=\"title\">BasePresenter</span>&lt;<span class=\"title\">ArticleDetailContract</span>.<span class=\"title\">View</span>,<span class=\"title\">ArticleDetailModel</span>&gt; <span class=\"keyword\">implements</span> <span class=\"title\">ArticleDetailContract</span>.<span class=\"title\">Presenter</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">start</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.start();</span><br><span class=\"line\">        mCompositeDisposable = <span class=\"keyword\">new</span> CompositeDisposable();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">requestLoadListData</span><span class=\"params\">(<span class=\"keyword\">int</span> page)</span> </span>&#123;</span><br><span class=\"line\">        model.catArticleDetails(view.getArticleId(), page, mCompositeDisposable, <span class=\"keyword\">new</span> NetRequestListener&lt;Result&lt;CircleMsgEntity&gt;&gt;() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">success</span><span class=\"params\">(Result&lt;CircleMsgEntity&gt; circleMsgEntityResult)</span> </span>&#123;</span><br><span class=\"line\">                ResultListBean&lt;List&lt;CircleMsgEntity.CommentBean&gt;&gt; resultListBean = circleMsgEntityResult.getData().getCommentList();</span><br><span class=\"line\">                view.loadListDataSuccess(resultListBean.getList(), resultListBean.getPage(), resultListBean.getPage() &gt;= resultListBean.getPagecount());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">error</span><span class=\"params\">(String err)</span> </span>&#123;</span><br><span class=\"line\">                view.loadListDataFail(err);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">requestUpdateListData</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        model.catArticleDetails(view.getArticleId(), <span class=\"number\">1</span>, mCompositeDisposable, <span class=\"keyword\">new</span> NetRequestListener&lt;Result&lt;CircleMsgEntity&gt;&gt;() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">success</span><span class=\"params\">(Result&lt;CircleMsgEntity&gt; circleMsgEntityResult)</span> </span>&#123;</span><br><span class=\"line\">                ResultListBean&lt;List&lt;CircleMsgEntity.CommentBean&gt;&gt; resultListBean = circleMsgEntityResult.getData().getCommentList();</span><br><span class=\"line\">                view.updateListSuccess(resultListBean.getList(), resultListBean.getPage() &gt;= resultListBean.getPagecount());</span><br><span class=\"line\">                view.displayArticleDetail(circleMsgEntityResult.getData());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">error</span><span class=\"params\">(String err)</span> </span>&#123;</span><br><span class=\"line\">                view.updateListFail(err);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Model层，去请求列表数据</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ArticleDetailModel</span> <span class=\"keyword\">implements</span> <span class=\"title\">ArticleDetailContract</span>.<span class=\"title\">Model</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">catArticleDetails</span><span class=\"params\">(<span class=\"keyword\">int</span> articleId, <span class=\"keyword\">int</span> page, CompositeDisposable cd, NetRequestListener&lt;Result&lt;CircleMsgEntity&gt;&gt; listener)</span> </span>&#123;</span><br><span class=\"line\">        Observer&lt;Result&lt;CircleMsgEntity&gt;&gt; observer = ModelHelper.getObserver(cd, listener, <span class=\"keyword\">true</span>); <span class=\"comment\">// 对rxjava返回的数据进行统一处理</span></span><br><span class=\"line\">        Http.getInstance().getArticleDetails(articleId, page, observer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样，我们就可以不断的复用<code>BaseRefreshActivity</code>、<code>ArticleDetailContract</code>来让刷新加载统一，当然在您实际的使用过程中肯定还需要调整。这里只给我了我自己的一些思路和实现方式。</p>\n<blockquote>\n<p>如果我们需要其他的抽象时，只需要注意像刷新一样将泛型继承关系标准上就可以啦。如果Model也可以抽取出来，复用时只需要继承抽象出来的Model。</p>\n</blockquote>\n<h2 id=\"目前\">目前<a href=\"post/xmvp-framework#目前\"></a></h2><p>目前XMVP框架已更新到<code>1.2.2</code>，废弃了一些以前的方法（当然现在还能用）。添加了更多View层的辅助方法，为了偷个懒，就直接展示新增的方法代码啦！</p>\n<blockquote>\n<p>基本周期</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * author: xujiaji</span></span><br><span class=\"line\"><span class=\"comment\"> * created on: 2018/9/4 10:57</span></span><br><span class=\"line\"><span class=\"comment\"> * description: 定义View相关周期 &lt;br /&gt; Define View related Cycle</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">XViewCycle</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 在 super &#123;<span class=\"doctag\">@link</span> android.app.Activity#onCreate(Bundle)&#125;之前被调用              &lt;br /&gt;  will be called before super class &#123;<span class=\"doctag\">@link</span> android.app.Activity#onCreate(Bundle)&#125; called</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onBeforeCreateCircle</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 在 super &#123;<span class=\"doctag\">@link</span> android.app.Activity#onCreate(Bundle)&#125;之前被调用，并且有Bundle &lt;br /&gt;  will be called before super class &#123;<span class=\"doctag\">@link</span> android.app.Activity#onCreate(Bundle)&#125; called</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> savedInstanceState 该参数不可能为null                                  &lt;br /&gt; this parameter cannot be null</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onBundleHandle</span><span class=\"params\">(@NonNull Bundle savedInstanceState)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取布局的id                                &lt;br /&gt; get layout id</span></span><br><span class=\"line\"><span class=\"comment\">     * 在 &#123;<span class=\"doctag\">@link</span> #onBeforeCreateCircle &#125;之后被调用 &lt;br /&gt; will be called after &#123;<span class=\"doctag\">@link</span> #onBeforeCreateCircle &#125; called</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> xml布局id                         &lt;br /&gt; xml layout id</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">layoutId</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     *  在这里面进行初始化                    &lt;br /&gt; initialize here</span></span><br><span class=\"line\"><span class=\"comment\">     *  在 &#123;<span class=\"doctag\">@link</span> #layoutId()&#125; 之后被调用   &lt;br /&gt; will be called after &#123;<span class=\"doctag\">@link</span> #layoutId()&#125; called</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onInitCircle</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 这里面写监听事件                       &lt;br /&gt; write listens event here</span></span><br><span class=\"line\"><span class=\"comment\">     * 在 &#123;<span class=\"doctag\">@link</span> #onInitCircle()&#125; 之后被调用 &lt;br /&gt; will be called after &#123;<span class=\"doctag\">@link</span> #onInitCircle()&#125; called</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onListenerCircle</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Activiy中</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * author: xujiaji</span></span><br><span class=\"line\"><span class=\"comment\"> * created on: 2018/9/11 15:05</span></span><br><span class=\"line\"><span class=\"comment\"> * description: 定义Activity View相关周期 &lt;br /&gt; Define Activity View related Cycle</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">XActivityCycle</span> <span class=\"keyword\">extends</span> <span class=\"title\">XViewCycle</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 处理上个页面传递过来的数据 &lt;br /&gt; Handle the data passed from the previous page</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onIntentHandle</span><span class=\"params\">(@NonNull Intent intent)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Fragment中</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * author: xujiaji</span></span><br><span class=\"line\"><span class=\"comment\"> * created on: 2018/9/4 10:57</span></span><br><span class=\"line\"><span class=\"comment\"> * description: 定义Fragment View相关周期 &lt;br /&gt; Define Fragment View related Cycle</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">XFragViewCycle</span> <span class=\"keyword\">extends</span> <span class=\"title\">XViewCycle</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 处理&#123;<span class=\"doctag\">@link</span> Fragment#getArguments()&#125; 的值，如果有才会调用  &lt;br /&gt; Handle the value of &#123;<span class=\"doctag\">@link</span> Fragment#getArguments()&#125; , if it is there, it will be called</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> bundle</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onArgumentsHandle</span><span class=\"params\">(@NonNull Bundle bundle)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onVisible</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onInvisible</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onLazyLoad</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 忽略&#123;<span class=\"doctag\">@link</span> #isFirstLoad() &#125;的值，强制刷新数据，但仍要满足 &#123;<span class=\"doctag\">@link</span> #isFragmentVisible()&#125; &amp;&amp; &#123;<span class=\"doctag\">@link</span> #isPrepared()&#125; &lt;br /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * Ignore the value of &#123;<span class=\"doctag\">@link</span> #isFirstLoad() &#125; to force refresh data, but still satisfy &#123;<span class=\"doctag\">@link</span> #isFragmentVisible()&#125; &amp;&amp; &#123;<span class=\"doctag\">@link</span> #isPrepared()&#125;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setForceLoad</span><span class=\"params\">(<span class=\"keyword\">boolean</span> forceLoad)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">isForceLoad</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">isPrepared</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">isFirstLoad</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">isFragmentVisible</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 是否是在ViewPager中，默认为true</span></span><br><span class=\"line\"><span class=\"comment\">     * whether in ViewPager, default is true</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">isInViewPager</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到Fragment中定义的方法是比较多的，因为由于懒加载比较常用，新增了懒加载。我们如果需要加载数据，可直接在<code>onLazyLoad()</code>方法中进行。</p>\n<blockquote>\n<p>需要注意：如果Fragment不是和ViewPager结合，需要将<code>isInViewPager</code>返回false，默认返回的true。如果不这样，可能会导致通过FragmentManger提交的Fragment无法调用到<code>onLazyLoad</code>方法。</p>\n</blockquote>\n<h2 id=\"最后\">最后<a href=\"post/xmvp-framework#最后\"></a></h2><p>通过写这个框架学到了思考很多东西，并且后期也会继续更新，我自己写项目中也在使用。可能有些地方考虑的不充足，谢谢大家也可以提建议。当然这只是MVP的一种实现思路，其他的还是有很多的，这里大家也许都有一定了解哈。</p>\n<p>XMVP地址：<a href=\"https://github.com/xujiaji/XMVP\" target=\"_blank\" rel=\"noopener\">https://github.com/xujiaji/XMVP</a></p>\n<p>欢迎大家Star、Fork、PR (〃’▽’〃)</p>\n","prev":{"title":"一个项目如何编译多个不同签名、包名、资源等，的apk？","slug":"android-project-one-for-more"},"next":{"title":"iOS Objective-C Learn Note","slug":"iOS-Objective-C-Learn"},"link":"https://blog.xujiaji.com/post/xmvp-framework/","toc":[{"title":"起步2016","id":"起步2016","index":"1"},{"title":"想偷懒了就开发了MVPManager插件，快速生成XMVP代码","id":"想偷懒了就开发了MVPManager插件，快速生成XMVP代码","index":"2"},{"title":"实践中的更新","id":"实践中的更新","index":"3"},{"title":"目前","id":"目前","index":"4"},{"title":"最后","id":"最后","index":"5"}],"reward":true,"copyright":{"author":"xujiaji","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow noopener\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","link":"<a href=\"https://blog.xujiaji.com/post/xmvp-framework/\" title=\"XMVP：一个通过泛型实现的MVP框架2年的演化路\">https://blog.xujiaji.com/post/xmvp-framework/</a>"}}