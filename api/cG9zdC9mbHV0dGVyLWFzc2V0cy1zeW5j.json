{"title":"Flutter资源自动生成配置脚本","date":"2019-11-27T09:36:09.000Z","author":"xujiaji","thumbnail":"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/flutter_pubspec/banner.jpg","link":"post/flutter-assets-sync","comments":true,"tags":["Flutter","Python","工具"],"categories":["Flutter"],"updated":"2019-11-27T16:18:15.683Z","content":"<h1 id=\"Flutter资源自动生成配置\">Flutter资源自动生成配置<a href=\"post/flutter-assets-sync#Flutter资源自动生成配置\"></a></h1><p>项目地址：<a href=\"https://github.com/xujiaji/FlutterAssetsSync/\" target=\"_blank\" rel=\"noopener\">https://github.com/xujiaji/FlutterAssetsSync/</a></p>\n<h2 id=\"简介\">简介<a href=\"post/flutter-assets-sync#简介\"></a></h2><p>各位小伙伴都知道flutter的资源配置需要在<code>pubspec.yaml</code>中配置资源路径。</p>\n<p>我想吧！这么麻烦的事情因该有做贡献的同学提供插件吧！果不其然我找到一个叫<a href=\"https://github.com/Leo0618/flutter-img-sync\" target=\"_blank\" rel=\"noopener\">flutter-img-sync</a>的插件，可以快速添加到配置中，并且生成一个类似android的R文件，方便快速准确的调用。</p>\n<p>爽了几天，发现这个框架并不能满足了，首先每次生成资源会重新排序导致git版本合并代码都需要手动合并，其次生成的2.0x和3.0x是用的包含2.0x和3.0x的全路径名。</p>\n<p>由于大佬插件代码不是开源的，于是想了想还是自己用python快速搞一个一样功能的出来吧，可以自己自定义，并且可以全方位满足自己需求！</p>\n<h2 id=\"视频演示\">视频演示<a href=\"post/flutter-assets-sync#视频演示\"></a></h2><div style=\"width: 100%; display: inline-block; position: relative; padding-top: 70%; display: block; content: '';\"><br>    <div style=\"position: absolute; top: 0; bottom: 0; right: 0; left: 0;\"><br>    <iframe src=\"//player.bilibili.com/player.html?aid=77259024&cid=132151550&page=1\" width=\"100%\" height=\"100%\" frameborder=\"0\" allowfullscreen></iframe><br>    </div><br></div>\n\n<h2 id=\"环境\">环境<a href=\"post/flutter-assets-sync#环境\"></a></h2><blockquote>\n<p>安装了Python3.0+就行了</p>\n</blockquote>\n<h2 id=\"配置\">配置<a href=\"post/flutter-assets-sync#配置\"></a></h2><ol>\n<li>在<code>pubspec.yaml</code>的<code>assets</code>处添加自动自动构建的位置区间</li>\n</ol>\n<blockquote>\n<p>这个区间内不可添加其他资源，因为每次构建都会替换<code># assets-generator-begin</code>和<code># assets-generator-end</code>之间的内容</p>\n</blockquote>\n<figure class=\"highlight yaml\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">assets:</span></span><br><span class=\"line\"><span class=\"comment\"># assets-generator-begin</span></span><br><span class=\"line\"><span class=\"comment\"># assets-generator-end</span></span><br></pre></td></tr></table></div></figure>\n<ol start=\"2\">\n<li>接下了就是配置资源的目录了</li>\n</ol>\n<p>首先，在项目中假如说你的资源目录就如下所示是<code>assets</code><br><img src=\"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/flutter_pubspec/55813610-18E1-478F-BBFD-C24D4307F949.png\" alt=\"\"><br>那么，你需要在<code>assets_generator.py</code>（顶部进入项目地址下载哦）中配置对应的位置，如下所示：<br><img src=\"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/flutter_pubspec/B8358DF2-32C5-4D24-B7DC-D6062B42AA31.png\" alt=\"\"></p>\n<ol start=\"3\">\n<li>把脚本<code>assets_generator.py</code>拷贝到您的项目根目录</li>\n</ol>\n<h2 id=\"使用\">使用<a href=\"post/flutter-assets-sync#使用\"></a></h2><p>在项目目录下打开命令行，运行<code>./assets_generator.py</code><br><img src=\"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/flutter_pubspec/1F3A4EDA-47F3-4236-9ED6-39076479FF7F.png\" alt=\"\"></p>\n<p>此时会在<code>pubspec.yaml</code>配置的区域添加上路径<br><img src=\"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/flutter_pubspec/21218262-4206-424D-A578-DE1A968BAE4B.png\" alt=\"\"></p>\n<p>同时会生成一个<code>r.dart</code>的文件，内容如下：（篇幅原因就粘贴部分了）<br><figure class=\"highlight dart\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">R</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/// ![](http://127.0.0.1:3333/assets/fonts/fzxz300.ttf)</span></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"built_in\">String</span> assetsFontsFzxz300 = <span class=\"string\">'assets/fonts/fzxz300.ttf'</span>;</span><br><span class=\"line\">  <span class=\"comment\">/// ![](http://127.0.0.1:3333/assets/h5/index.html)</span></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"built_in\">String</span> assetsH5Index = <span class=\"string\">'assets/h5/index.html'</span>;</span><br><span class=\"line\">  <span class=\"comment\">/// ![](http://127.0.0.1:3333/assets/h5/relationship.js)</span></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"built_in\">String</span> assetsH5Relationship = <span class=\"string\">'assets/h5/relationship.js'</span>;</span><br><span class=\"line\">  <span class=\"comment\">/// ![](http://127.0.0.1:3333/assets/image/add_ico.png)</span></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"built_in\">String</span> assetsImageAddIco = <span class=\"string\">'assets/image/add_ico.png'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure></p>\n<p>在代码中使用非常方便只需要向下面这样，当然需要先导入<code>r.dart</code></p>\n<figure class=\"highlight dart\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Image.asset(R.assetsImageMan)</span><br></pre></td></tr></table></div></figure>\n<p>同时在选对应的图片时，也可以进行图片预览（如果你把那个python脚本终止了那就不能预览了）</p>\n<p><img src=\"https://xujiaji.oss-cn-beijing.aliyuncs.com/blog/flutter_pubspec/241D6239-21E2-4651-9840-576E094997C8.png\" alt=\"\" class=\"article-img\"></p>\n<blockquote>\n<p>如果添加了新的图片，重新运行一下这个脚本就可以了</p>\n</blockquote>\n<h2 id=\"功能\">功能<a href=\"post/flutter-assets-sync#功能\"></a></h2><ol>\n<li>自动在yaml文件中生成资源路径配置</li>\n<li>自动在lib目录创建一个<code>r.dart</code>来管理资源调用</li>\n<li>生成名字有序</li>\n<li>通过<code>R.</code>对应资源可以进行预览</li>\n</ol>\n","next":{"title":"好用的iOS网络请求调试工具Bagel","link":"post/ios-bagel-use"},"plink":"https://blog.xujiaji.com/post/flutter-assets-sync/","toc":[{"title":"Flutter资源自动生成配置","id":"Flutter资源自动生成配置","index":"1","children":[{"title":"简介","id":"简介","index":"1.1"},{"title":"视频演示","id":"视频演示","index":"1.2"},{"title":"环境","id":"环境","index":"1.3"},{"title":"配置","id":"配置","index":"1.4"},{"title":"使用","id":"使用","index":"1.5"},{"title":"功能","id":"功能","index":"1.6"}]}],"reward":true,"copyright":{"author":"xujiaji","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow noopener\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","link":"<a href=\"https://blog.xujiaji.com/post/flutter-assets-sync/\" title=\"Flutter资源自动生成配置脚本\">https://blog.xujiaji.com/post/flutter-assets-sync/</a>"}}