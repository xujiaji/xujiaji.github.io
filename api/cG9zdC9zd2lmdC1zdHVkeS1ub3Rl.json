{"title":"Swift学习笔记","date":"2018-07-09T13:21:34.000Z","author":"xujiaji","link":"post/swift-study-note","comments":true,"tags":["Swift","学习","笔记"],"categories":["Swift"],"updated":"2018-12-25T15:23:05.699Z","content":"<p>记录一些swift的基本特性，以便使用的时候方便查阅。<br><a id=\"more\"></a></p>\n<p>学习地址：<a href=\"https://www.imooc.com/t/108955\" target=\"_blank\" rel=\"noopener\">https://www.imooc.com/t/108955</a></p>\n<h2 id=\"元组\">元组<a href=\"post/swift-study-note#元组\"></a></h2><blockquote>\n<p>定义：可放入各种类型数据，元组长度自由</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> point = (<span class=\"number\">5</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> httpResponse = (<span class=\"number\">404</span>, <span class=\"string\">\"Not Found\"</span>)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>可先预定类型来定义</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> point2: (<span class=\"type\">Int</span>, <span class=\"type\">Int</span>, <span class=\"type\">Int</span>) = (<span class=\"number\">10</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> httpResponse2: (<span class=\"type\">Int</span>, <span class=\"type\">String</span>) = (<span class=\"number\">200</span>, <span class=\"string\">\"OK\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> point4: (x: <span class=\"type\">Int</span>, y: <span class=\"type\">Int</span>) = (<span class=\"number\">10</span>, <span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>取值</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 第一种方式</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> point = (<span class=\"number\">5</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span>(xx, yy) = point</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 第二种方式</span></span><br><span class=\"line\">point.<span class=\"number\">0</span></span><br><span class=\"line\">point.<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 第三种方式</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> point3 = (x: <span class=\"number\">3</span>, y: <span class=\"number\">2</span>)</span><br><span class=\"line\">point3.x</span><br><span class=\"line\">point3.y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 第四种方式（只取相关数据 是否登录）</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> loginResult = (<span class=\"literal\">true</span>, <span class=\"string\">\"xujiaji\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> (isLoginSuccess, <span class=\"number\">_</span> ) = loginResult</span><br></pre></td></tr></table></figure>\n<h2 id=\"print打印\">print打印<a href=\"post/swift-study-note#print打印\"></a></h2><blockquote>\n<p>正常情况下</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"a message\"</span>)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>拼接，（结果：1 2 3 4）</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>插值：在拼接的中间插入值，默认是空格</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 结果：1-2-3-4</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, separator:<span class=\"string\">\"-\"</span>)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>结尾：默认是回车“<code>\\n</code>”</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 结果：1 -- 2 -- 3 -- 4:)hello</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, separator:<span class=\"string\">\" -- \"</span>, terminator:<span class=\"string\">\":)\"</span>)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>另一种拼接方式：<code>\\()</code></p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> y = <span class=\"number\">2</span>, z = <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\">// 结果：2 * 4 = 8</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"\\(y) * \\(z) = \\(y*z)\"</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"if条件判断\">if条件判断<a href=\"post/swift-study-note#if条件判断\"></a></h2><blockquote>\n<p>基本用法，条件必须是Bool类型，可写表达式，但结果必须是Bool</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> imTrue:<span class=\"type\">Bool</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> imFalse = <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> imFalse &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"I'm True\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"I'm False\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>支持三目运算符</p>\n</blockquote>\n<h2 id=\"for循环\">for循环<a href=\"post/swift-study-note#for循环\"></a></h2><blockquote>\n<p>基本用法</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 从2打印到10</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> <span class=\"number\">2</span>...<span class=\"number\">10</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(index)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>前闭后开，经常用于循环数组</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 从0打印到9</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> <span class=\"number\">0</span>..&lt;<span class=\"number\">10</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(index)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>下划线忽略值</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"number\">_</span> <span class=\"keyword\">in</span> <span class=\"number\">1</span>...<span class=\"number\">10</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>反向遍历</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 结果：从10打印到1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> (<span class=\"number\">1</span>...<span class=\"number\">10</span>).reversed() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>stride，<code>from</code>开始数，<code>to</code>结尾数（不包括结尾数），<code>through</code>结尾数（包括结尾数），<code>by</code>每次循环的跨度(可以是浮点数)</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 结果： 0 2 4 6 8</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">stride</span>(from: <span class=\"number\">0</span>, to: <span class=\"number\">10</span>, by: <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结果：0 2 4 6 8 10</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">stride</span>(from: <span class=\"number\">0</span>, through: <span class=\"number\">10</span>, by: <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结果：从10遍历到1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">stride</span>(from: <span class=\"number\">10</span>, to: <span class=\"number\">0</span>, by: -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"while循环\">while循环<a href=\"post/swift-study-note#while循环\"></a></h2><blockquote>\n<p>和java没什么区别，只是没有小括号</p>\n</blockquote>\n<blockquote>\n<p>至少执行一次循环，相当于java中的do while</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">repeat</span> &#123;</span><br><span class=\"line\">  语句</span><br><span class=\"line\">&#125; <span class=\"keyword\">while</span> 条件</span><br></pre></td></tr></table></figure>\n<h2 id=\"switch\">switch<a href=\"post/swift-study-note#switch\"></a></h2><p><strong>1.</strong> 注意switch case中不用写<code>break</code>， <code>case</code>后可以匹配多个值逗号隔开<br><strong>2.</strong> 不可以穷举（是否知道所有可能性），必须加上<code>default:</code>如果没有语句可以用<code>break</code>显示跳出或<code>()</code>表示空语句<br><strong>3.</strong> 可以用字符串，浮点数，布尔等swift基础数据结构<br><strong>4.</strong> <code>case</code>后面可以跟区间，如 <code>1 ..&lt; 60</code><br><strong>5.</strong> <code>case</code>还可以对元组进行判断，并且元组可以通过<code>_</code>进行忽略；元组中还可以用区间，如<code>case (-2...2, -2...2):</code>；还可以和元组解包一起用，如<code>case (let x, let y):</code><br><strong>6.</strong> 语句结束后加上<code>fallthrough</code>关键字，可让条件向下判断<br><strong>7.</strong> <code>case</code>中用<code>where</code>可以加上条件判断进行限制<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> point = (<span class=\"number\">3</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"keyword\">switch</span> point &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"keyword\">let</span>(x, y) <span class=\"keyword\">where</span> x == y:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"It's on the line x == y!\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"keyword\">let</span>(x, y) <span class=\"keyword\">where</span> x == -y:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"It's on the line x == -y\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"keyword\">let</span>(x, y):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"It's just an ordinary point.\"</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"The point is (\\(x), \\(y)\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>8.</strong> switch case还可以用if case 来简化代码<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">19</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> age &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"number\">10</span>...<span class=\"number\">19</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"You're a teenage.\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">default</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"You're not a teenage.\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 用 if case 简化后</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">case</span> <span class=\"number\">10</span>...<span class=\"number\">19</span> = age &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"You're a teenage.\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 还可以加上where条件判断，where可直接省略通过逗号隔开</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">case</span> <span class=\"number\">10</span>...<span class=\"number\">19</span> = age, age &gt;= <span class=\"number\">18</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"You're a teenage and in a college\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>9.</strong> <code>case</code>关键字还可以用于for<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"number\">1</span>...<span class=\"number\">100</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i % <span class=\"number\">3</span> == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 用case来写</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> <span class=\"number\">1</span>...<span class=\"number\">100</span> <span class=\"keyword\">where</span> i%<span class=\"number\">3</span> == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"控制转移\">控制转移<a href=\"post/swift-study-note#控制转移\"></a></h2><blockquote>\n<p>给循环起名字</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 表示如果得到结果，不仅break内部循环，也结束外部循环</span></span><br><span class=\"line\">findAnswer: <span class=\"keyword\">for</span> m <span class=\"keyword\">in</span> <span class=\"number\">1</span>...<span class=\"number\">300</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> <span class=\"number\">1</span>...<span class=\"number\">300</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> m*m*m*m - n*n == <span class=\"number\">15</span>*m*n &#123;</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(m, n)</span><br><span class=\"line\">            <span class=\"keyword\">break</span> findAnswer</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"guard\">guard<a href=\"post/swift-study-note#guard\"></a></h2><blockquote>\n<p>守卫，如果条件不成立，那么将会执行else</p>\n</blockquote>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fun</span><span class=\"params\">(money:Int, price: Int, capacity:Int, volume: Int)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">guard</span> money &gt;= price <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Not enough money\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">guard</span> capacity &gt;= volume <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Not enough capacity\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"I can buy it\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"字符串\">字符串<a href=\"post/swift-study-note#字符串\"></a></h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"Hello, playground\"</span></span><br></pre></td></tr></table></figure>\n<p><strong>1.</strong> 判断是否为空<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> emptyString = <span class=\"string\">\"\"</span></span><br><span class=\"line\">emptyString.isEmpty</span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 插值<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"string\">\"xujiaji\"</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> height = <span class=\"number\">1.7</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> s = <span class=\"string\">\"My name is \\(name). I'm \\(age) years old. I'm \\(height) meters tall.\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 循环字符串<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">c</span> <span class=\"keyword\">in</span> str &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">c</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>4.</strong> 声明字符<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> mark: <span class=\"type\">Character</span> = <span class=\"string\">\"!\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>5.</strong> 拼接字符<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str.append(mark)</span><br></pre></td></tr></table></figure></p>\n<p><strong>6.</strong> 字符串长度<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str.<span class=\"built_in\">count</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>7.</strong> 得到字符串开头下标： <code>str.startIndex</code> ；得到末尾下标：<code>str.endIndex</code><br><strong>8.</strong> 得到字符串前5个字符（<code>offsetBy</code>表示偏移量）<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str[str.index(str.startIndex, offsetBy: <span class=\"number\">5</span>)]</span><br></pre></td></tr></table></figure></p>\n<p><strong>9.</strong> 得到字符串某下标的前一个字符或后一个字符<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> spaceIndex = str.index(str.startIndex, offsetBy: <span class=\"number\">6</span>)</span><br><span class=\"line\">str[str.index(before: spaceIndex)]</span><br><span class=\"line\">str[str.index(after: spaceIndex)]</span><br></pre></td></tr></table></figure></p>\n<p><strong>10.</strong> 得到开始到<code>spaceIndex</code>下标之间的字符串<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str[str.startIndex..&lt;spaceIndex]</span><br></pre></td></tr></table></figure></p>\n<p><strong>11.</strong> 得到一个下标范围<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span>  range = startIndex..&lt;str.index(before: spaceIndex)</span><br></pre></td></tr></table></figure></p>\n<p><strong>12.</strong> 将上面范围替换成Hi<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str.replaceSubrange(range, with: <span class=\"string\">\"Hi\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p><strong>13.</strong> 末尾插入问号<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str.insert(<span class=\"string\">\"?\"</span>, at: str.endIndex)</span><br></pre></td></tr></table></figure></p>\n<p><strong>14.</strong> 移除对应下标的字符<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str.remove(at: str.index(before: str.endIndex))</span><br></pre></td></tr></table></figure></p>\n<p><strong>15.</strong> 移除某个下标范围字符<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str.removeSubrange(str.index(str.endIndex, offsetBy:-<span class=\"number\">2</span>)..&lt;str.endIndex)</span><br></pre></td></tr></table></figure></p>\n<p><strong>16.</strong> 大小写转换<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 转大写</span></span><br><span class=\"line\">str.uppercased()</span><br><span class=\"line\"><span class=\"comment\">// 转小写</span></span><br><span class=\"line\">str.lowercased()</span><br><span class=\"line\"><span class=\"comment\">// 首字大写</span></span><br><span class=\"line\">str.capitalized</span><br></pre></td></tr></table></figure></p>\n<p><strong>17.</strong> 是否包含<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 是否包含Hi</span></span><br><span class=\"line\">str.<span class=\"built_in\">contains</span>(<span class=\"string\">\"Hi\"</span>)</span><br><span class=\"line\"><span class=\"comment\">// 前缀是否是Hi</span></span><br><span class=\"line\">str.hasPrefix(<span class=\"string\">\"Hi\"</span>)</span><br><span class=\"line\"><span class=\"comment\">// 后缀是否是!!</span></span><br><span class=\"line\">str.hasSuffix(<span class=\"string\">\"!!\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p><strong>18.</strong> 格式化字符串<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 结果： 0.33333...</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> ss0 = <span class=\"string\">\"one third is \\(1.0/3.0)\"</span></span><br><span class=\"line\"><span class=\"comment\">// 结果： 0.33</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> ss1 = <span class=\"type\">String</span>(format: <span class=\"string\">\"one third is %.2f\"</span>, <span class=\"number\">1.0</span>/<span class=\"number\">3.0</span>)</span><br><span class=\"line\"><span class=\"comment\">// 结果： 0.33</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> ss2 = <span class=\"type\">NSString</span>(format: <span class=\"string\">\"one third is %.2f\"</span>, <span class=\"number\">1.0</span>/<span class=\"number\">3.0</span>) <span class=\"keyword\">as</span> <span class=\"type\">String</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>19.</strong> 字符串截取<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ss3:<span class=\"type\">NSString</span> = <span class=\"string\">\"one third is 0.33\"</span></span><br><span class=\"line\"><span class=\"comment\">// 从下标4开始截取到最后</span></span><br><span class=\"line\">ss3.substring(from: <span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"comment\">// 从开始截取到下标3</span></span><br><span class=\"line\">ss3.substring(to: <span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"comment\">// 截取下标从4开始，截取5个长度</span></span><br><span class=\"line\">ss3.substring(with: <span class=\"type\">NSMakeRange</span>(<span class=\"number\">4</span>, <span class=\"number\">5</span>))</span><br></pre></td></tr></table></figure></p>\n<p><strong>20.</strong> String 和 NSString的区别</p>\n<blockquote>\n<p>有一个表情的时候String长度为1， NSString长度为2</p>\n</blockquote>\n<p><strong>21.</strong> 去除前后多余无效字符<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> s6 = <span class=\"string\">\"   --- Hello -----    \"</span> <span class=\"keyword\">as</span> <span class=\"type\">NSString</span></span><br><span class=\"line\"><span class=\"comment\">// 去除前后空格和下划线</span></span><br><span class=\"line\">s6.trimmingCharacters(<span class=\"keyword\">in</span>: <span class=\"type\">CharacterSet</span>(charactersIn: <span class=\"string\">\" -\"</span>))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Optional\">Optional<a href=\"post/swift-study-note#Optional\"></a></h2><p><strong>1.</strong> 定义可选型<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> errorCode: <span class=\"type\">Int</span>? = <span class=\"number\">404</span></span><br><span class=\"line\">errorCode = <span class=\"literal\">nil</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> imOptional: <span class=\"type\">String</span>? = <span class=\"literal\">nil</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 具体类型可以赋值给可选项型，但反过来可选型是不能赋值给具体类型的。<br><strong>3.</strong> 强制解包，但不能为<code>nil</code>否则会抛出异常<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> errorCode: <span class=\"type\">Int</span>? = <span class=\"literal\">nil</span></span><br><span class=\"line\">errorCode = <span class=\"number\">404</span></span><br><span class=\"line\"><span class=\"comment\">// errorCode! 强制解包</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"code\"</span>, errorCode!)</span><br></pre></td></tr></table></figure></p>\n<p><strong>4.</strong> 加上<code>nil</code>判断<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 第一种写法</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> errorCode: <span class=\"type\">String</span>? = <span class=\"literal\">nil</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> errorCode != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">\"The errorCode is \"</span> + errorCode!</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">\"No error\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 第二种写法（简化），用两个问号</span></span><br><span class=\"line\"><span class=\"string\">\"The errorCode is \\(errorCode ?? \"</span>no error<span class=\"string\">\")\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>5.</strong> 可选型解包<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> errorCode: <span class=\"type\">String</span>? = <span class=\"string\">\"404\"</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> errorCode = errorCode &#123;</span><br><span class=\"line\">    <span class=\"string\">\"The errorCode is \"</span> + errorCode</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">\"No error\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> errorMessage: <span class=\"type\">String</span>? = <span class=\"string\">\"Not found\"</span></span><br><span class=\"line\"><span class=\"comment\">// errorCode有值，并且errorMessage有值</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> errorCode = errorCode, <span class=\"keyword\">let</span> errorMessage = errorMessage &#123;</span><br><span class=\"line\">    <span class=\"string\">\"The errorCode is \"</span> + errorCode + <span class=\"string\">\"\\nThe errorMessage is \"</span> + errorMessage</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// errorCode有值，并且errorMessage有值，并且errorCode等于404</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> errorCode = errorCode, <span class=\"keyword\">let</span> <span class=\"number\">_</span> = errorMessage, errorCode == <span class=\"string\">\"404\"</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Page not found\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>6.</strong> 可选型调用<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> errorMessage: <span class=\"type\">String</span>? = <span class=\"string\">\"Not Found\"</span></span><br><span class=\"line\"><span class=\"comment\">// 普通判断调用</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> errorMessage = errorMessage &#123;</span><br><span class=\"line\">    errorMessage.uppercased()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ?. 方式调用，和上面效果是一样的</span></span><br><span class=\"line\">errorMessage?.uppercased()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义不用写“? =”方式，可选型的调用的结果也是可选型的</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> uppercaseErrorMessage = errorMessage?.uppercased()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 也可以调用后，如果存在使用该对象</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> errorMessage = errorMessage?.uppercased() &#123;</span><br><span class=\"line\">    errorMessage</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>6.</strong> 实际运用<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ageInput: <span class=\"type\">String</span> = <span class=\"string\">\"16\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"type\">Int</span>(ageInput) <span class=\"comment\">// 返回的是：Int?</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> age = <span class=\"type\">Int</span>(ageInput), age &lt; <span class=\"number\">20</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"You're a teenage\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>7.</strong> 隐式可选类型，运用在能肯定的表示有值的情况下<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 后面跟！表示是隐式可选类型</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> errorMessage: <span class=\"type\">String</span>! = <span class=\"literal\">nil</span></span><br><span class=\"line\">errorMessage = <span class=\"string\">\"Not Found\"</span></span><br><span class=\"line\"><span class=\"string\">\"The message is \"</span> + errorMessage</span><br><span class=\"line\"></span><br><span class=\"line\">errorMessage = <span class=\"literal\">nil</span></span><br><span class=\"line\"><span class=\"comment\">// 会抛出异常，所以隐式可选类型危险的</span></span><br><span class=\"line\"><span class=\"comment\">//\"The message is \" + errorMessage</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Array\">Array<a href=\"post/swift-study-note#Array\"></a></h2><p><strong>1.</strong> 空数组的定义<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 有数据时的定义， 注意类型必须统一</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> numbers = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> vowels = [<span class=\"string\">\"A\"</span>, <span class=\"string\">\"B\"</span>, <span class=\"string\">\"C\"</span>]</span><br><span class=\"line\"><span class=\"comment\">// 定义的时确定好类型</span></span><br><span class=\"line\"><span class=\"comment\">//var numbers: [Int] = [0,1,2,3,4,5]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义空数组</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> emptyArr1:[<span class=\"type\">Int</span>] = []</span><br><span class=\"line\"><span class=\"keyword\">var</span> emptyArr2:<span class=\"type\">Array</span>&lt;<span class=\"type\">Int</span>&gt; = []</span><br><span class=\"line\"><span class=\"keyword\">var</span> emptyArr3 = [<span class=\"type\">Int</span>]()</span><br><span class=\"line\"><span class=\"keyword\">var</span> emptyArr4 = <span class=\"type\">Array</span>&lt;<span class=\"type\">Int</span>&gt;()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义时统一赋值</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> allZeros = <span class=\"type\">Array</span>&lt;<span class=\"type\">Int</span>&gt;(repeating: <span class=\"number\">0</span>, <span class=\"built_in\">count</span>: <span class=\"number\">5</span>) <span class=\"comment\">// [0, 0, 0, 0, 0]</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> allZeros2 = [<span class=\"type\">Int</span>](repeating: <span class=\"number\">0</span>, <span class=\"built_in\">count</span>: <span class=\"number\">5</span>) <span class=\"comment\">// [0, 0, 0, 0, 0]</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 数组查询基本使用方式<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numbers = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> vowels = [<span class=\"string\">\"A\"</span>, <span class=\"string\">\"E\"</span>, <span class=\"string\">\"I\"</span>, <span class=\"string\">\"O\"</span>, <span class=\"string\">\"U\"</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> emptyArr = [<span class=\"type\">Int</span>]()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取数组长度</span></span><br><span class=\"line\">vowels.<span class=\"built_in\">count</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 判断是否为空</span></span><br><span class=\"line\">numbers.isEmpty <span class=\"comment\">// false</span></span><br><span class=\"line\">emptyArr.isEmpty <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取首元素或末元素</span></span><br><span class=\"line\">vowels.first <span class=\"comment\">// \"A\"</span></span><br><span class=\"line\">vowels.last <span class=\"comment\">// \"U\"</span></span><br><span class=\"line\">emptyArr.first <span class=\"comment\">// nil</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可选型解包</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> firstVomel = vowels.first &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"The first vowel is \"</span> + firstVomel)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 强制解包，由自己保证安全</span></span><br><span class=\"line\">vowels.first!</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取数组的最大值或最小值</span></span><br><span class=\"line\">numbers.<span class=\"built_in\">min</span>()</span><br><span class=\"line\">numbers.<span class=\"built_in\">max</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从原数组中取出子数组</span></span><br><span class=\"line\">numbers[<span class=\"number\">2</span>..&lt;<span class=\"number\">4</span>] <span class=\"comment\">// [3, 4]</span></span><br><span class=\"line\">numbers[<span class=\"number\">2</span>..&lt;numbers.<span class=\"built_in\">count</span>] <span class=\"comment\">// [3, 4, 5]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 包含</span></span><br><span class=\"line\">vowels.<span class=\"built_in\">contains</span>(<span class=\"string\">\"A\"</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\">vowels.<span class=\"built_in\">contains</span>(<span class=\"string\">\"B\"</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取下标</span></span><br><span class=\"line\">vowels.index(of: <span class=\"string\">\"E\"</span>) <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> index = vowels.index(of: <span class=\"string\">\"E\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"E is vowel in position \\(index+1).\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"E is not a vowel.\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过下标遍历</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"number\">0</span>..&lt;numbers.<span class=\"built_in\">count</span> &#123;</span><br><span class=\"line\">    numbers[i]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 直接遍历元素</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> number <span class=\"keyword\">in</span> numbers &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(number)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 同时遍历下标和元素</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (i, vowel) <span class=\"keyword\">in</span> vowels.enumerated() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(i + 1): \\(vowel)\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 比较，与java不同，swift比较的是元素</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> oneToFive = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\">numbers == oneToFive <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 由于比较数组时与元素的顺序有关，所以下方结果为false</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> oneToFive2 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\">numbers == oneToFive2 <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 数组插入值的基本操作<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> courses = [<span class=\"string\">\"A course\"</span>, <span class=\"string\">\"B course\"</span>, <span class=\"string\">\"C course\"</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加元素</span></span><br><span class=\"line\">courses.append(<span class=\"string\">\"D course\"</span>) <span class=\"comment\">//[\"A course\", \"B course\", \"C course\", \"D course\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\">courses += [<span class=\"string\">\"E course\"</span>] <span class=\"comment\">//[\"A course\", \"B course\", \"C course\", \"D course\", \"E course\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 根据位置插入元素</span></span><br><span class=\"line\">courses.insert(<span class=\"string\">\"a course\"</span>, at: <span class=\"number\">1</span>) <span class=\"comment\">//[\"A course\", \"a course\", \"B course\", \"C course\", \"D course\", \"E course\"]</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>4.</strong> 数组删除元素的基本操作<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> courses = [<span class=\"string\">\"A course\"</span>, <span class=\"string\">\"B course\"</span>, <span class=\"string\">\"C course\"</span>, <span class=\"string\">\"D course\"</span>]</span><br><span class=\"line\"><span class=\"comment\">// 删除最后一个元素</span></span><br><span class=\"line\">courses.removeLast() <span class=\"comment\">//\"D course\"</span></span><br><span class=\"line\"><span class=\"comment\">// 删除第一个元素</span></span><br><span class=\"line\">courses.removeFirst() <span class=\"comment\">//\"A course\"</span></span><br><span class=\"line\">courses <span class=\"comment\">// [\"B course\", \"C course\"]</span></span><br><span class=\"line\"><span class=\"comment\">// 从下标0开始删除1个</span></span><br><span class=\"line\">courses.removeSubrange(<span class=\"number\">0</span>..&lt;<span class=\"number\">1</span>) <span class=\"comment\">//[\"C course\"]</span></span><br><span class=\"line\"><span class=\"comment\">// 删除所有元素</span></span><br><span class=\"line\">courses.removeAll()</span><br></pre></td></tr></table></figure></p>\n<p><strong>5.</strong> 修改元素的基本操作<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> courses = [<span class=\"string\">\"A course\"</span>, <span class=\"string\">\"B course\"</span>, <span class=\"string\">\"C course\"</span>, <span class=\"string\">\"D course\"</span>]</span><br><span class=\"line\"><span class=\"comment\">// 修改下标为0的元素</span></span><br><span class=\"line\">courses[<span class=\"number\">0</span>] = <span class=\"string\">\"1 course\"</span></span><br><span class=\"line\">courses <span class=\"comment\">// [\"1 course\", \"B course\", \"C course\", \"D course\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 修改下标1到2的元素</span></span><br><span class=\"line\">courses[<span class=\"number\">1</span>...<span class=\"number\">2</span>] = [<span class=\"string\">\"2 course\"</span>, <span class=\"string\">\"3 course\"</span>]</span><br><span class=\"line\">courses <span class=\"comment\">// [\"1 course\", \"2 course\", \"3 course\", \"D course\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 合并并修改0到2的元素</span></span><br><span class=\"line\">courses[<span class=\"number\">0</span>...<span class=\"number\">2</span>] = [<span class=\"string\">\"A course\"</span>]</span><br><span class=\"line\">courses <span class=\"comment\">// [\"A course\", \"D course\"]</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"NSArray\">NSArray<a href=\"post/swift-study-note#NSArray\"></a></h2><p><strong>1.</strong> NSArray是一个类，Array是一个结构<br><strong>2.</strong> NSArray里可以放不同类型的元素，如：<code>var arr: NSArray = [1, &quot;Hello&quot;, 3.0]</code></p>\n<h2 id=\"Dict\">Dict<a href=\"post/swift-study-note#Dict\"></a></h2><p><strong>1.</strong> 字典的初始化和查询的基本使用方式<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个有数据的字典</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> dict = [<span class=\"string\">\"swift\"</span>: <span class=\"string\">\"雨燕；快速\"</span>, <span class=\"string\">\"python\"</span>: <span class=\"string\">\"大蟒\"</span>, <span class=\"string\">\"java\"</span>:<span class=\"string\">\"爪哇岛\"</span>, <span class=\"string\">\"groovy\"</span>: <span class=\"string\">\"绝妙的；时髦的\"</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建空字典</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> emptyDict1: [<span class=\"type\">String</span>:<span class=\"type\">Int</span>] = [:]</span><br><span class=\"line\"><span class=\"keyword\">var</span> emptyDict2: <span class=\"type\">Dictionary</span>&lt;<span class=\"type\">Int</span>, <span class=\"type\">String</span>&gt; = [:]</span><br><span class=\"line\"><span class=\"keyword\">var</span> emptyDict3 = [<span class=\"type\">String</span>:<span class=\"type\">String</span>]()</span><br><span class=\"line\"><span class=\"keyword\">var</span> emptyDict4 = <span class=\"type\">Dictionary</span>&lt;<span class=\"type\">Int</span>, <span class=\"type\">Int</span>&gt;()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过key获取字典数据</span></span><br><span class=\"line\">dict[<span class=\"string\">\"swift\"</span>] <span class=\"comment\">// \"雨燕；快速\"</span></span><br><span class=\"line\">dict[<span class=\"string\">\"C++\"</span>] <span class=\"comment\">// nil</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可选型解包</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> value = dict[<span class=\"string\">\"swift\"</span>] &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"swift 的意思是：\\(value)\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//字典数据的数量</span></span><br><span class=\"line\">dict.<span class=\"built_in\">count</span> <span class=\"comment\">// 4</span></span><br><span class=\"line\"></span><br><span class=\"line\">dict.isEmpty <span class=\"comment\">// false</span></span><br><span class=\"line\">emptyDict1.isEmpty <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//遍历所有key</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> dict.keys &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(key)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历所有value</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> dict.values &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(value)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历key和value</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (key, value) <span class=\"keyword\">in</span> dict &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(key): \\(value)\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 两个字典对比：比较的key和对应的value，由于字典是无序的，因此下方等式也成立</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> dict1 = [<span class=\"number\">1</span>: <span class=\"string\">\"A\"</span>, <span class=\"number\">2</span>: <span class=\"string\">\"B\"</span>, <span class=\"number\">3</span>: <span class=\"string\">\"C\"</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> dict2 = [<span class=\"number\">1</span>: <span class=\"string\">\"A\"</span>, <span class=\"number\">3</span>: <span class=\"string\">\"C\"</span>, <span class=\"number\">2</span>: <span class=\"string\">\"B\"</span>]</span><br><span class=\"line\">dict1 == dict2 <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 字典的修改和删除<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// let的字典不可修改</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> user = [<span class=\"string\">\"name\"</span>: <span class=\"string\">\"xujiaji\"</span>, <span class=\"string\">\"password\"</span>: <span class=\"string\">\"123456\"</span>, <span class=\"string\">\"occupation\"</span>: <span class=\"string\">\"programmer\"</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 修改值</span></span><br><span class=\"line\">user[<span class=\"string\">\"occupation\"</span>] = <span class=\"string\">\"freelancer\"</span></span><br><span class=\"line\"><span class=\"comment\">// 调用方法修改值会返回之前的值</span></span><br><span class=\"line\">user.updateValue(<span class=\"string\">\"abcdefg\"</span>, forKey: <span class=\"string\">\"password\"</span>) <span class=\"comment\">// \"123456\"</span></span><br><span class=\"line\">user <span class=\"comment\">//[\"name\": \"xujiaji\", \"password\": \"abcdefg\", \"occupation\": \"freelancer\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> oldPassword = user.updateValue(<span class=\"string\">\"abcdefg\"</span>, forKey: <span class=\"string\">\"password\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> oldPassword = oldPassword, <span class=\"keyword\">let</span> newPassword = user[<span class=\"string\">\"password\"</span>], oldPassword == newPassword &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"注意：修改后的密码和之前的一样，可能导致安全问题\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 直接添加新的key和value</span></span><br><span class=\"line\">user[<span class=\"string\">\"email\"</span>] = <span class=\"string\">\"jiajixu@qq.com\"</span></span><br><span class=\"line\">user <span class=\"comment\">// [\"name\": \"xujiaji\", \"occupation\": \"freelancer\", \"email\": \"jiajixu@qq.com\", \"password\": \"abcdefg\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过方法添加新的key和value</span></span><br><span class=\"line\">user.updateValue(<span class=\"string\">\"https://blog.xujiaji.com\"</span>, forKey: <span class=\"string\">\"website\"</span>) <span class=\"comment\">// nil</span></span><br><span class=\"line\">user <span class=\"comment\">// [\"name\": \"xujiaji\", \"occupation\": \"freelancer\", \"email\": \"jiajixu@qq.com\", \"password\": \"abcdefg\", \"website\": \"https://blog.xujiaji.com\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除key和value</span></span><br><span class=\"line\">user[<span class=\"string\">\"website\"</span>] = <span class=\"literal\">nil</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过调用方法删除key和value</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> email = user.removeValue(forKey: <span class=\"string\">\"email\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"电子邮箱\\(email)删除成功\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除所有数据</span></span><br><span class=\"line\">user.removeAll()</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Set\">Set<a href=\"post/swift-study-note#Set\"></a></h2><p><strong>1.</strong> 初始化和基本使用<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建一个有数据的Set集合，和数组定义方式差不多，但是加上了类型申明</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> skillsOfA: <span class=\"type\">Set</span>&lt;<span class=\"type\">String</span>&gt; = [<span class=\"string\">\"swift\"</span>, <span class=\"string\">\"OC\"</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建空Set集合</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> emptySet1: <span class=\"type\">Set</span>&lt;<span class=\"type\">String</span>&gt; = []</span><br><span class=\"line\"><span class=\"keyword\">var</span> emptySet2 = <span class=\"type\">Set</span>&lt;<span class=\"type\">String</span>&gt;()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//集合是无序的，并且没有重复</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> vowels = <span class=\"type\">Set</span>([<span class=\"string\">\"A\"</span>, <span class=\"string\">\"E\"</span>, <span class=\"string\">\"I\"</span>, <span class=\"string\">\"O\"</span>, <span class=\"string\">\"U\"</span>, <span class=\"string\">\"U\"</span>]) <span class=\"comment\">//&#123;\"O\", \"A\", \"I\", \"U\", \"E\"&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> skillsOfB: <span class=\"type\">Set</span> = [<span class=\"string\">\"HTML\"</span>, <span class=\"string\">\"CSS\"</span>, <span class=\"string\">\"JavaScript\"</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 集合元素个数</span></span><br><span class=\"line\">skillsOfA.<span class=\"built_in\">count</span> <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"keyword\">set</span>: <span class=\"type\">Set</span> = [<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"keyword\">set</span>.<span class=\"built_in\">count</span> <span class=\"comment\">// 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 集合是否为空</span></span><br><span class=\"line\">skillsOfB.isEmpty <span class=\"comment\">// false</span></span><br><span class=\"line\">emptySet1.isEmpty <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 快速获取集合中的第一个元素</span></span><br><span class=\"line\">skillsOfA.first <span class=\"comment\">// \"swift\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 包含</span></span><br><span class=\"line\">skillsOfA.<span class=\"built_in\">contains</span>(<span class=\"string\">\"swift\"</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> skill <span class=\"keyword\">in</span> skillsOfB &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(skill)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 比较的值，和顺序无关</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> setA: <span class=\"type\">Set</span> = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> setB: <span class=\"type\">Set</span> = [<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>]</span><br><span class=\"line\">setA == setB <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 元素的插入和删除<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> skillsOfA: <span class=\"type\">Set</span>&lt;<span class=\"type\">String</span>&gt; = [<span class=\"string\">\"swift\"</span>, <span class=\"string\">\"OC\"</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> skillsOfB: <span class=\"type\">Set</span>&lt;<span class=\"type\">String</span>&gt; = [<span class=\"string\">\"HTML\"</span>, <span class=\"string\">\"CSS\"</span>, <span class=\"string\">\"Javacript\"</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> skillsOfC: <span class=\"type\">Set</span>&lt;<span class=\"type\">String</span>&gt; = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 添加元素</span></span><br><span class=\"line\">skillsOfC.insert(<span class=\"string\">\"swift\"</span>)</span><br><span class=\"line\">skillsOfC.insert(<span class=\"string\">\"HTML\"</span>)</span><br><span class=\"line\">skillsOfC.insert(<span class=\"string\">\"CSS\"</span>)</span><br><span class=\"line\">skillsOfC <span class=\"comment\">//&#123;\"swift\", \"CSS\", \"HTML\"&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 重复添加</span></span><br><span class=\"line\">skillsOfC.insert(<span class=\"string\">\"CSS\"</span>)</span><br><span class=\"line\">skillsOfC <span class=\"comment\">//&#123;\"swift\", \"CSS\", \"HTML\"&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 删除元素</span></span><br><span class=\"line\">skillsOfC.remove(<span class=\"string\">\"CSS\"</span>)</span><br><span class=\"line\">skillsOfC <span class=\"comment\">//&#123;\"swift\", \"HTML\"&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 删除没有的元素</span></span><br><span class=\"line\">skillsOfC.remove(<span class=\"string\">\"Javascript\"</span>) <span class=\"comment\">//nil</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> <span class=\"number\">_</span> = skillsOfC.remove(<span class=\"string\">\"HTML\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"HTML is removed\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 集合之间的操作：并集、交集、减集、异或<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> skillsOfA: <span class=\"type\">Set</span>&lt;<span class=\"type\">String</span>&gt; = [<span class=\"string\">\"swift\"</span>, <span class=\"string\">\"OC\"</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> skillsOfB: <span class=\"type\">Set</span>&lt;<span class=\"type\">String</span>&gt; = [<span class=\"string\">\"HTML\"</span>, <span class=\"string\">\"CSS\"</span>, <span class=\"string\">\"Javacript\"</span>, <span class=\"string\">\"Java\"</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> skillsOfC: <span class=\"type\">Set</span>&lt;<span class=\"type\">String</span>&gt; = [<span class=\"string\">\"swift\"</span>, <span class=\"string\">\"Java\"</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 并集</span></span><br><span class=\"line\">skillsOfA.union(skillsOfC) <span class=\"comment\">//&#123;\"swift\", \"OC\", \"Java\"&#125;</span></span><br><span class=\"line\">skillsOfA <span class=\"comment\">//&#123;\"swift\", \"OC\"&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 并集操作后改变skillsOfA的值</span></span><br><span class=\"line\">skillsOfA.formUnion(skillsOfC) <span class=\"comment\">//&#123;\"swift\", \"OC\", \"Java\"&#125;</span></span><br><span class=\"line\">skillsOfA <span class=\"comment\">//&#123;\"swift\", \"OC\", \"Java\"&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 交集</span></span><br><span class=\"line\">skillsOfB.intersection(skillsOfC) <span class=\"comment\">// &#123;\"Java\"&#125;</span></span><br><span class=\"line\">skillsOfB <span class=\"comment\">// &#123;\"Java\", \"HTML\", \"CSS\", \"Javacript\"&#125;</span></span><br><span class=\"line\">skillsOfB.formIntersection(skillsOfC) <span class=\"comment\">// &#123;\"Java\"&#125;</span></span><br><span class=\"line\">skillsOfB <span class=\"comment\">// &#123;\"Java\"&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 减集</span></span><br><span class=\"line\">skillsOfA.subtracting(skillsOfC)</span><br><span class=\"line\">skillsOfA <span class=\"comment\">// &#123;\"swift\", \"OC\", \"Java\"&#125;</span></span><br><span class=\"line\">skillsOfA.subtract(skillsOfC)</span><br><span class=\"line\">skillsOfA <span class=\"comment\">// &#123;\"OC\"&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 异或</span></span><br><span class=\"line\">skillsOfA.symmetricDifference(skillsOfC)</span><br><span class=\"line\">skillsOfA <span class=\"comment\">// &#123;\"OC\"&#125;</span></span><br><span class=\"line\">skillsOfA.formSymmetricDifference(skillsOfC)</span><br><span class=\"line\">skillsOfA <span class=\"comment\">// &#123;\"OC\", \"swift\", \"Java\"&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可操作数组</span></span><br><span class=\"line\">skillsOfA.union([<span class=\"string\">\"Java\"</span>, <span class=\"string\">\"Android\"</span>])</span><br></pre></td></tr></table></figure></p>\n<p><strong>4.</strong> 集合中的子集，超集合相离的判断<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> skillsOfA: <span class=\"type\">Set</span>&lt;<span class=\"type\">String</span>&gt; = [<span class=\"string\">\"swift\"</span>, <span class=\"string\">\"OC\"</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> skillsOfB: <span class=\"type\">Set</span>&lt;<span class=\"type\">String</span>&gt; = [<span class=\"string\">\"HTML\"</span>, <span class=\"string\">\"CSS\"</span>, <span class=\"string\">\"Javacript\"</span>, <span class=\"string\">\"Java\"</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> skillsOfC: <span class=\"type\">Set</span>&lt;<span class=\"type\">String</span>&gt; = [<span class=\"string\">\"swift\"</span>, <span class=\"string\">\"Java\"</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> skillsOfD: <span class=\"type\">Set</span> = [<span class=\"string\">\"swift\"</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 是否是子集（D是否包含A）</span></span><br><span class=\"line\">skillsOfD.isSubset(of: skillsOfA) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 是否是真子集 （D是否包含A，并且D != A）</span></span><br><span class=\"line\">skillsOfD.isStrictSubset(of: skillsOfA) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 是否是超集（与子集相反）</span></span><br><span class=\"line\">skillsOfA.isSuperset(of: skillsOfD) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// 是否是真超集</span></span><br><span class=\"line\">skillsOfA.isStrictSuperset(of: skillsOfD) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 判断相离(两集合没有共有元素)</span></span><br><span class=\"line\">skillsOfA.isDisjoint(with: skillsOfB) <span class=\"comment\">// true</span></span><br><span class=\"line\">skillsOfA.isDisjoint(with: skillsOfC) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Function\">Function<a href=\"post/swift-study-note#Function\"></a></h2><h3 id=\"参数部分\">参数部分<a href=\"post/swift-study-note#参数部分\"></a></h3><p><strong>1.</strong> 方法的基本定义<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  函数的基本构建</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sayHelloTo</span><span class=\"params\">(name: String)</span></span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"Hello \"</span> + name</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用</span></span><br><span class=\"line\">sayHelloTo(name: <span class=\"string\">\"xujiaji\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过添加下划线，调用的时候可以省略参数名</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sayHelloTo</span><span class=\"params\">(<span class=\"number\">_</span> name: String)</span></span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"Hello \"</span> + name</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">sayHelloTo(<span class=\"string\">\"xujiaji\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数参数中包含可选型</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sayHelloTo</span><span class=\"params\">(name: String?)</span></span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"Hello \"</span> + (name ?? <span class=\"string\">\"Guest\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nickname: <span class=\"type\">String</span>? = <span class=\"literal\">nil</span></span><br><span class=\"line\">sayHelloTo(name: nickname)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 没有参数与没有返回值的参数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">printHello</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Hello\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 显示的说明没有返回值</span></span><br><span class=\"line\"><span class=\"comment\">//func printHello() -&gt; () &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//&#125;</span></span><br><span class=\"line\"><span class=\"comment\">// Void = ()</span></span><br><span class=\"line\"><span class=\"comment\">//func printHello() -&gt; Void &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 写一个得到数组中最大和最小值的方法<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">findMaxAndMin</span><span class=\"params\">(numbers: [Int])</span></span> -&gt; (<span class=\"built_in\">max</span>: <span class=\"type\">Int</span>, <span class=\"built_in\">min</span>: <span class=\"type\">Int</span>)? &#123;</span><br><span class=\"line\">    <span class=\"keyword\">guard</span> !numbers.isEmpty <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> minValue = numbers[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">var</span> maxValue = numbers[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> number <span class=\"keyword\">in</span> numbers &#123;</span><br><span class=\"line\">        minValue = <span class=\"built_in\">min</span>(minValue, number)</span><br><span class=\"line\">        maxValue = <span class=\"built_in\">max</span>(maxValue, number)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (maxValue, minValue)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> scores: [<span class=\"type\">Int</span>]? = [<span class=\"number\">202</span>, <span class=\"number\">1234</span>, <span class=\"number\">5678</span>, <span class=\"number\">334</span>, <span class=\"number\">982</span>, <span class=\"number\">555</span>]</span><br><span class=\"line\">scores = scores ?? []</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> result = findMaxAndMin(numbers: scores!) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"The max value is \\(result.max)\"</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"The min value is \\(result.min)\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 方法的外部参数名和内部参数名<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 一般写法，内部参数名同时也是外部参数名</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sayHelloTo</span><span class=\"params\">(name: String, greeting: String)</span></span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"\\(greeting), \\(name)\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">sayHelloTo(name: <span class=\"string\">\"Playground\"</span>, greeting: <span class=\"string\">\"Hello\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 为参数提供外部参数名，让语义更加的明确</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sayHello</span><span class=\"params\">(to name: String, withGreetingWord greeting: String)</span></span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"\\(greeting), \\(name)\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">sayHello(to: <span class=\"string\">\"Playground\"</span>, withGreetingWord: <span class=\"string\">\"Hello\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 一个计算乘法的方法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">mutiply</span><span class=\"params\">(num1: Int, x num2: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num1 * num2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">mutiply(num1: <span class=\"number\">4</span>, x: <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下方乘法虽语义明确但是，确显得复杂，直接传入两个值会更加得当。于是我们可以通过下划线忽略参数名</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">mutiply</span><span class=\"params\">(<span class=\"number\">_</span> num1: Int, <span class=\"number\">_</span> num2: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num1 * num2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">mutiply(<span class=\"number\">4</span>, <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure></p>\n<p><strong>4.</strong> 默认参数和可变参数<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 默认参数的使用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sayHello</span><span class=\"params\">(to name: String = <span class=\"string\">\"Playground\"</span>, withGreetingWord greeting: String = <span class=\"string\">\"Hello\"</span>, punctuation: String = <span class=\"string\">\"!\"</span>)</span></span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"\\(greeting), \\(name)\\(punctuation)\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">sayHello() <span class=\"comment\">// \"Hello, Playground!\"</span></span><br><span class=\"line\">sayHello(to: <span class=\"string\">\"Bob\"</span>) <span class=\"comment\">// \"Hello, Bob!\"</span></span><br><span class=\"line\">sayHello(to: <span class=\"string\">\"Bob\"</span>, withGreetingWord: <span class=\"string\">\"Bye\"</span>) <span class=\"comment\">//\"Bye, Bob!\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可变参数的使用</span></span><br><span class=\"line\"><span class=\"comment\">// 计算平局值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">mean</span><span class=\"params\">(<span class=\"number\">_</span> numbers: Double ... )</span></span> -&gt; <span class=\"type\">Double</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> sum: <span class=\"type\">Double</span> = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> number <span class=\"keyword\">in</span> numbers &#123;</span><br><span class=\"line\">        sum += number</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum / <span class=\"type\">Double</span>(numbers.<span class=\"built_in\">count</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">mean(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3.4</span>, <span class=\"number\">7.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// print是一个非常好的有默认参数和可变参数的函数，可变参数不一定放在最后</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"Hello\"</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, separator: <span class=\"string\">\",\"</span>, terminator: <span class=\"string\">\".\"</span>) <span class=\"comment\">// \"Hello,1,2,3.\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>5.</strong> 常量参数、变量参数<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 函数的参数默认都是不可变的</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">toBinary</span><span class=\"params\">(<span class=\"number\">_</span> num: Int)</span></span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 让传入的参数num称为可变参数</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> num = num</span><br><span class=\"line\">    <span class=\"keyword\">var</span> res = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">repeat</span> &#123;</span><br><span class=\"line\">        res = <span class=\"type\">String</span>(num%<span class=\"number\">2</span>) + res</span><br><span class=\"line\">        num /= <span class=\"number\">2</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">while</span> num != <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">toBinary(<span class=\"number\">12</span>) <span class=\"comment\">// \"1100\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>6.</strong> inout<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// var 参数是值传递，不能延续到函数体外面</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"number\">100</span></span><br><span class=\"line\">toBinary(x)</span><br><span class=\"line\">x</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果需要延续到外面</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">swapTwoInt</span><span class=\"params\">(a: <span class=\"keyword\">inout</span> Int, b: <span class=\"keyword\">inout</span> Int)</span></span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//    let t: Int = a</span></span><br><span class=\"line\"><span class=\"comment\">//    a = b</span></span><br><span class=\"line\"><span class=\"comment\">//    b = t</span></span><br><span class=\"line\"><span class=\"comment\">// 通过元组可直接交换值</span></span><br><span class=\"line\">    (a, b) = (b, a)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a: <span class=\"type\">Int</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b: <span class=\"type\">Int</span> = <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 传入a和b的引用</span></span><br><span class=\"line\">swapTwoInt(a: &amp;a, b: &amp;b)</span><br><span class=\"line\">a</span><br><span class=\"line\">b</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// swift提供的交换方法</span></span><br><span class=\"line\"><span class=\"built_in\">swap</span>(&amp;a, &amp;b)</span><br><span class=\"line\">a</span><br><span class=\"line\">b</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"类型部分\">类型部分<a href=\"post/swift-study-note#类型部分\"></a></h3><p><strong>1.</strong> 函数类型的基本概念<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 函数类型</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"number\">_</span> a: Int, <span class=\"number\">_</span> b: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方法也可以赋值</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> anotherAdd = add</span><br><span class=\"line\"><span class=\"comment\">// 也可以声明类型</span></span><br><span class=\"line\"><span class=\"comment\">// let anotherAdd: (Int,Int)-&gt;Int = add</span></span><br><span class=\"line\">anotherAdd(<span class=\"number\">3</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sayHello</span><span class=\"params\">(to name: String)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Hello, \\(name)!\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> anotherSayHello1 = sayHello</span><br><span class=\"line\"><span class=\"keyword\">let</span> anotherSayHello2: (<span class=\"type\">String</span>) -&gt; () = sayHello</span><br><span class=\"line\"><span class=\"keyword\">let</span> anotherSayHello3: (<span class=\"type\">String</span>) -&gt; <span class=\"type\">Void</span> = sayHello</span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 如何使用函数类型？<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr: [<span class=\"type\">Int</span>] = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"number\">_</span> <span class=\"keyword\">in</span> <span class=\"number\">0</span>..&lt;<span class=\"number\">100</span> &#123;</span><br><span class=\"line\">    arr.append(<span class=\"type\">Int</span>(arc4random() % <span class=\"number\">1000</span>))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">arr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 默认排序</span></span><br><span class=\"line\">arr.<span class=\"built_in\">sort</span>()</span><br><span class=\"line\">arr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在排序中使用函数参数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">biggerNumberFirst</span><span class=\"params\">(<span class=\"number\">_</span> a: Int, <span class=\"number\">_</span> b: Int)</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a &gt; b</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 排序使用我们自己定义的规则</span></span><br><span class=\"line\">arr.<span class=\"built_in\">sort</span>(by: biggerNumberFirst)</span><br><span class=\"line\">arr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">cmpByNumberString</span><span class=\"params\">(<span class=\"number\">_</span> a: Int, <span class=\"number\">_</span> b: Int)</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"type\">String</span>(a) &lt; <span class=\"type\">String</span>(b)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">arr.<span class=\"built_in\">sort</span>(by: cmpByNumberString)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">near500</span><span class=\"params\">(<span class=\"number\">_</span> a: Int, <span class=\"number\">_</span> b: Int)</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">abs</span>(a - <span class=\"number\">500</span>) &lt; <span class=\"built_in\">abs</span>(b - <span class=\"number\">500</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 返回排序结果，排序不会影响arr的顺序</span></span><br><span class=\"line\">arr.sorted(by: near500)</span><br><span class=\"line\">arr</span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 定义函数类型参数<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">changeScores</span><span class=\"params\">(<span class=\"number\">_</span> scores: <span class=\"keyword\">inout</span> [Int], by changeScore: <span class=\"params\">(Int)</span></span></span>-&gt;<span class=\"type\">Int</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i, score) <span class=\"keyword\">in</span> scores.enumerated() &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 不需要知道方法的具体定义</span></span><br><span class=\"line\">        scores[i] = changeScore(score)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">change1</span><span class=\"params\">(score: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"type\">Int</span>(sqrt(<span class=\"type\">Double</span>(score)) * <span class=\"number\">10</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">change2</span><span class=\"params\">(score: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> score + <span class=\"number\">3</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> scores1 = [<span class=\"number\">36</span>, <span class=\"number\">61</span>, <span class=\"number\">78</span>, <span class=\"number\">89</span>, <span class=\"number\">99</span>]</span><br><span class=\"line\">changeScores(&amp;scores1, by: change1) <span class=\"comment\">// [60, 78, 88, 94, 99]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> scores2 = [<span class=\"number\">88</span>, <span class=\"number\">101</span>, <span class=\"number\">124</span>, <span class=\"number\">137</span>, <span class=\"number\">150</span>]</span><br><span class=\"line\">changeScores(&amp;scores2, by: change2) <span class=\"comment\">// [91, 104, 127, 140, 153]</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>4.</strong> 高阶函数map、filter、reduce<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">change</span><span class=\"params\">(num: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num + <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> numbers = [<span class=\"number\">65</span>, <span class=\"number\">91</span>, <span class=\"number\">45</span>, <span class=\"number\">89</span>, <span class=\"number\">99</span>]</span><br><span class=\"line\"><span class=\"comment\">// map</span></span><br><span class=\"line\">numbers.<span class=\"built_in\">map</span>(change) <span class=\"comment\">//[67, 93, 47, 91, 101]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">isPassOrFail</span><span class=\"params\">(num: Int)</span></span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num &lt; <span class=\"number\">60</span> ? <span class=\"string\">\"Fail\"</span> : <span class=\"string\">\"Pass\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">numbers.<span class=\"built_in\">map</span>(isPassOrFail) <span class=\"comment\">//[\"Pass\", \"Pass\", \"Fail\", \"Pass\", \"Pass\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// filter</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fail</span><span class=\"params\">(num: Int)</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num &lt; <span class=\"number\">60</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">numbers.<span class=\"built_in\">filter</span>(fail) <span class=\"comment\">//[45]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// reduce</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">add</span><span class=\"params\">(num1: Int, num2: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num1 + num2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">numbers.<span class=\"built_in\">reduce</span>(<span class=\"number\">0</span>, add) <span class=\"comment\">//389</span></span><br><span class=\"line\">numbers.<span class=\"built_in\">reduce</span>(<span class=\"number\">0</span>, +) <span class=\"comment\">//389</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">concatenate</span><span class=\"params\">(str: String, num: Int)</span></span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str + <span class=\"type\">String</span>(num) + <span class=\"string\">\" \"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">numbers.<span class=\"built_in\">reduce</span>(<span class=\"string\">\"\"</span>, concatenate) <span class=\"comment\">//\"65 91 45 89 99 \"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>5.</strong> 函数作为函数的返回类型<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">tier1MailFee</span><span class=\"params\">(weight: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span> * weight</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">tier2MailFee</span><span class=\"params\">(weight: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">3</span> * weight</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">feeByUnitPrice</span><span class=\"params\">(price: Int, weight: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 函数作为函数的返回类型</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">chooseMailFee</span><span class=\"params\">(by weight: Int)</span></span> -&gt; (<span class=\"type\">Int</span>) -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> weight &lt;= <span class=\"number\">10</span> ? tier1MailFee : tier2MailFee</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> mailFeeByWeight = chooseMailFee(by: weight)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> mailFeeByWeight(weight) + price * weight</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">feeByUnitPrice(price: <span class=\"number\">50</span>, weight: <span class=\"number\">8</span>)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"闭包\">闭包<a href=\"post/swift-study-note#闭包\"></a></h2><p><strong>1.</strong> 基本使用方式<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 之前的写法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">bigger</span><span class=\"params\">(a: Int, b: Int)</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a &gt; b</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">arr.<span class=\"built_in\">sort</span>(by: bigger) <span class=\"comment\">// [8, 5, 4, 3, 2]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 闭包的写法</span></span><br><span class=\"line\">arr.<span class=\"built_in\">sort</span>(by: &#123; (a: <span class=\"type\">Int</span>, b: <span class=\"type\">Int</span>) -&gt; <span class=\"type\">Bool</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a &gt;  b</span><br><span class=\"line\">&#125;) <span class=\"comment\">// [8, 5, 4, 3, 2]</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 上面的代码可简写<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 如果闭包只有一行代码，可放在同一行</span></span><br><span class=\"line\">arr.<span class=\"built_in\">sort</span>(by: &#123; (a: <span class=\"type\">Int</span>, b: <span class=\"type\">Int</span>) -&gt; <span class=\"type\">Bool</span> <span class=\"keyword\">in</span> <span class=\"keyword\">return</span> a &gt; b &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 由于自动会得到参数和返回值类型， 可这样写</span></span><br><span class=\"line\">arr.<span class=\"built_in\">sort</span>(by: &#123; a, b <span class=\"keyword\">in</span> <span class=\"keyword\">return</span> a &gt; b&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 由于知道需要return，可简写为</span></span><br><span class=\"line\">arr.<span class=\"built_in\">sort</span>(by: &#123; a, b <span class=\"keyword\">in</span> a &gt; b&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 由于参数是一个元组，元组有标识，可简写为</span></span><br><span class=\"line\">arr.<span class=\"built_in\">sort</span>(by: &#123; $<span class=\"number\">0</span> &gt; $<span class=\"number\">1</span> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 由于“&gt;”本身就是一个函数</span></span><br><span class=\"line\">arr.<span class=\"built_in\">sort</span>(by: &gt;)</span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 结尾闭包的使用<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">arr.<span class=\"built_in\">sort</span>(by: &#123; a, b <span class=\"keyword\">in</span> <span class=\"keyword\">return</span> a &gt; b &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果函数参数在最后，我们可以是使用结尾闭包</span></span><br><span class=\"line\">arr.<span class=\"built_in\">sort</span>() &#123; a, b <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a &gt; b</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果没有其他参数，可将小括号夜省略了</span></span><br><span class=\"line\">arr.<span class=\"built_in\">sort</span> &#123; a, b <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a &gt; b</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将数组中的十进制数字全部改为二进制</span></span><br><span class=\"line\">arr.<span class=\"built_in\">map</span>&#123; number -&gt; <span class=\"type\">String</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"comment\">// 将number的不可变改为可变</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> number = number</span><br><span class=\"line\">    <span class=\"keyword\">var</span> res = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">repeat</span> &#123;</span><br><span class=\"line\">        res = <span class=\"type\">String</span>(number % <span class=\"number\">2</span>) + res</span><br><span class=\"line\">        number /= <span class=\"number\">2</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">while</span> number != <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>4.</strong> 尾闭包在IOS动画中的运用<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> showView = <span class=\"type\">UIView</span>(frame: <span class=\"type\">CGRect</span>(x: <span class=\"number\">0</span>, y: <span class=\"number\">0</span>, width: <span class=\"number\">300</span>, height: <span class=\"number\">300</span>))</span><br><span class=\"line\"><span class=\"keyword\">let</span> rectangle = <span class=\"type\">UIView</span>(frame: <span class=\"type\">CGRect</span>(x: <span class=\"number\">0</span>, y: <span class=\"number\">0</span>, width: <span class=\"number\">50</span>, height: <span class=\"number\">50</span>))</span><br><span class=\"line\">rectangle.center = showView.center</span><br><span class=\"line\">rectangle.backgroundColor = <span class=\"type\">UIColor</span>.red</span><br><span class=\"line\">showView.addSubview(rectangle)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">UIView</span>.animate(withDuration: <span class=\"number\">2.0</span>) &#123;</span><br><span class=\"line\">    rectangle.backgroundColor = <span class=\"type\">UIColor</span>.blue</span><br><span class=\"line\">    rectangle.frame = showView.frame</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> PlaygroundSupport</span><br><span class=\"line\"><span class=\"type\">PlaygroundPage</span>.current.liveView = showView</span><br></pre></td></tr></table></figure></p>\n<p><strong>5.</strong> 闭包，内容捕获<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 数值捕获</span></span><br><span class=\"line\"><span class=\"comment\">// 申明变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">300</span></span><br><span class=\"line\">arr.<span class=\"built_in\">sort</span>&#123; a , b <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"built_in\">abs</span>(a-num) &lt; <span class=\"built_in\">abs</span>(b-num)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>6.</strong> 闭包和函数是引用类型<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">runningMetersWithMetersPerDay</span><span class=\"params\">(<span class=\"number\">_</span> metersPerDay: Int)</span></span> -&gt; () -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> totalMeters = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        totalMeters += metersPerDay</span><br><span class=\"line\">        <span class=\"keyword\">return</span> totalMeters</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> planA = runningMetersWithMetersPerDay(<span class=\"number\">2000</span>)</span><br><span class=\"line\"><span class=\"comment\">// 注意每次都不是从0开始相加，因为返回的是闭包的引用</span></span><br><span class=\"line\">planA() <span class=\"comment\">//2000</span></span><br><span class=\"line\">planA() <span class=\"comment\">//4000</span></span><br><span class=\"line\">planA() <span class=\"comment\">//6000</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"enum\">enum<a href=\"post/swift-study-note#enum\"></a></h2><p><strong>1.</strong> 枚举的基本使用<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义枚举类型</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Month</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">January</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">February</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">March</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">April</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">May</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">June</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">July</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">August</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">September</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">October</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">November</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">December</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义枚举也可以写成一行</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Season</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Spring</span>, <span class=\"type\">Summer</span>, <span class=\"type\">Autumn</span>, <span class=\"type\">Winter</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果确定了枚举类型，则可以省略枚举名字，如：Month.March 写成 .March</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">season</span><span class=\"params\">(month: Month)</span></span> -&gt; <span class=\"type\">Season</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> month &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> .<span class=\"type\">March</span>, .<span class=\"type\">April</span>, .<span class=\"type\">May</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> .<span class=\"type\">Spring</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> .<span class=\"type\">June</span>, .<span class=\"type\">July</span>, .<span class=\"type\">August</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> .<span class=\"type\">Summer</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> .<span class=\"type\">September</span>, .<span class=\"type\">October</span>, .<span class=\"type\">November</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> .<span class=\"type\">Autumn</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> .<span class=\"type\">December</span>, .<span class=\"type\">January</span>, .<span class=\"type\">February</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> .<span class=\"type\">Spring</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">season(month: <span class=\"type\">Month</span>.<span class=\"type\">April</span>) <span class=\"comment\">//Spring</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 枚举的原始值<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// enum Month: Int 表名Month的原始值是int类型的，并且原始值会自动递增</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Month</span>: <span class=\"title\">Int</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">January</span> = <span class=\"number\">1</span>, <span class=\"type\">Febuary</span>, <span class=\"type\">March</span>, <span class=\"type\">April</span>, <span class=\"type\">May</span>, <span class=\"type\">June</span>, <span class=\"type\">July</span>, <span class=\"type\">August</span>, <span class=\"type\">September</span>, <span class=\"type\">October</span>, <span class=\"type\">November</span>, <span class=\"type\">December</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 返回距离新的一年还有多少个月，rawValue得到原始值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">monthBeforeNewYear</span><span class=\"params\">(month: Month)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">12</span> - month.rawValue</span><br><span class=\"line\">&#125; <span class=\"comment\">// 4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可以通过原始值获取到对应的枚举值</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> theMonth = <span class=\"type\">Month</span>(rawValue: <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(monthBeforeNewYear(month: theMonth)) months before New Year!\"</span>) <span class=\"comment\">//4 months before New Year!</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// raw value为整型的枚举类型，如果不显示给出整型值，则从0开始</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Grade</span>: <span class=\"title\">Int</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">F</span>,<span class=\"type\">E</span>,<span class=\"type\">D</span>,<span class=\"type\">C</span>,<span class=\"type\">B</span>,<span class=\"type\">A</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 枚举类型的raw value值不一定是顺序的</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Coin</span>: <span class=\"title\">Int</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Penny</span> = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Nickel</span> = <span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Dime</span> = <span class=\"number\">10</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Quarter</span> = <span class=\"number\">25</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> coin: <span class=\"type\">Coin</span> = .<span class=\"type\">Quarter</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"It's \\(coin.rawValue) cents\"</span>) <span class=\"comment\">//It's 25 cents</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用String作为raw value，如果我们没有确定原始值，那么swift会自动以枚举值的名字作为原始值</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">ProgrammingLanguage2</span>: <span class=\"title\">String</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Swift</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">ObjectiveC</span> = <span class=\"string\">\"Objective-C\"</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">C</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Java</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> myFavoriteLanguage2: <span class=\"type\">ProgrammingLanguage2</span> = .<span class=\"type\">Swift</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>( <span class=\"string\">\"\\(myFavoriteLanguage2.rawValue) is my favorite language.\"</span>) <span class=\"comment\">//Swift is my favorite language.</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 并联值<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Associate Value 和 Raw value 只能存在一个</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">ATMStatus</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Success</span>(<span class=\"type\">Int</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Error</span>(<span class=\"type\">String</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Waiting</span> <span class=\"comment\">// 也可以没有Associate Value</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 余额</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> balance = <span class=\"number\">1000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取ATMStatus</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">withdraw</span><span class=\"params\">(amount: Int)</span></span> -&gt; <span class=\"type\">ATMStatus</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> balance &gt;= amount &#123;</span><br><span class=\"line\">        balance -= amount</span><br><span class=\"line\">        <span class=\"keyword\">return</span> .<span class=\"type\">Success</span>(balance)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> .<span class=\"type\">Error</span>(<span class=\"string\">\"Not enough money\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 解包相应的 Associate Value，也可忽略，就像.Waiting那样就行了</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> withdraw(amount: <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"keyword\">let</span> .<span class=\"type\">Success</span>(newBlance):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"\\(newBlance) Yuan left in your account\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"keyword\">let</span> .<span class=\"type\">Error</span>(errorMesssage):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Error:\\(errorMesssage)\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">case</span> .<span class=\"type\">Waiting</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Waiting for processing\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>4.</strong> 有多个并联值的情况<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Associate value其实只有一个，其实下面表示的是一个元组，并且为元组类型取了个名字</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Shape</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Square</span>(side: <span class=\"type\">Double</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Rectangle</span>(width: <span class=\"type\">Double</span>, height: <span class=\"type\">Double</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Circle</span>(centerx: <span class=\"type\">Double</span>, centery: <span class=\"type\">Double</span>, radius: <span class=\"type\">Double</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Point</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 初始化一些图形</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> square = <span class=\"type\">Shape</span>.<span class=\"type\">Square</span>(side: <span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> rectangle = <span class=\"type\">Shape</span>.<span class=\"type\">Rectangle</span>(width: <span class=\"number\">20</span>, height: <span class=\"number\">30</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> circle = <span class=\"type\">Shape</span>.<span class=\"type\">Circle</span>(centerx: <span class=\"number\">0</span>, centery: <span class=\"number\">0</span>, radius: <span class=\"number\">15</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> point = <span class=\"type\">Shape</span>.<span class=\"type\">Point</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 计算表面积</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">area</span><span class=\"params\">(shape: Shape)</span></span> -&gt; <span class=\"type\">Double</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> shape &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> .<span class=\"type\">Square</span>(side):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> side * side</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> .<span class=\"type\">Rectangle</span>(width, height):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> width * height</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> .<span class=\"type\">Circle</span>(<span class=\"number\">_</span>, <span class=\"number\">_</span>, r): <span class=\"comment\">// 通过下划线忽略不用的参数</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> .pi * r * r</span><br><span class=\"line\">    <span class=\"keyword\">case</span> .<span class=\"type\">Point</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 得出表面积的结果</span></span><br><span class=\"line\">area(shape: square)</span><br><span class=\"line\">area(shape: rectangle)</span><br><span class=\"line\">area(shape: circle)</span><br><span class=\"line\">area(shape: point)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ====================================================================</span></span><br><span class=\"line\"><span class=\"comment\">// enum可以有方法</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Shape</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Square</span>(side: <span class=\"type\">Double</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Rectangle</span>(width: <span class=\"type\">Double</span>, height: <span class=\"type\">Double</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Circle</span>(centerx: <span class=\"type\">Double</span>, centery: <span class=\"type\">Double</span>, radius: <span class=\"type\">Double</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Point</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">area</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Double</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">switch</span> <span class=\"keyword\">self</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> .<span class=\"type\">Square</span>(side):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> side*side</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> .<span class=\"type\">Rectangle</span>( width , height ):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> width * height</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> .<span class=\"type\">Circle</span>( <span class=\"number\">_</span> , <span class=\"number\">_</span> , r ):</span><br><span class=\"line\">            <span class=\"comment\">//swift 2: return M_PI*r*r</span></span><br><span class=\"line\">            <span class=\"comment\">//swift3中PI放在了Double类下。这样是不是更方便记忆？</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> .pi*r*r      <span class=\"comment\">//swift 3</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> .<span class=\"type\">Point</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> square = <span class=\"type\">Shape</span>.<span class=\"type\">Square</span>(side: <span class=\"number\">10</span>)</span><br><span class=\"line\">square.area()</span><br></pre></td></tr></table></figure></p>\n<p><strong>5.</strong> 可选型实际上是枚举类型<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> age: <span class=\"type\">Int</span>? = <span class=\"number\">17</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(age!)</span><br><span class=\"line\">age = <span class=\"literal\">nil</span></span><br><span class=\"line\"><span class=\"comment\">// 可以看到可选类型可以通过枚举的方式赋值</span></span><br><span class=\"line\">age = .some(<span class=\"number\">2</span>) <span class=\"comment\">// 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> website: <span class=\"type\">Optional</span>&lt;<span class=\"type\">String</span>&gt; = <span class=\"type\">Optional</span>.some(<span class=\"string\">\"blog.xujiaji.com\"</span>)</span><br><span class=\"line\">website = .<span class=\"keyword\">none</span> <span class=\"comment\">// nil</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以enum的角度来进行解包</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span> website &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> .<span class=\"keyword\">none</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"No website\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"keyword\">let</span> .some(website):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"The website is \\(website)\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以Optional的方式解包</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> website = website &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"The website is \\(website)\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"No website\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>6.</strong> 枚举的递归调用<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 枚举递归，使用indirect关键字。也可以直接加在enum关键字后面（如：enum indirect ArithmeticExpression），此时case关键字前面就不必加了</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">ArithmeticExpression</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Number</span>(<span class=\"type\">Int</span>)</span><br><span class=\"line\">    <span class=\"keyword\">indirect</span> <span class=\"keyword\">case</span> <span class=\"type\">Addition</span>(<span class=\"type\">ArithmeticExpression</span>, <span class=\"type\">ArithmeticExpression</span>)</span><br><span class=\"line\">    <span class=\"keyword\">indirect</span> <span class=\"keyword\">case</span> <span class=\"type\">Multiplication</span>(<span class=\"type\">ArithmeticExpression</span>, <span class=\"type\">ArithmeticExpression</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 计算 (5 + 4) * 2</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> five = <span class=\"type\">ArithmeticExpression</span>.<span class=\"type\">Number</span>(<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> four = <span class=\"type\">ArithmeticExpression</span>.<span class=\"type\">Number</span>(<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> sum = <span class=\"type\">ArithmeticExpression</span>.<span class=\"type\">Addition</span>(five, four)</span><br><span class=\"line\"><span class=\"keyword\">let</span> two = <span class=\"type\">ArithmeticExpression</span>.<span class=\"type\">Number</span>(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> prouct = <span class=\"type\">ArithmeticExpression</span>.<span class=\"type\">Multiplication</span>(sum, two)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">evaluate</span><span class=\"params\">(<span class=\"number\">_</span> expression: ArithmeticExpression)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> expression &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> .<span class=\"type\">Number</span>(value):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> .<span class=\"type\">Addition</span>(<span class=\"keyword\">left</span>, <span class=\"keyword\">right</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> evaluate(<span class=\"keyword\">left</span>) + evaluate(<span class=\"keyword\">right</span>)</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"keyword\">let</span> .<span class=\"type\">Multiplication</span>(<span class=\"keyword\">left</span>, <span class=\"keyword\">right</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> evaluate(<span class=\"keyword\">left</span>) * evaluate(<span class=\"keyword\">right</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 计算结果</span></span><br><span class=\"line\">evaluate(prouct)</span><br></pre></td></tr></table></figure></p>\n<p><strong>7.</strong> 枚举是值类型</p>\n<h2 id=\"struct\">struct<a href=\"post/swift-study-note#struct\"></a></h2><p><strong>1.</strong> 结构体的基本使用<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明一个结构体</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Location</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> latitude: <span class=\"type\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> longitude: <span class=\"type\">Double</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 初始化结构体</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> appleHeadQuarterLocation = <span class=\"type\">Location</span>(latitude: <span class=\"number\">37.3230</span>, longitude: -<span class=\"number\">122.0322</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> googleHeadQuarterLocation: <span class=\"type\">Location</span> = <span class=\"type\">Location</span>(latitude: <span class=\"number\">37.4220</span>, longitude: -<span class=\"number\">122.0841</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取属性值</span></span><br><span class=\"line\">appleHeadQuarterLocation.latitude</span><br><span class=\"line\">googleHeadQuarterLocation.longitude</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结构体中有结构体</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Place</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> location: <span class=\"type\">Location</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> googleHeadQuarter = <span class=\"type\">Place</span>(location: googleHeadQuarterLocation, name: <span class=\"string\">\"Google\"</span>)</span><br><span class=\"line\"><span class=\"comment\">// 因为声明的是var，所以可修改</span></span><br><span class=\"line\">googleHeadQuarter.name = <span class=\"string\">\"G\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 结构体的初始化<br>结构体重定义的常量或变量都必须初始化。可选型可以不用初始化，因为默认初始值为<code>nil</code>，试了下可选型需要是var，如果是let，则必须直接赋值。<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Location</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> latitude: <span class=\"type\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> longitude: <span class=\"type\">Double</span></span><br><span class=\"line\">    <span class=\"comment\">// 自定义构造， 当自己写了构造函数后就没有了默认的构造函数</span></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(coordinateString: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> commaIndex = coordinateString.range(of: <span class=\"string\">\",\"</span>)!.lowerBound <span class=\"comment\">//得到逗号的下标</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> firstElement = coordinateString[..&lt;commaIndex]</span><br><span class=\"line\">        <span class=\"keyword\">let</span> secondElement = coordinateString[coordinateString.index(after: commaIndex)...]</span><br><span class=\"line\">        latitude = <span class=\"type\">Double</span>(firstElement)!</span><br><span class=\"line\">        longitude = <span class=\"type\">Double</span>(secondElement)!</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 当没有默认的构造的时候，我们可以自己添加这个构造</span></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(latitude: <span class=\"type\">Double</span>, longitude: <span class=\"type\">Double</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.latitude = latitude</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.longitude = longitude</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>() &#123;</span><br><span class=\"line\">        latitude = <span class=\"number\">0.0</span></span><br><span class=\"line\">        longitude = <span class=\"number\">0.0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 默认初始值为nil</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> placeName: <span class=\"type\">String</span>?</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(latitude: <span class=\"type\">Double</span>, longitude: <span class=\"type\">Double</span>, placeName: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.latitude = latitude</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.longitude = longitude</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.placeName = placeName</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> location = <span class=\"type\">Location</span>(coordinateString: <span class=\"string\">\"111.1234,222.3333\"</span>)</span><br><span class=\"line\">location.latitude <span class=\"comment\">// 111.1234</span></span><br><span class=\"line\">location.placeName <span class=\"comment\">// nil</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 失败的构造函数</p>\n<ul>\n<li>就是说构造函数可以是失败的，当我们<code>return nil</code>时候。也就是说我们初始化结构体的时候得到的是可选型</li>\n<li>用guard可以轻松简化if else嵌套的判断代码</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Location</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> latitude: <span class=\"type\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> longitude: <span class=\"type\">Double</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>?(coordinateString: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> commaIndex = coordinateString.range(of: <span class=\"string\">\",\"</span>)?.lowerBound <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> firstElement = <span class=\"type\">Double</span>(coordinateString[..&lt;commaIndex]) <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> secondElement = <span class=\"type\">Double</span>(coordinateString[coordinateString.index(after: commaIndex)...]) <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        latitude = firstElement</span><br><span class=\"line\">        longitude = secondElement</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>guard还可以将上面的代码优化</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Location</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> latitude: <span class=\"type\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> longitude: <span class=\"type\">Double</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>?(coordinateString: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">guard</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> commaIndex = coordinateString.range(of: <span class=\"string\">\",\"</span>)?.lowerBound,</span><br><span class=\"line\">            <span class=\"keyword\">let</span> firstElement = <span class=\"type\">Double</span>(coordinateString[..&lt;commaIndex]),</span><br><span class=\"line\">            <span class=\"keyword\">let</span> secondElement = <span class=\"type\">Double</span>(coordinateString[coordinateString.index(after: commaIndex)...])</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        latitude = firstElement</span><br><span class=\"line\">        longitude = secondElement</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>4.</strong> 结构体中可定义方法， 这里直接在上面代码中添加方法<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Location</span> </span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">printLocation</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"The Location is \\(self.latitude), \\(self.longitude)\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">isNorth</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>.latitude &gt; <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">isSouth</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> !<span class=\"keyword\">self</span>.isNorth()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">distanceTo</span><span class=\"params\">(location: Location)</span></span> -&gt; <span class=\"type\">Double</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sqrt(pow(<span class=\"keyword\">self</span>.latitude - location.latitude, <span class=\"number\">2</span>) + pow(<span class=\"keyword\">self</span>.longitude - location.longitude, <span class=\"number\">2</span>))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>5.</strong> 结构体是值类型的，就是当做值来出来，赋值即是拷贝<br><strong>6.</strong> Int, Float, Double, Bool, String, Array, Dictionary, Set 等都是结构体</p>\n<h2 id=\"class\">class<a href=\"post/swift-study-note#class\"></a></h2><p><strong>1.</strong> 类的基本使用方式<br>类不像结构体一样，类不能自动初始化，因此我们需要自己为变量赋值<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> firstName: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> lastName: <span class=\"type\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(firstName: <span class=\"type\">String</span>, lastName: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.firstName = firstName</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.lastName = lastName</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 类和结构体一样，也可以定义可以失败的构造</span></span><br><span class=\"line\">    <span class=\"keyword\">init</span>?(fullName: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> spaceIndex = fullName.range(of: <span class=\"string\">\" \"</span>)?.lowerBound <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        firstName = <span class=\"type\">String</span>(fullName[..&lt;spaceIndex])</span><br><span class=\"line\">        lastName = <span class=\"type\">String</span>(fullName[fullName.index(after: spaceIndex)...])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fullName</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"\\(self.firstName) \\(self.lastName)\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> person1 = <span class=\"type\">Person</span>(firstName: <span class=\"string\">\"Alexander\"</span>, lastName: <span class=\"string\">\"Hamilton\"</span>)</span><br><span class=\"line\">person1.fullName() <span class=\"comment\">// \"Alexander Hamilton\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> person2 = <span class=\"type\">Person</span>(fullName: <span class=\"string\">\"Jiaji Xu\"</span>)</span><br><span class=\"line\">person2?.firstName <span class=\"comment\">//\"Jiaji\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 类是引用类型<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.name = name</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> person1 = <span class=\"type\">Person</span>(name: <span class=\"string\">\"Tom\"</span>)</span><br><span class=\"line\">person1.name <span class=\"comment\">// Tom</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> person2 = person1</span><br><span class=\"line\">person2.name = <span class=\"string\">\"Bob\"</span></span><br><span class=\"line\">person2.name <span class=\"comment\">// Bob</span></span><br><span class=\"line\">person1.name <span class=\"comment\">// Bob</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 方法的可变和不可变</p>\n<ul>\n<li>类的方法中可改变变量的值</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> career: <span class=\"type\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>, career: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.name = name</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.career = career</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">change</span><span class=\"params\">(career: String)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.career = career</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> person = <span class=\"type\">Person</span>(name: <span class=\"string\">\"Bob\"</span>, career: <span class=\"string\">\"Developer\"</span>)</span><br><span class=\"line\">person.change(career: <span class=\"string\">\"Teacher\"</span>)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>结构体由于是值传递，所以不可改变变量的值，像上面写会报错，提示immutable（不可变）。但是可以为方法加上关键字<code>mutating</code>，每次改变都会创建一个新的副本覆盖旧的值</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Switch</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">On</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">Off</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">mutating</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">click</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> <span class=\"keyword\">self</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> .<span class=\"type\">On</span>:</span><br><span class=\"line\">            <span class=\"keyword\">self</span> = .<span class=\"type\">Off</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> .<span class=\"type\">Off</span>:</span><br><span class=\"line\">            <span class=\"keyword\">self</span> = .<span class=\"type\">On</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> button = <span class=\"type\">Switch</span>.<span class=\"type\">Off</span></span><br><span class=\"line\">button.click()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> button2 = <span class=\"type\">Switch</span>.<span class=\"type\">On</span></span><br><span class=\"line\"></span><br><span class=\"line\">button == button2</span><br></pre></td></tr></table></figure>\n<p><strong>4.</strong> 类与类之间的等价，比较两个变量是否指向的同一个东西<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.name = name</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> person1 = <span class=\"type\">Person</span>(name: <span class=\"string\">\"Bob\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> person2 = person1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不能使用“==”判断：</span></span><br><span class=\"line\"><span class=\"comment\">// person1 == person2</span></span><br><span class=\"line\">person1 === person2 <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> person3 = <span class=\"type\">Person</span>(name: <span class=\"string\">\"Bob\"</span>)</span><br><span class=\"line\">person1 === person3 <span class=\"comment\">// false</span></span><br><span class=\"line\">person1 !== person3 <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>5.</strong> 什么时候用类什么时候用结构体</p>\n<ul>\n<li>把结构体看作是值<ul>\n<li>位置 （经纬度）</li>\n<li>坐标 （二维，三维坐标）</li>\n<li>温度</li>\n<li>…</li>\n</ul>\n</li>\n<li>把类看作是物体<ul>\n<li>人</li>\n<li>车</li>\n<li>动物</li>\n<li>…</li>\n</ul>\n</li>\n<li>如果不希望每次传递都创建一个新的副本，那么就用类，否则用结构体</li>\n<li>类可以被继承</li>\n<li>结构体比类更加“轻量级”</li>\n</ul>\n<h2 id=\"属性和方法\">属性和方法<a href=\"post/swift-study-note#属性和方法\"></a></h2><p><strong>1.</strong> 计算型属性：自动更具其他信息计算出值<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Point</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> x = <span class=\"number\">0.0</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> y = <span class=\"number\">0.0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Size</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> width = <span class=\"number\">0.0</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> height = <span class=\"number\">0.0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rectangle</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> origin: <span class=\"type\">Point</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> size: <span class=\"type\">Size</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(origin: <span class=\"type\">Point</span>, size: <span class=\"type\">Size</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.origin = origin</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.size = size</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 写法一</span></span><br><span class=\"line\"><span class=\"comment\">//    var center: Point &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//        let centerX = origin.x + size.width / 2</span></span><br><span class=\"line\"><span class=\"comment\">//        let centerY = origin.y + size.height / 2</span></span><br><span class=\"line\"><span class=\"comment\">//        return Point(x: centerX, y: centerY)</span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 写法二</span></span><br><span class=\"line\"><span class=\"comment\">//    var center: Point &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//        get &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            let centerX = origin.x + size.width / 2</span></span><br><span class=\"line\"><span class=\"comment\">//            let centerY = origin.y + size.height / 2</span></span><br><span class=\"line\"><span class=\"comment\">//            return Point(x: centerX, y: centerY)</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 写法三：上面的写法是只读的，无法为center赋值。如果要赋值，则需要些setter</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> center: <span class=\"type\">Point</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">get</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> centerX = origin.x + size.width/<span class=\"number\">2</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> centerY = origin.y + size.height/<span class=\"number\">2</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"type\">Point</span>(x: centerX, y: centerY)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// (newCenter)可以被省略</span></span><br><span class=\"line\">        <span class=\"comment\">// 在setter的&#123;&#125;中用默认名称newValue代替传入值</span></span><br><span class=\"line\">        <span class=\"keyword\">set</span>(newCenter)&#123;</span><br><span class=\"line\">            origin.x = newCenter.x - size.width/<span class=\"number\">2</span></span><br><span class=\"line\">            origin.y = newCenter.y - size.height/<span class=\"number\">2</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> rect = <span class=\"type\">Rectangle</span>(origin: <span class=\"type\">Point</span>(), size: <span class=\"type\">Size</span>(width: <span class=\"number\">10</span>, height: <span class=\"number\">5</span>))</span><br><span class=\"line\">rect.center</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 写法三可为center赋值，并且会自动改变坐标</span></span><br><span class=\"line\">rect.center = <span class=\"type\">Point</span>(x: <span class=\"number\">10</span>, y: <span class=\"number\">10</span>)</span><br><span class=\"line\">rect</span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 类型属性（Type Property），静态变量<br>就和java中的静态变量差不多，写法也一样，不过必须通过类型名获取<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Player</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 定义类型属性，不能通过self.来引用，类中也不可直接引用</span></span><br><span class=\"line\">    <span class=\"comment\">// 不论创建多少个实例，都只存在一个该变量</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">var</span> highestScore = <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 类型方法（Type Method），静态方法，这里举了一个创建单位矩阵的类型方法<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Matrix</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> m: [[<span class=\"type\">Int</span>]]</span><br><span class=\"line\">    <span class=\"keyword\">var</span> row: <span class=\"type\">Int</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> col: <span class=\"type\">Int</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>?(<span class=\"number\">_</span> arr2d: [[<span class=\"type\">Int</span>]]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">guard</span> arr2d.<span class=\"built_in\">count</span> &gt; <span class=\"number\">0</span> <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> row = arr2d.<span class=\"built_in\">count</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> col = arr2d[<span class=\"number\">0</span>].<span class=\"built_in\">count</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"number\">1</span>..&lt;row &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> arr2d[i].<span class=\"built_in\">count</span> != row &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">self</span>.m = arr2d</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.row = row</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.col = col</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">identityMatrix</span><span class=\"params\">(n: Int)</span></span> -&gt; <span class=\"type\">Matrix</span>? &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> n &lt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> arr2d: [[<span class=\"type\">Int</span>]] = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"number\">0</span>..&lt;n &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> row = [<span class=\"type\">Int</span>](repeating: <span class=\"number\">0</span>, <span class=\"built_in\">count</span>: n)</span><br><span class=\"line\">            row[i] = <span class=\"number\">1</span></span><br><span class=\"line\">            arr2d.append(row)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"type\">Matrix</span>(arr2d)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">printMatrix</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"number\">0</span>..&lt;row &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"number\">0</span>..&lt;col &#123;</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(m[i][j], terminator: <span class=\"string\">\"\\t\"</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">print</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> m = <span class=\"type\">Matrix</span>([[<span class=\"number\">1</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">4</span>]])</span><br><span class=\"line\">m?.printMatrix()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 直接通过类型名直接调用</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> e = <span class=\"type\">Matrix</span>.identityMatrix(n: <span class=\"number\">6</span>)</span><br><span class=\"line\">e?.printMatrix()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//输出</span></span><br><span class=\"line\"><span class=\"comment\">//1    2</span></span><br><span class=\"line\"><span class=\"comment\">//3    4</span></span><br><span class=\"line\"><span class=\"comment\">//1    0    0    0    0    0</span></span><br><span class=\"line\"><span class=\"comment\">//0    1    0    0    0    0</span></span><br><span class=\"line\"><span class=\"comment\">//0    0    1    0    0    0</span></span><br><span class=\"line\"><span class=\"comment\">//0    0    0    1    0    0</span></span><br><span class=\"line\"><span class=\"comment\">//0    0    0    0    1    0</span></span><br><span class=\"line\"><span class=\"comment\">//0    0    0    0    0    1</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>4.</strong> 属性观察器</p>\n<ul>\n<li>注意willSet和didSet不会在变量直接初始化和构造方法中被调用</li>\n<li>一个电灯的案例</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class LightBulb &#123;</span><br><span class=\"line\">    static let maxCurrent = 30</span><br><span class=\"line\">    var current = 0 &#123;</span><br><span class=\"line\">        // 可以不声明变量名newCurrent，可直接使用newValue</span><br><span class=\"line\">        // 如其名，此时是在设置新值之前被调用</span><br><span class=\"line\">        willSet(newCurrent) &#123;</span><br><span class=\"line\">            // 此时， current还是以前的值</span><br><span class=\"line\">            print(&quot;|\\(current)-\\(newCurrent)| = \\(abs(current - newCurrent))&quot;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        // Property observer 可以用来限制值或格式</span><br><span class=\"line\">        // 也可以用来并联逻辑</span><br><span class=\"line\">        // 可以不声明变量oldCurrent，可直接使用oldValue获取原来的值</span><br><span class=\"line\">        // 如其名，此时是已经设置好新的值后被调用</span><br><span class=\"line\">        didSet(oldCurrent) &#123;</span><br><span class=\"line\">            if current == LightBulb.maxCurrent &#123;</span><br><span class=\"line\">                print(&quot;Pay attention, the current value get to the maxinum point.&quot;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else if current &gt; LightBulb.maxCurrent&#123;</span><br><span class=\"line\">                print(&quot;Current too high, falling back to previous setting.&quot;)</span><br><span class=\"line\">                current = oldCurrent</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            print(&quot;The current is \\(current)&quot;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">let bulb = LightBulb()</span><br><span class=\"line\">bulb.current = 20</span><br><span class=\"line\">bulb.current = 30</span><br><span class=\"line\">bulb.current = 40</span><br><span class=\"line\"></span><br><span class=\"line\">//结果</span><br><span class=\"line\">//|0-20| = 20</span><br><span class=\"line\">//The current is 20</span><br><span class=\"line\">//|20-30| = 10</span><br><span class=\"line\">//Pay attention, the current value get to the maxinum point.</span><br><span class=\"line\">//The current is 30</span><br><span class=\"line\">//|30-40| = 10</span><br><span class=\"line\">//Current too high, falling back to previous setting.</span><br><span class=\"line\">//The current is 30</span><br></pre></td></tr></table></figure>\n<ul>\n<li>一个主题切换的案例</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Theme</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">DayMode</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">NightMode</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UI</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> fontColor: <span class=\"type\">UIColor</span>!</span><br><span class=\"line\">    <span class=\"keyword\">var</span> backgroundColor: <span class=\"type\">UIColor</span>!</span><br><span class=\"line\">    <span class=\"keyword\">var</span> themeMode: <span class=\"type\">Theme</span> = .<span class=\"type\">DayMode</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 每当改变了主题的时候，就去改变对应的配色</span></span><br><span class=\"line\">        <span class=\"keyword\">didSet</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">self</span>.changeMode(themeMode)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.themeMode = .<span class=\"type\">DayMode</span></span><br><span class=\"line\">        <span class=\"keyword\">self</span>.changeMode(themeMode)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 由于多处用到于是提取出来</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">changeMode</span><span class=\"params\">(<span class=\"number\">_</span> newMode: Theme)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> newMode &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> .<span class=\"type\">DayMode</span>:</span><br><span class=\"line\">            fontColor = <span class=\"type\">UIColor</span>.black</span><br><span class=\"line\">            backgroundColor = <span class=\"type\">UIColor</span>.white</span><br><span class=\"line\">        <span class=\"keyword\">case</span> .<span class=\"type\">NightMode</span>:</span><br><span class=\"line\">            fontColor = <span class=\"type\">UIColor</span>.white</span><br><span class=\"line\">            backgroundColor = <span class=\"type\">UIColor</span>.black</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> ui = <span class=\"type\">UI</span>()</span><br><span class=\"line\">ui.themeMode</span><br><span class=\"line\">ui.fontColor <span class=\"comment\">//  黑</span></span><br><span class=\"line\">ui.backgroundColor <span class=\"comment\">// 白</span></span><br><span class=\"line\"></span><br><span class=\"line\">ui.themeMode = .<span class=\"type\">NightMode</span></span><br><span class=\"line\">ui.fontColor <span class=\"comment\">// 白</span></span><br><span class=\"line\">ui.backgroundColor <span class=\"comment\">// 黑</span></span><br></pre></td></tr></table></figure>\n<p><strong>5.</strong> 延迟属性（Lazy Property）<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ClosedRange</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> start: <span class=\"type\">Int</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> end: <span class=\"type\">Int</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 每次调用都会重新计算</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> width: <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> end - start + <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用懒加载，只有第一次调用是才会计算，解决资源重复计算或读取等问题</span></span><br><span class=\"line\">    <span class=\"built_in\">lazy</span> <span class=\"keyword\">var</span> sum: <span class=\"type\">Int</span> = &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> res = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"keyword\">self</span>.start...<span class=\"keyword\">self</span>.end &#123;</span><br><span class=\"line\">            res += i</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res</span><br><span class=\"line\">    &#125;()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>?(start: <span class=\"type\">Int</span>, end: <span class=\"type\">Int</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> start &gt; end &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.start = start</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.end = end</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">let</span> range = <span class=\"type\">ClosedRange</span>(start: <span class=\"number\">0</span>, end: <span class=\"number\">10_000</span>) &#123;</span><br><span class=\"line\">    range.width</span><br><span class=\"line\">    range.sum</span><br><span class=\"line\">    range.sum</span><br><span class=\"line\">    range.sum</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>6.</strong> 访问控制</p>\n<ul>\n<li><code>private</code> 私有访问控制，标识了的变量和方法只能在同一个文件中才能访问</li>\n<li><code>internal</code> 默认访问控制，同一个目录下可访问</li>\n<li><code>public</code> 公有访问控制，标识后任何地方都可访问</li>\n</ul>\n<p><strong>7.</strong> 单例模式<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Sources文件夹中 GameManager.swift</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameManager</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">let</span> defaultManager = <span class=\"type\">GameManager</span>()</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">var</span> score = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">var</span> level = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">init</span>() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">addScore</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        score += <span class=\"number\">10</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 主文件中</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> gameManager = <span class=\"type\">GameManager</span>.defaultManager</span><br><span class=\"line\">gameManager.addScore()</span><br><span class=\"line\">gameManager.score <span class=\"comment\">// 10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> gm = <span class=\"type\">GameManager</span>.defaultManager</span><br><span class=\"line\">gm.addScore()</span><br><span class=\"line\">gm.score <span class=\"comment\">// 20</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"继承和构造函数\">继承和构造函数<a href=\"post/swift-study-note#继承和构造函数\"></a></h2><p><strong>1.</strong> 继承基本使用方式<br>继承某个类使用冒号”:”跟上继承的类<br>继承可以使用父类中非私有的属性（不在一个文件的情况下）<br><code>final</code>关键字可以让该类不再有子类<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Avatar</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> life = <span class=\"number\">100</span> <span class=\"comment\">// 血条</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> isAlive: <span class=\"type\">Bool</span> = <span class=\"literal\">true</span> <span class=\"comment\">// 是否存活</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.name = name</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 被攻击时调用</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">beAttacked</span><span class=\"params\">(attack: Int)</span></span> &#123;</span><br><span class=\"line\">        life -= attack</span><br><span class=\"line\">        <span class=\"keyword\">if</span> life &lt;= <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">            isAlive = <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 继承</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span>: <span class=\"title\">Avatar</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> leve = <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> player = <span class=\"type\">User</span>(name: <span class=\"string\">\"Jiaji\"</span>)</span><br><span class=\"line\">player.name</span><br><span class=\"line\">player.life</span><br><span class=\"line\">player.beAttacked(attack: <span class=\"number\">20</span>)</span><br><span class=\"line\">player.life</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用final，表示最终的类，阻止进一步的继承</span></span><br><span class=\"line\"><span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Magician</span>: <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> magic = <span class=\"number\">100</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 多态<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 简化大量代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Avatar</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.name = name</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span>: <span class=\"title\">Avatar</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Magician</span>: <span class=\"title\">User</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Monster</span>: <span class=\"title\">Avatar</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多态</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">printName</span><span class=\"params\">(avatar: Avatar)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"name is \\(avatar.name)\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> user = <span class=\"type\">User</span>(name: <span class=\"string\">\"Bob\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> user2 = <span class=\"type\">Magician</span>(name: <span class=\"string\">\"Tom\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> mons = <span class=\"type\">Monster</span>(name: <span class=\"string\">\"no1\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 只要都是继承Avatar那么就可以传入这个方法， 不在乎具体的类</span></span><br><span class=\"line\">printName(avatar: user)</span><br><span class=\"line\">printName(avatar: user2)</span><br><span class=\"line\">printName(avatar: mons)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//结果</span></span><br><span class=\"line\"><span class=\"comment\">//name is Bob</span></span><br><span class=\"line\"><span class=\"comment\">//name is Tom</span></span><br><span class=\"line\"><span class=\"comment\">//name is no1</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 重载， 通过关键字<code>override</code>即可复写父类中的成员<br>私有成员无法覆写；<br>final成员无法覆写；<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SuperClass</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> description: <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"This is SuperClass\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fun1</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"SuperClass fun1()\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 标记了final后，无法被子类覆写</span></span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fun2</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"SuperClass fun2()\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SubClass</span>: <span class=\"title\">SuperClass</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"keyword\">var</span> description: <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"This is SubClass\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fun1</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"SubClass fun1()\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> claz = <span class=\"type\">SuperClass</span>()</span><br><span class=\"line\"><span class=\"keyword\">let</span> claz2 = <span class=\"type\">SubClass</span>()</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr: [<span class=\"type\">SuperClass</span>] = [claz, claz2]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">c</span> <span class=\"keyword\">in</span> arr &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">c</span>.description)</span><br><span class=\"line\">    <span class=\"built_in\">c</span>.fun1()</span><br><span class=\"line\">    <span class=\"built_in\">c</span>.fun2()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//结果</span></span><br><span class=\"line\"><span class=\"comment\">//This is SuperClass</span></span><br><span class=\"line\"><span class=\"comment\">//SuperClass fun1()</span></span><br><span class=\"line\"><span class=\"comment\">//SuperClass fun2()</span></span><br><span class=\"line\"><span class=\"comment\">//This is SubClass</span></span><br><span class=\"line\"><span class=\"comment\">//SubClass fun1()</span></span><br><span class=\"line\"><span class=\"comment\">//SuperClass fun2()</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>4.</strong> 子类构造中调用父类构造</p>\n<ul>\n<li>必须将子类初始化完成，才能调用父类构造初始化父类</li>\n<li>通过<code>super.init</code>调用父类构造</li>\n</ul>\n<p><strong>5.</strong> 两段式构造</p>\n<ul>\n<li>第一段：构造初值<ul>\n<li>在所有变量没有初始化完成之前，不能调用其他方法</li>\n<li>父类的成员变量，即使有初始值，也不能使用</li>\n<li>可以涉及逻辑，但逻辑不能涉及到self</li>\n<li>静态的可以使用</li>\n</ul>\n</li>\n<li>调用super构造(如果需要的话)</li>\n<li>第二段：所有成员变量初始化完成以后，进行成员变量相关的逻辑调整</li>\n</ul>\n<p><strong>6.</strong> 方便的构造函数和指定的构造函数<br>一般的构造就是指定的构造函数；<br>加了convenience的构造就是方便的构造函数，方便的构造函数只能self调用该类的指定构造函数；<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Avatar</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"comment\">// 这种叫做指定构造函数</span></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.name = name</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span>: <span class=\"title\">Avatar</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 这种叫做指定构造函数</span></span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.<span class=\"keyword\">init</span>(name: name)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 这种叫做方便的构造函数，convenience直接翻译过来就是：方便</span></span><br><span class=\"line\">    <span class=\"comment\">// 方便的构造函数只能调用该类自身的构造函数，不能调用super的</span></span><br><span class=\"line\">    <span class=\"comment\">// 要调用该类自身的构造，必须加上convenience</span></span><br><span class=\"line\">    <span class=\"keyword\">convenience</span> <span class=\"keyword\">init</span>(firstName: <span class=\"type\">String</span>, lastName: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.<span class=\"keyword\">init</span>(name: <span class=\"string\">\"\\(firstName) \\(lastName)\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>7.</strong> 子类构造函数的继承<br>如果子类没有实现任何父类的指定构造函数，则自动继承父类的所有指定构造函数；<br>如果子类实现了父类所有的指定构造函数，则自动继承父类的所有便利构造函数；<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Avatar</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.name = name</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//    init(num: Int) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//        self.name = String(num)</span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">convenience</span> <span class=\"keyword\">init</span>(firstName: <span class=\"type\">String</span>, lastName: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.<span class=\"keyword\">init</span>(name: <span class=\"string\">\"\\(firstName) \\(lastName)\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//实现了父类所有指定构造的情况下，如果想看没有实现完的情况，将Avatar注释的代码放开</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span>: <span class=\"title\">Avatar</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> group: <span class=\"type\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>, group: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.group = group</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.<span class=\"keyword\">init</span>(name: name)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">convenience</span> <span class=\"keyword\">init</span>(group: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> name = <span class=\"type\">User</span>.generateUserName()</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.<span class=\"keyword\">init</span>(name: name, group: group)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">convenience</span> <span class=\"keyword\">override</span> <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.<span class=\"keyword\">init</span>(name: name, group: <span class=\"string\">\"\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">generateUserName</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">String</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"Player\"</span> + <span class=\"type\">String</span>(<span class=\"type\">Int</span>(arc4random()%<span class=\"number\">1_000_000</span>))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 没有实现任何指定构造的情况</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Monster</span>: <span class=\"title\">Avatar</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 子类没有实现任何父类构造的情况,自动继承父类的所有指定构造函数</span></span><br><span class=\"line\">    <span class=\"comment\">// 可直接用self调用，相当于Monster已经有了init(name: type)</span></span><br><span class=\"line\">    <span class=\"keyword\">convenience</span> <span class=\"keyword\">init</span>(type: <span class=\"type\">String</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.<span class=\"keyword\">init</span>(name: type)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//如果将Avatar中的init(num: Int)的构造的注释解开该句实例化将会报错，因为放开后，子类User并没有实现父类的init(num: Int)</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> user = <span class=\"type\">User</span>(firstName: <span class=\"string\">\"John\"</span>, lastName: <span class=\"string\">\"Snow\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可以通过三种方式实例化，其中第二种继承自父类，第三种父类的方便构造能直接使用</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> zombie = <span class=\"type\">Monster</span>(type: <span class=\"string\">\"Zombie\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> zombie2 = <span class=\"type\">Monster</span>(name: <span class=\"string\">\"Zombie\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> zombie3 = <span class=\"type\">Monster</span>(firstName: <span class=\"string\">\"Mr.\"</span>, lastName: <span class=\"string\">\"Zombie\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p><strong>8.</strong> required构造<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Avatar &#123;</span><br><span class=\"line\">    var name: String</span><br><span class=\"line\">    // 表示子类必须实现该构造方法</span><br><span class=\"line\">    required init(name: String) &#123;</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    init(num: Int) &#123;</span><br><span class=\"line\">        self.name = String(num)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 如果没有实现任何父类指定构造，那么默认会实现所有父类指定构造</span><br><span class=\"line\">class NPC:Avatar &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class User: Avatar &#123;</span><br><span class=\"line\">    override init(num: Int) &#123;</span><br><span class=\"line\">        super.init(num: num)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // 如果重写了一个父类构造（如上面的构造），那么必须实现父类强制要实现的构造</span><br><span class=\"line\">    required init(name: String) &#123;</span><br><span class=\"line\">        super.init(name: name)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>9.</strong> 结构体中的构造<br>由于结构体中没有继承的关系，所以不用申明是方便的构造表示要调用自己的构造。<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">TestInit</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">init</span>(a: <span class=\"type\">Int</span>) &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">init</span>(b: <span class=\"type\">Int</span>, <span class=\"built_in\">c</span>: <span class=\"type\">Int</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.<span class=\"keyword\">init</span>(a: b + <span class=\"built_in\">c</span>) <span class=\"comment\">// 直接self调用就行了</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"文档注释\">文档注释<a href=\"post/swift-study-note#文档注释\"></a></h2><p><strong>1.</strong> 多行文档注释<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\">多行文档注释</span><br><span class=\"line\">多行文档注释</span><br><span class=\"line\">*/</span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 单行文档注释，多个单行合在一起和多行效果一样<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/// 单行文档注释</span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 使用的是Markdown格式书写<br><strong>4.</strong> 参数注释1<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/// - Parameter item1: This is item1</span><br><span class=\"line\">/// - Parameter item2: This is item2</span><br><span class=\"line\">func show2(item1: String, item2: String) &#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>5.</strong> 参数注释2<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/// - Parameters:</span><br><span class=\"line\">///   - item1: This is item1</span><br><span class=\"line\">///   - item2: This is item2</span><br><span class=\"line\">func show2(item1: String, item2: String) &#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>6.</strong> 返回信息、异常信息注释<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/// - Returns: the result String.</span><br><span class=\"line\">/// - Throws: nil error</span><br><span class=\"line\">func show1() throws -&gt; String &#123;</span><br><span class=\"line\">    return &quot;&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>7.</strong> 一些对于算法或其他用途的一些关键字<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/// 对于算法或其他用途的一些关键字 `Precondition`, `Postcondition`, `Requires`, `Invariant`, `Complexity`, `Important` and `Warning`.</span><br><span class=\"line\">///</span><br><span class=\"line\">/// 假设这是一个算法</span><br><span class=\"line\">///</span><br><span class=\"line\">/// - Precondition: 前置条件</span><br><span class=\"line\">/// - Postcondition: 后置条件</span><br><span class=\"line\">/// - Requires: 算法所需要的内容</span><br><span class=\"line\">/// - Invariant: 循环不变量</span><br><span class=\"line\">/// - Complexity: 复杂度</span><br><span class=\"line\">/// - Important: 一些重要的信息</span><br><span class=\"line\">/// - Warning: 一些警告信息</span><br><span class=\"line\">/// - Attention: 一些警告信息</span><br><span class=\"line\">/// - Note: 一些相应的记录</span><br><span class=\"line\">/// - Remark: 一些评论</span><br><span class=\"line\">///</span><br><span class=\"line\">/// - Parameter object: The algorithm will use this single object to change the world.</span><br><span class=\"line\">/// - Throws: `MyError.JustImpossible` if the algorithm&apos;s precondition can not be satisfied.</span><br><span class=\"line\">/// - Returns: the object contains all the information in the universe.</span><br><span class=\"line\">func mysteriousAlgorithm(object: AnyObject) &#123;</span><br><span class=\"line\">    return</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>8.</strong> 一些元信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/// - Author: 作者</span><br><span class=\"line\">/// - Author: 几个人一起完成...</span><br><span class=\"line\">/// - Copyright: 版权信息</span><br><span class=\"line\">/// - Date: 时间</span><br><span class=\"line\">/// - Since: 项目起始日期</span><br><span class=\"line\">/// - Version: 对应的版本号</span><br><span class=\"line\">func show() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>9.</strong> MARK</p>\n<ul>\n<li>分割类视图</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// MARK: -</span><br></pre></td></tr></table></figure>\n<ul>\n<li>添加分割类视图并添加该区域标题</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// MARK: - Methods</span><br></pre></td></tr></table></figure>\n<p><strong>10.</strong> TODO<br>在类视图中建立任务提醒<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// TODO: 以后在这里要干嘛干嘛</span><br></pre></td></tr></table></figure></p>\n<p><strong>11.</strong> FIXME<br>需要修复，但占时无关紧要，在类视图中会有提醒<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// FIXME: Support Swift 2.2</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"下标\">下标<a href=\"post/swift-study-note#下标\"></a></h2><p><strong>1.</strong> 基本使用方式<br>可以自己定义下标的类型，如同数组和字典一样访问方式；<br>需要关键字<code>subscript</code>；<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Vector3</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> x: <span class=\"type\">Double</span> = <span class=\"number\">0.0</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> y: <span class=\"type\">Double</span> = <span class=\"number\">0.0</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> z: <span class=\"type\">Double</span> = <span class=\"number\">0.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 参数类型可以随意指定</span></span><br><span class=\"line\">    <span class=\"comment\">// 需要有个返回值</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果需要通过下标来设置值，则需要添加set</span></span><br><span class=\"line\">    <span class=\"keyword\">subscript</span>(index: <span class=\"type\">Int</span>) -&gt; <span class=\"type\">Double</span>? &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> index &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">0</span>: <span class=\"keyword\">return</span> x</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>: <span class=\"keyword\">return</span> y</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>: <span class=\"keyword\">return</span> z</span><br><span class=\"line\">            <span class=\"keyword\">default</span>: <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">set</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> newValue = newValue <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">switch</span> index &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">0</span>: x = newValue</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>: y = newValue</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>: z = newValue</span><br><span class=\"line\">            <span class=\"keyword\">default</span>: <span class=\"keyword\">return</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">subscript</span>(axis: <span class=\"type\">String</span>) -&gt; <span class=\"type\">Double</span>? &#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> axis &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">\"x\"</span>, <span class=\"string\">\"X\"</span>: <span class=\"keyword\">return</span> x</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">\"y\"</span>, <span class=\"string\">\"Y\"</span>: <span class=\"keyword\">return</span> y</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">\"z\"</span>, <span class=\"string\">\"Z\"</span>: <span class=\"keyword\">return</span> z</span><br><span class=\"line\">        <span class=\"keyword\">default</span>: <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> v = <span class=\"type\">Vector3</span>(x: <span class=\"number\">1.0</span>, y: <span class=\"number\">2.0</span>, z: <span class=\"number\">3.0</span>)</span><br><span class=\"line\">v[<span class=\"number\">0</span>] <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"comment\">// 添加了set才能设置值</span></span><br><span class=\"line\">v[<span class=\"number\">0</span>] = <span class=\"number\">100.0</span> <span class=\"comment\">// 100</span></span><br><span class=\"line\">v[<span class=\"string\">\"x\"</span>] <span class=\"comment\">// 100</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 多维下标<br>可定义多个下标；<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Matrix</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> data: [[<span class=\"type\">Double</span>]]</span><br><span class=\"line\">    <span class=\"keyword\">let</span> r: <span class=\"type\">Int</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"built_in\">c</span>: <span class=\"type\">Int</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(row: <span class=\"type\">Int</span>, col: <span class=\"type\">Int</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.r = row</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.<span class=\"built_in\">c</span> = col</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.data = [[<span class=\"type\">Double</span>]]()</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"number\">_</span> <span class=\"keyword\">in</span> <span class=\"number\">0</span>..&lt;r &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> aRow = <span class=\"type\">Array</span>(repeating: <span class=\"number\">0.0</span>, <span class=\"built_in\">count</span>: col)</span><br><span class=\"line\">            data.append(aRow)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 返回确切有值</span></span><br><span class=\"line\">    <span class=\"keyword\">subscript</span>(x: <span class=\"type\">Int</span>, y: <span class=\"type\">Int</span>) -&gt; <span class=\"type\">Double</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">assert</span>( x &gt;= <span class=\"number\">0</span> &amp;&amp; x &lt; r &amp;&amp; y &gt;= <span class=\"number\">0</span> &amp;&amp; y &lt; <span class=\"built_in\">c</span> , <span class=\"string\">\"Index Out of Range\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> data[x][y]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">set</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">assert</span>( x &gt;= <span class=\"number\">0</span> &amp;&amp; x &lt; r &amp;&amp; y &gt;= <span class=\"number\">0</span> &amp;&amp; y &lt; <span class=\"built_in\">c</span> , <span class=\"string\">\"Index Out of Range\"</span>)</span><br><span class=\"line\">            data[x][y] = newValue</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 如果想使用 m[1][1]</span></span><br><span class=\"line\">    <span class=\"keyword\">subscript</span>(row: <span class=\"type\">Int</span>) -&gt; [<span class=\"type\">Double</span>]&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">get</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">assert</span>( row &gt;= <span class=\"number\">0</span> &amp;&amp; row &lt; r , <span class=\"string\">\"Index Out of Range\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> data[row]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">set</span>(vector)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">assert</span>( vector.<span class=\"built_in\">count</span> == <span class=\"built_in\">c</span> , <span class=\"string\">\"Column Number does NOT match\"</span>)</span><br><span class=\"line\">            data[row] = vector</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> m = <span class=\"type\">Matrix</span>(row: <span class=\"number\">2</span>, col: <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\">//m[2,2]</span></span><br><span class=\"line\">m[<span class=\"number\">1</span>,<span class=\"number\">1</span>] = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果想使用 m[1][1]</span></span><br><span class=\"line\">m[<span class=\"number\">1</span>][<span class=\"number\">1</span>]</span><br><span class=\"line\">m[<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">m[<span class=\"number\">0</span>] = [<span class=\"number\">1.5</span>,<span class=\"number\">4.5</span>]</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"运算符重载\">运算符重载<a href=\"post/swift-study-note#运算符重载\"></a></h2><p>运算符本身就是一个函数<br><strong>1.</strong> 重载运算符基本操作<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 重载运算符</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> + <span class=\"params\">(<span class=\"keyword\">left</span>: Vector3, <span class=\"keyword\">right</span>: Vector3)</span></span> -&gt; <span class=\"type\">Vector3</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"type\">Vector3</span>(x: <span class=\"keyword\">left</span>.x + <span class=\"keyword\">right</span>.x, y: <span class=\"keyword\">left</span>.y + <span class=\"keyword\">right</span>.y, z: <span class=\"keyword\">left</span>.z + <span class=\"keyword\">right</span>.z)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 重载单目运算符，prefix表示 - 是一个前置运算符，相对应的是postfix</span></span><br><span class=\"line\"><span class=\"keyword\">prefix</span> <span class=\"function\"><span class=\"keyword\">func</span> - <span class=\"params\">(v: Vector3)</span></span> -&gt; <span class=\"type\">Vector3</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"type\">Vector3</span>(x: -v.x, y: -v.y, z: -v.z)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 重载 += 这种运算</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">func</span> += <span class=\"params\">(<span class=\"keyword\">left</span>: <span class=\"keyword\">inout</span> Vector3, <span class=\"keyword\">right</span>: Vector3)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">left</span> = <span class=\"keyword\">left</span> + <span class=\"keyword\">right</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> va = <span class=\"type\">Vector3</span>(x: <span class=\"number\">1.0</span>, y: <span class=\"number\">2.0</span>, z: <span class=\"number\">3.0</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> vb = <span class=\"type\">Vector3</span>(x: <span class=\"number\">3.0</span>, y: <span class=\"number\">4.0</span>, z: <span class=\"number\">5.0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> vc = vb + va</span><br><span class=\"line\">vc.x</span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 重载比较运算符<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 重载比较运算符</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> == <span class=\"params\">(<span class=\"keyword\">left</span>: Vector3, <span class=\"keyword\">right</span>: Vector3)</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">left</span>.x == <span class=\"keyword\">right</span>.x &amp;&amp; <span class=\"keyword\">left</span>.y == <span class=\"keyword\">right</span>.y &amp;&amp; <span class=\"keyword\">left</span>.z == <span class=\"keyword\">right</span>.z</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> != <span class=\"params\">(<span class=\"keyword\">left</span>: Vector3, <span class=\"keyword\">right</span>: Vector3)</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !(<span class=\"keyword\">left</span> == <span class=\"keyword\">right</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> va = <span class=\"type\">Vector3</span>(x: <span class=\"number\">1.0</span>, y: <span class=\"number\">2.0</span>, z: <span class=\"number\">3.0</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> vb = <span class=\"type\">Vector3</span>(x: <span class=\"number\">3.0</span>, y: <span class=\"number\">4.0</span>, z: <span class=\"number\">5.0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">va == vb</span><br><span class=\"line\">va != vb</span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 自定义运算符<br>如果是ASCII字符，只能是：<code>/ = - + ! * % &lt; &gt; &amp; | ^ ~</code>之开头 。或者是Unicode的字符<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Vector3</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> x: <span class=\"type\">Double</span> = <span class=\"number\">0.0</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> y: <span class=\"type\">Double</span> = <span class=\"number\">0.0</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> z: <span class=\"type\">Double</span> = <span class=\"number\">0.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">length</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Double</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sqrt(x*x + y*y + z*z)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> + <span class=\"params\">(<span class=\"keyword\">left</span>: Vector3, <span class=\"keyword\">right</span>: Vector3)</span></span> -&gt; <span class=\"type\">Vector3</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"type\">Vector3</span>(x: <span class=\"keyword\">left</span>.x + <span class=\"keyword\">right</span>.x, y: <span class=\"keyword\">left</span>.y + <span class=\"keyword\">right</span>.y, z: <span class=\"keyword\">left</span>.z + <span class=\"keyword\">right</span>.z)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> * <span class=\"params\">(<span class=\"keyword\">left</span>: Vector3, <span class=\"keyword\">right</span>: Vector3)</span></span> -&gt; <span class=\"type\">Double</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">left</span>.x * <span class=\"keyword\">right</span>.x + <span class=\"keyword\">left</span>.y * <span class=\"keyword\">right</span>.y + <span class=\"keyword\">left</span>.z * <span class=\"keyword\">right</span>.z</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> += <span class=\"params\">(<span class=\"keyword\">left</span>: <span class=\"keyword\">inout</span> Vector3, <span class=\"keyword\">right</span>: <span class=\"keyword\">inout</span> Vector3)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">left</span> = <span class=\"keyword\">left</span> + <span class=\"keyword\">right</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 单目运算符的定义</span></span><br><span class=\"line\"><span class=\"keyword\">postfix</span> <span class=\"keyword\">operator</span> +++</span><br><span class=\"line\"><span class=\"keyword\">postfix</span> <span class=\"function\"><span class=\"keyword\">func</span> +++ <span class=\"params\">(vector: <span class=\"keyword\">inout</span> Vector3)</span></span> -&gt; <span class=\"type\">Vector3</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> addOn = <span class=\"type\">Vector3</span>(x: <span class=\"number\">1.0</span>, y: <span class=\"number\">1.0</span>, z: <span class=\"number\">1.0</span>)</span><br><span class=\"line\">    vector += addOn</span><br><span class=\"line\">    <span class=\"keyword\">return</span> vector</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">prefix</span> <span class=\"keyword\">operator</span> +++</span><br><span class=\"line\"><span class=\"keyword\">prefix</span> <span class=\"function\"><span class=\"keyword\">func</span> +++ <span class=\"params\">(vector: <span class=\"keyword\">inout</span> Vector3)</span></span> -&gt; <span class=\"type\">Vector3</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = vector</span><br><span class=\"line\">    <span class=\"keyword\">var</span> addOn = <span class=\"type\">Vector3</span>(x: <span class=\"number\">1.0</span>, y: <span class=\"number\">1.0</span>, z: <span class=\"number\">1.0</span>)</span><br><span class=\"line\">    vector += addOn</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 双目运算符的定义</span></span><br><span class=\"line\"><span class=\"comment\">// 计算两个向量的夹角</span></span><br><span class=\"line\"><span class=\"keyword\">infix</span> <span class=\"keyword\">operator</span> ^</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> ^ <span class=\"params\">(<span class=\"keyword\">left</span>: Vector3, <span class=\"keyword\">right</span>: Vector3)</span></span> -&gt; <span class=\"type\">Double</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> acos((<span class=\"keyword\">left</span> * <span class=\"keyword\">right</span>) / (<span class=\"keyword\">left</span>.length() * <span class=\"keyword\">right</span>.length()))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//计算阶层，定义优先组</span></span><br><span class=\"line\">precedencegroup <span class=\"type\">ExponentPrecedence</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 是从左向右计算还是从右向左计算</span></span><br><span class=\"line\">    <span class=\"keyword\">associativity</span>: <span class=\"keyword\">left</span></span><br><span class=\"line\">    <span class=\"comment\">// 定义优先级，用lowerThan或higherThan来定义</span></span><br><span class=\"line\">    higherThan: <span class=\"type\">MultiplicationPrecedence</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">infix</span> <span class=\"keyword\">operator</span> **: <span class=\"type\">ExponentPrecedence</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> **<span class=\"params\">(x: Double, p: Double)</span></span> -&gt; <span class=\"type\">Double</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pow(x, p)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1</span>+<span class=\"number\">2</span>**<span class=\"number\">3</span>**<span class=\"number\">2</span> <span class=\"comment\">// 65</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> va = <span class=\"type\">Vector3</span>(x: <span class=\"number\">1.0</span>, y: <span class=\"number\">2.0</span>, z: <span class=\"number\">3.0</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> vb = <span class=\"type\">Vector3</span>(x: <span class=\"number\">3.0</span>, y: <span class=\"number\">4.0</span>, z: <span class=\"number\">5.0</span>)</span><br><span class=\"line\">va+++</span><br><span class=\"line\"></span><br><span class=\"line\">+++vb</span><br><span class=\"line\"></span><br><span class=\"line\">va ^ vb</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Extension\">Extension<a href=\"post/swift-study-note#Extension\"></a></h2><p><strong>1.</strong> 基本使用方式<br>扩展；<br>扩展属性时，只能扩展计算型属性；<br>只能创建方便的构造函数<code>convenience</code>；<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> value: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(value: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.value = value</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 扩展用方法上时</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">beautifulValue</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"beautiful \"</span> + <span class=\"keyword\">self</span>.value</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> test = <span class=\"type\">Test</span>(value: <span class=\"string\">\"girl\"</span>)</span><br><span class=\"line\">test.beautifulValue() <span class=\"comment\">//\"beautiful girl\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 扩展用变量上时，必须是计算型变量</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len: <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>.value.<span class=\"built_in\">count</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">test.len <span class=\"comment\">// 4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 扩展用构造时，必须是方便构造</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">convenience</span> <span class=\"keyword\">init</span> (firstName: <span class=\"type\">String</span>, lastName: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.<span class=\"keyword\">init</span>(value: <span class=\"string\">\"\\(firstName) \\(lastName)\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> test2 = <span class=\"type\">Test</span>(firstName: <span class=\"string\">\"Jiaji\"</span>, lastName: <span class=\"string\">\"Xu\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 嵌套类型<br>如果某类型只有在一个类型里面起作用，那么可以将该类型放到里面，如String的Index类型；<br>扩展，可扩展嵌套类型；<br>扩展可扩展下标；<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rectangle</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> origin: (x: <span class=\"type\">Double</span>, y: <span class=\"type\">Double</span>)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> width: <span class=\"type\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> height: <span class=\"type\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(origin: (<span class=\"type\">Double</span>, <span class=\"type\">Double</span>), width: <span class=\"type\">Double</span>, height: <span class=\"type\">Double</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.origin = origin</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.width = width</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.height = height</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">Rectangle</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Vertex</span>: <span class=\"title\">Int</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"type\">LeftTop</span>, <span class=\"type\">RightTop</span>, <span class=\"type\">RightBottom</span>, <span class=\"type\">LeftBottom</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">subscript</span>(index: <span class=\"type\">Int</span>) -&gt; (<span class=\"type\">Double</span>, <span class=\"type\">Double</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">assert</span>(index &gt;= <span class=\"number\">0</span> &amp;&amp; index &lt; <span class=\"number\">4</span>, <span class=\"string\">\"Index in Rectange Out of Range.\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> <span class=\"type\">Vertex</span>(rawValue: index)! &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> .<span class=\"type\">LeftTop</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> origin</span><br><span class=\"line\">        <span class=\"keyword\">case</span> .<span class=\"type\">RightTop</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (x: origin.x + width, y: origin.y)</span><br><span class=\"line\">        <span class=\"keyword\">case</span> .<span class=\"type\">RightBottom</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (x: origin.x + width, y: origin.y + height )</span><br><span class=\"line\">        <span class=\"keyword\">case</span> .<span class=\"type\">LeftBottom</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (x: origin.x, y: origin.y + height )</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> rect = <span class=\"type\">Rectangle</span>(origin: (<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>), width: <span class=\"number\">4</span>, height: <span class=\"number\">3</span>)</span><br><span class=\"line\">rect[<span class=\"number\">0</span>]</span><br><span class=\"line\">rect[<span class=\"number\">1</span>]</span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 扩展标准库<br>// Int还有很多可以做enxtension的地方<br>// 如 12345[2]<br>// 如 toBinary, toHex<br>// 如 isPrime<br>// extension在App开发中被经常使用<br>// 如 String, UIColor等基础类的使用<br>// 在App开发中, 一个界面可能需要处理多个事件: 表格显示, 用户输入, 导航, 动画, 数据存储…<br>// 此时可以使用extension分隔开;<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">Int</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> square: <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span> * <span class=\"keyword\">self</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> cube: <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span> * <span class=\"keyword\">self</span> * <span class=\"keyword\">self</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">inRange</span><span class=\"params\">(start: Int, to: Int)</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">self</span> &gt;= start &amp;&amp; <span class=\"keyword\">self</span> &lt; to</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">repetitions</span><span class=\"params\">(task: <span class=\"params\">(Int)</span></span></span> -&gt; <span class=\"type\">Void</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"number\">_</span> <span class=\"keyword\">in</span> <span class=\"number\">0</span>..&lt;<span class=\"keyword\">self</span> &#123;</span><br><span class=\"line\">            task(<span class=\"keyword\">self</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"number\">8</span></span><br><span class=\"line\">num.square</span><br><span class=\"line\">num.cube</span><br><span class=\"line\"></span><br><span class=\"line\">num.inRange(start: <span class=\"number\">0</span>, to: <span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">num.repetitions &#123; index <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"hello \\(index)\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\"><span class=\"comment\">//hello 8</span></span><br><span class=\"line\"><span class=\"comment\">//hello 8</span></span><br><span class=\"line\"><span class=\"comment\">//hello 8</span></span><br><span class=\"line\"><span class=\"comment\">//hello 8</span></span><br><span class=\"line\"><span class=\"comment\">//hello 8</span></span><br><span class=\"line\"><span class=\"comment\">//hello 8</span></span><br><span class=\"line\"><span class=\"comment\">//hello 8</span></span><br><span class=\"line\"><span class=\"comment\">//hello 8</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Generic\">Generic<a href=\"post/swift-study-note#Generic\"></a></h2><p>泛型： 只关心具体操作，不关心具体类型<br><strong>1.</strong> 用在方法上<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">swapTwoThings</span>&lt;T&gt;<span class=\"params\">(a: <span class=\"keyword\">inout</span> T, b: <span class=\"keyword\">inout</span> T)</span></span> &#123;</span><br><span class=\"line\">    (a, b) = (b, a)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> hello = <span class=\"string\">\"Hello\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bye = <span class=\"string\">\"Bye\"</span></span><br><span class=\"line\">swapTwoThings(a: &amp;hello, b: &amp;bye)</span><br><span class=\"line\">hello <span class=\"comment\">// \"Bye\"</span></span><br><span class=\"line\">bye <span class=\"comment\">// \"Hello\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 用在类型上<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Stack</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> items = [<span class=\"type\">T</span>]()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span>  <span class=\"title\">isEmpty</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> items.<span class=\"built_in\">count</span> == <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">mutating</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">push</span><span class=\"params\">(<span class=\"number\">_</span> item: T)</span></span> &#123;</span><br><span class=\"line\">        items.append(item)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">mutating</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">pop</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">T</span>? &#123;</span><br><span class=\"line\">        <span class=\"keyword\">guard</span> !<span class=\"keyword\">self</span>.isEmpty() <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> items.removeLast()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">Stack</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">top</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">T</span>? &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> items.last</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">count</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> items.<span class=\"built_in\">count</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> s = <span class=\"type\">Stack</span>&lt;<span class=\"type\">Int</span>&gt;()</span><br><span class=\"line\">s.push(<span class=\"number\">1</span>)</span><br><span class=\"line\">s.push(<span class=\"number\">2</span>)</span><br><span class=\"line\">s.pop()</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"protocol\">protocol<a href=\"post/swift-study-note#protocol\"></a></h2><p><strong>1.</strong> 协议的基本使用<br>协议；<br>只定义，不实现；<br>不能为协议设置默认的参数值，变量也不能有默认值；<br>变量只能用var<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// protocol Pet: class &#123;&#125; 表示如果协议继承class，则该协议不能应用于结构体</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">Pet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 不能右初始值</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span> &#123; <span class=\"keyword\">get</span> <span class=\"keyword\">set</span> &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 统一使用var关键字</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> birthPlace: <span class=\"type\">String</span> &#123; <span class=\"keyword\">get</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 对于方法，不能有实现</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">playWith</span><span class=\"params\">()</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//对于方法，不能有默认参数（默认参数就是一种实现）</span></span><br><span class=\"line\">    <span class=\"comment\">// func fed(food: String = \"leftover\")</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fed</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fed</span><span class=\"params\">(food: String)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 可以使用mutating关键字，强调在结构体重应该修改其中内容</span></span><br><span class=\"line\">    <span class=\"keyword\">mutating</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">changeName</span><span class=\"params\">(newName: String)</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 协议可继承</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">PetBird</span>: <span class=\"title\">Pet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> flySpeed: <span class=\"type\">Double</span>&#123; <span class=\"keyword\">get</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> flyHeight: <span class=\"type\">Double</span>&#123; <span class=\"keyword\">get</span> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Dog</span>: <span class=\"title\">Pet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 可以使用计算型属性</span></span><br><span class=\"line\">    <span class=\"comment\">//    private var myDoggyName = \"Puppy\"</span></span><br><span class=\"line\">    <span class=\"comment\">//    var name: String&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//        get&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//            return myDoggyName</span></span><br><span class=\"line\">    <span class=\"comment\">//        &#125;</span></span><br><span class=\"line\">    <span class=\"comment\">//        set&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//            myDoggyName = newValue</span></span><br><span class=\"line\">    <span class=\"comment\">//        &#125;</span></span><br><span class=\"line\">    <span class=\"comment\">//    &#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 协议中定义的只读，对于一个具体类的实现，不一定是只读，但是作为Pet时是只读的！</span></span><br><span class=\"line\">    <span class=\"comment\">// let birthPlace: String</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> birthPlace: <span class=\"type\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">playWith</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Wong!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fed</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"I want a bone.\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 在具体实现上可以加默认参数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fed</span><span class=\"params\">(food: String = <span class=\"string\">\"Bone\"</span>)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">mutating</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">changeName</span><span class=\"params\">(newName: String)</span></span> &#123;</span><br><span class=\"line\">        name = newName</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> myDog: <span class=\"type\">Dog</span> = <span class=\"type\">Dog</span>(name: <span class=\"string\">\"summer\"</span>, birthPlace: <span class=\"string\">\"beijing\"</span>)</span><br><span class=\"line\">myDog.birthPlace = <span class=\"string\">\"beijing\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> aPet: <span class=\"type\">Pet</span> = myDog</span><br><span class=\"line\"><span class=\"comment\">// 当作为Pet来操作的时候，是无法为birthPlace赋值的</span></span><br><span class=\"line\"><span class=\"comment\">// aPet.birthPlace = \"shanghai\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 协议和构造函数<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">Pet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span> &#123; <span class=\"keyword\">get</span> <span class=\"keyword\">set</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> type: <span class=\"type\">String</span> = <span class=\"string\">\"mammal\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果一个类有继承的类，则类必须放在前面</span></span><br><span class=\"line\"><span class=\"comment\">// 父类只能有一个， 协议可以有多个</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dog</span>: <span class=\"title\">Animal</span>, <span class=\"title\">Pet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span> = <span class=\"string\">\"Pup\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 如果protocol有init， 则在class中必须声明required，强制让子类实现</span></span><br><span class=\"line\">    <span class=\"keyword\">required</span> <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.name = name</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span>: <span class=\"title\">Animal</span>, <span class=\"title\">Pet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 如果是final class，init可以没有required，因为它不再会被继承</span></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.name = name</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Bird</span>: <span class=\"title\">Animal</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span> = <span class=\"string\">\"bird ...\"</span></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 省略...</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Parrot</span>: <span class=\"title\">Bird</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果只继承Bird，则只需要加override或Bird init是required，那么只需要required</span></span><br><span class=\"line\">    <span class=\"comment\">// 因为有Pet， 则required也不能省略</span></span><br><span class=\"line\">    <span class=\"keyword\">required</span> <span class=\"keyword\">override</span> <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.<span class=\"keyword\">init</span>(name: name + <span class=\"string\">\" \"</span> + name)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 为什么使用协议<br>协议描述的是某种特性；<br>如下面的例子，通过协议，我们可以将继承自不同父类不同类型的东西，由于某种一样的特性，我们可以依这特性把它们归为一类。<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">Pet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span> &#123; <span class=\"keyword\">get</span> <span class=\"keyword\">set</span> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">Flyable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> flySpeed: <span class=\"type\">Double</span> &#123; <span class=\"keyword\">get</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> flyHeight: <span class=\"type\">Double</span> &#123; <span class=\"keyword\">get</span> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dog</span>: <span class=\"title\">Animal</span>, <span class=\"title\">Pet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span> = <span class=\"string\">\"Puppy\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span>: <span class=\"title\">Animal</span>, <span class=\"title\">Pet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span> = <span class=\"string\">\"Kitten\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Bird</span>: <span class=\"title\">Animal</span>, <span class=\"title\">Flyable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> flySpeed: <span class=\"type\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> flyHeight: <span class=\"type\">Double</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(flySpeed: <span class=\"type\">Double</span>, flyHeight: <span class=\"type\">Double</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.flySpeed = flySpeed</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.flyHeight = flyHeight</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Parrot</span>: <span class=\"title\">Bird</span>, <span class=\"title\">Pet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>, flySpeed: <span class=\"type\">Double</span>, flyHeight: <span class=\"type\">Double</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.name = name + <span class=\"string\">\" \"</span> + name</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.<span class=\"keyword\">init</span>(flySpeed: flySpeed, flyHeight: flyHeight)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Sparrow</span>: <span class=\"title\">Bird</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> color = <span class=\"type\">UIColor</span>.gray</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Vehicle</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Plane</span>: <span class=\"title\">Vehicle</span>, <span class=\"title\">Flyable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> model: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> flySpeed: <span class=\"type\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> flyHeight: <span class=\"type\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(model: <span class=\"type\">String</span>, flySpeed: <span class=\"type\">Double</span>, flyHeight: <span class=\"type\">Double</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.model = model</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.flyHeight = flyHeight</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.flySpeed = flySpeed</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> dog = <span class=\"type\">Dog</span>()</span><br><span class=\"line\"><span class=\"keyword\">var</span> cat = <span class=\"type\">Cat</span>()</span><br><span class=\"line\"><span class=\"keyword\">var</span> parrot = <span class=\"type\">Parrot</span>(name: <span class=\"string\">\"hi\"</span>, flySpeed: <span class=\"number\">10.0</span>, flyHeight: <span class=\"number\">100.0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> pets: [<span class=\"type\">Pet</span>] = [dog, cat, parrot]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> sparrow = <span class=\"type\">Sparrow</span>(flySpeed: <span class=\"number\">15.0</span>, flyHeight: <span class=\"number\">80.0</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> plane = <span class=\"type\">Plane</span>(model: <span class=\"string\">\"Boeing 747\"</span>, flySpeed: <span class=\"number\">200.0</span>, flyHeight: <span class=\"number\">10_000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> flyers: [<span class=\"type\">Flyable</span>] = [parrot, sparrow, plane]</span><br><span class=\"line\"><span class=\"keyword\">for</span> flyer <span class=\"keyword\">in</span> flyers &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Fly speed: \\(flyer.flySpeed), Fly Height: \\(flyer.flyHeight)\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 类型别名(typealias)<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typealias</span> <span class=\"type\">Length</span> = <span class=\"type\">Double</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">Double</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> m: <span class=\"type\">Length</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">self</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> cm: <span class=\"type\">Length</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">self</span> * <span class=\"number\">100.0</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> km: <span class=\"type\">Length</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">self</span> / <span class=\"number\">1000.0</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ft: <span class=\"type\">Length</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">self</span> / <span class=\"number\">3.28084</span> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> runningDistance: <span class=\"type\">Length</span> = <span class=\"number\">3.54</span>.km</span><br><span class=\"line\">runningDistance</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用的时候直接使用AudioSample，如果需要改为UInt32或其它时直接改这里，而不必每个地方都去改</span></span><br><span class=\"line\"><span class=\"keyword\">typealias</span> <span class=\"type\">AudioSample</span> = <span class=\"type\">UInt64</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>4.</strong> 并联类型(associatedtype)，在协议中使用别名<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">WeightCalculable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 协议中声明实现类需要使用别名，用associatedtype</span></span><br><span class=\"line\">    <span class=\"keyword\">associatedtype</span> <span class=\"type\">WeightType</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> weight: <span class=\"type\">WeightType</span> &#123; <span class=\"keyword\">get</span> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在具体实现类中，用typealias</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">iPhone7</span>: <span class=\"title\">WeightCalculable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">typealias</span> <span class=\"type\">WeightType</span> = <span class=\"type\">Double</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> weight: <span class=\"type\">WeightType</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0.114</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Ship</span>: <span class=\"title\">WeightCalculable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">typealias</span> <span class=\"type\">WeightType</span> = <span class=\"type\">Int</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> weight: <span class=\"type\">WeightType</span></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(weight: <span class=\"type\">WeightType</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.weight = weight</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">Int</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">typealias</span> <span class=\"type\">Weight</span> = <span class=\"type\">Int</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> t: <span class=\"type\">Weight</span> &#123; <span class=\"keyword\">return</span> <span class=\"number\">1_000</span> * <span class=\"keyword\">self</span> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> titanic = <span class=\"type\">Ship</span>(weight: <span class=\"number\">46_328_000</span>)</span><br></pre></td></tr></table></figure></p>\n<p><strong>5.</strong> Swfit标准库中的常用协议<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Record</span>: <span class=\"title\">Equatable</span>, <span class=\"title\">Comparable</span>, <span class=\"title\">CustomStringConvertible</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> wins: <span class=\"type\">Int</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> losses: <span class=\"type\">Int</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 协议CustomStringConvertible中的定义，可直接被print打印</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> description: <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"WINS: \\(wins), LOSSES: \\(losses)\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> boolValue: <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> wins &gt; losses</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 协议Equatable的作用，我们只需要实现==，我们就可以用!=</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> ==<span class=\"params\">(<span class=\"keyword\">left</span>: Record, <span class=\"keyword\">right</span>: Record)</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">left</span>.wins == <span class=\"keyword\">right</span>.wins &amp;&amp; <span class=\"keyword\">left</span>.losses == <span class=\"keyword\">right</span>.losses</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 协议Comparable的作用，当我们定义了&lt;，上面右定义了==，此时我们可以使用&lt;=,&gt;,&gt;=</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> &lt;(left: Record, right: Record) -&gt; <span class=\"title\">Bool</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">left</span>.wins != <span class=\"keyword\">right</span>.wins &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">left</span>.wins &lt; <span class=\"keyword\">right</span>.wins</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">left</span>.losses &gt; <span class=\"keyword\">right</span>.losses</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> record = <span class=\"type\">Record</span>(wins: <span class=\"number\">10</span>, losses: <span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> record2 = <span class=\"type\">Record</span>(wins: <span class=\"number\">11</span>, losses: <span class=\"number\">5</span>)</span><br><span class=\"line\">record &gt;= record2</span><br><span class=\"line\"><span class=\"built_in\">print</span>(record) <span class=\"comment\">//WINS: 10, LOSSES: 5</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> records = [<span class=\"type\">Record</span>(wins: <span class=\"number\">10</span>, losses: <span class=\"number\">3</span>), <span class=\"type\">Record</span>(wins: <span class=\"number\">8</span>, losses: <span class=\"number\">5</span>), <span class=\"type\">Record</span>(wins: <span class=\"number\">8</span>, losses: <span class=\"number\">8</span>)]</span><br><span class=\"line\"><span class=\"comment\">// 当我们实现了Comparable，可直接排序</span></span><br><span class=\"line\">records.<span class=\"built_in\">sort</span>()</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"面向协议编程\">面向协议编程<a href=\"post/swift-study-note#面向协议编程\"></a></h2><p><strong>1.</strong> 扩展协议和默认实现<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">Record</span>: <span class=\"title\">CustomStringConvertible</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> wins: <span class=\"type\">Int</span> &#123; <span class=\"keyword\">get</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> losses: <span class=\"type\">Int</span> &#123; <span class=\"keyword\">get</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">winningPercent</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Double</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 扩展一个协议的时候，可以对协议进行实现</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">Record</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 实现CustomStringConvertible协议中的description，实现Record的就可以不用实现这个</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> description: <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"WINS: \\(wins), LOSSES: \\(losses)\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 扩展协议中还可以写其他方法的实现</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">shoutWins</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"WE WIN\"</span>, wins, <span class=\"string\">\"TIMES!!!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 扩展中还可以对定义的变量进行计算，计算的是对应实现类中值</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> gamePlayed: <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> wins + losses</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BaseballRecord</span>: <span class=\"title\">Record</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> wins: <span class=\"type\">Int</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> losses: <span class=\"type\">Int</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">winningPercent</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Double</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"type\">Double</span>(wins) / <span class=\"type\">Double</span>(gamePlayed)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> teamRecord = <span class=\"type\">BaseballRecord</span>(wins: <span class=\"number\">2</span>, losses: <span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(teamRecord)</span><br><span class=\"line\">teamRecord.shoutWins()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 扩展标准库中的协议</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">CustomStringConvertible</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> descriptionWithDate: <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"type\">NSData</span>().description + <span class=\"string\">\" \"</span> + description</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(teamRecord.descriptionWithDate)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\"><span class=\"comment\">// WINS: 2, LOSSES: 10</span></span><br><span class=\"line\"><span class=\"comment\">// WE WIN 2 TIMES!!!</span></span><br><span class=\"line\"><span class=\"comment\">// &lt;&gt; WINS: 2, LOSSES: 10</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 根据条件扩展协议<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">Record</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> wins: <span class=\"type\">Int</span> &#123;<span class=\"keyword\">get</span>&#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> losses: <span class=\"type\">Int</span> &#123;<span class=\"keyword\">get</span>&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">Record</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> gamePlayed: <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> wins + losses</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">winningPercent</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Double</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"type\">Double</span>(wins) / <span class=\"type\">Double</span>(gamePlayed)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">Tieable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ties: <span class=\"type\">Int</span> &#123;<span class=\"keyword\">get</span> <span class=\"keyword\">set</span>&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 该扩展表示：实现该协议的实例又实现了Tieable协议会进入这个扩展</span></span><br><span class=\"line\"><span class=\"comment\">// 由于实现了Tieable扩展后的实体需要改变一些计算方式</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">Record</span> <span class=\"title\">where</span> <span class=\"title\">Self</span>: <span class=\"title\">Tieable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> gamePlayed: <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> wins + losses + ties</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 如果不写覆写这个方法，实例会调用上面扩展中的方法，并调用上面扩展中的gamePlayed，会导致计算结果不对</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">winningPercent</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Double</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"type\">Double</span>(wins) / <span class=\"type\">Double</span>(gamePlayed) <span class=\"comment\">// gamePlayed = wins + losses + ties</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">FootballRecord</span>: <span class=\"title\">Record</span>, <span class=\"title\">Tieable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> wins: <span class=\"type\">Int</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> losses: <span class=\"type\">Int</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ties: <span class=\"type\">Int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> footballTeam = <span class=\"type\">FootballRecord</span>(wins: <span class=\"number\">1</span>, losses: <span class=\"number\">1</span>, ties: <span class=\"number\">1</span>)</span><br><span class=\"line\">footballTeam.gamePlayed</span><br><span class=\"line\">footballTeam.winningPercent()</span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 协议聚合<br>在方法的参数中聚合多个协议为传入条件<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">Prizable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">isPrizable</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 该方法表示实例必须同时实现了CustomStringConvertible和Prizable两个协议才能传入</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">award</span><span class=\"params\">(one: CustomStringConvertible &amp; Prizable)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> one.isPrizable()&#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(one)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Congratulation! You won a prize!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(one)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"You can not have the prize!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Student</span>: <span class=\"title\">CustomStringConvertible</span>, <span class=\"title\">Prizable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> score: <span class=\"type\">Int</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(score: <span class=\"type\">Int</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.score = score</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> description: <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"score = \\(score)\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">isPrizable</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> score &gt; <span class=\"number\">60</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">award(one: <span class=\"type\">Student</span>(score: <span class=\"number\">80</span>))</span><br></pre></td></tr></table></figure></p>\n<p><strong>4.</strong> 泛型约束<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 传入数组，找出最大值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">topOne</span>&lt;T: Comparable&gt;<span class=\"params\">(seq:[T])</span></span> -&gt; <span class=\"type\">T</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">assert</span>(seq.<span class=\"built_in\">count</span> &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> seq.<span class=\"built_in\">reduce</span>(seq[<span class=\"number\">0</span>]) &#123; <span class=\"built_in\">max</span>($<span class=\"number\">0</span>, $<span class=\"number\">1</span>) &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">topOne(seq: [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">7</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>])</span><br></pre></td></tr></table></figure></p>\n<p><strong>5.</strong> 创建自己的委托模式<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">TurnBaseGameDelegate</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">gameStart</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">playMove</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">gameEnd</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">gameOver</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 回合制游戏</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">TurnBasedGame</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> turn: <span class=\"type\">Int</span> &#123; <span class=\"keyword\">get</span> <span class=\"keyword\">set</span> &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">play</span><span class=\"params\">()</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实现了游戏的逻辑，但是具体是什么游戏不知道，委托出去别人实现</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SinglePlayerTurnBasedGame</span>: <span class=\"title\">TurnBasedGame</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> delegate: <span class=\"type\">TurnBaseGameDelegate</span>!</span><br><span class=\"line\">    <span class=\"keyword\">var</span> turn = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">play</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        delegate.gameStart()</span><br><span class=\"line\">        <span class=\"keyword\">while</span> !delegate.gameOver() &#123;</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">\"ROUND\"</span>, turn, <span class=\"string\">\":\"</span>)</span><br><span class=\"line\">            delegate.playMove()</span><br><span class=\"line\">            turn += <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        delegate.gameEnd()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实现了委托的协议</span></span><br><span class=\"line\"><span class=\"comment\">// 掷骰子游戏</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RollNumberGame</span>: <span class=\"title\">SinglePlayerTurnBasedGame</span>, <span class=\"title\">TurnBaseGameDelegate</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> score = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"keyword\">init</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.<span class=\"keyword\">init</span>()</span><br><span class=\"line\">        delegate = <span class=\"keyword\">self</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">gameStart</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        score = <span class=\"number\">0</span></span><br><span class=\"line\">        turn = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Welcome to Roll Number Game.\"</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Try to use least turn to make total 100 scores!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">playMove</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> rollNumber = <span class=\"type\">Int</span>(arc4random() % <span class=\"number\">6</span>) + <span class=\"number\">1</span></span><br><span class=\"line\">        score += rollNumber</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"You rolled a\"</span>, rollNumber, <span class=\"string\">\"! The score is\"</span>, score, <span class=\"string\">\"now!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">gameEnd</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Congratulation! You win the game in\"</span>, turn, <span class=\"string\">\"ROUND!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">gameOver</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> score &gt;= <span class=\"number\">30</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> rollingNumber = <span class=\"type\">RollNumberGame</span>()</span><br><span class=\"line\">rollingNumber.play()</span><br></pre></td></tr></table></figure></p>\n<p><strong>6.</strong> 可选的协议方法<br>可选方法需要用@objc标记，实现的实体可实现，可不实现，用的时候当做可选类型来用<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@objc</span> <span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">TurnBaseGameDelegate</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">gameStart</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">playMove</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">gameEnd</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">gameOver</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Bool</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@objc</span> <span class=\"keyword\">optional</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">turnStart</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"meta\">@objc</span> <span class=\"keyword\">optional</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">turnEnd</span><span class=\"params\">()</span></span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"错误处理\">错误处理<a href=\"post/swift-study-note#错误处理\"></a></h2><p><strong>1.</strong> 强制退出程序<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">assert</span>(<span class=\"number\">1</span>&lt;<span class=\"number\">0</span>, <span class=\"string\">\"Error msg\"</span>) <span class=\"comment\">// 只在测试阶段才有效</span></span><br><span class=\"line\"><span class=\"comment\">// 输出：</span></span><br><span class=\"line\"><span class=\"comment\">// Assertion failed: Error msg: file LearnError.playground, line 5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//===========================================</span></span><br><span class=\"line\"><span class=\"built_in\">assertionFailure</span>()</span><br><span class=\"line\"><span class=\"comment\">//输出：</span></span><br><span class=\"line\"><span class=\"comment\">//Fatal error: file LearnError.playground, line 7</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//===========================================</span></span><br><span class=\"line\"><span class=\"built_in\">assertionFailure</span>(<span class=\"string\">\"Error msg\"</span>)</span><br><span class=\"line\"><span class=\"comment\">//输出：</span></span><br><span class=\"line\"><span class=\"comment\">//Fatal error: Error msg: file LearnError.playground, line 7</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//===========================================</span></span><br><span class=\"line\"><span class=\"built_in\">precondition</span>(<span class=\"number\">1</span>&gt;<span class=\"number\">0</span>) <span class=\"comment\">// 满足条件也会退出</span></span><br><span class=\"line\"><span class=\"built_in\">precondition</span>(<span class=\"number\">1</span>&gt;<span class=\"number\">0</span>, <span class=\"string\">\"Error\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">fatalError</span>(<span class=\"string\">\"Error\"</span>) <span class=\"comment\">// 严重的错误</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 错误处理<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VendingMachine</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Item</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">ItemType</span>: <span class=\"title\">String</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"type\">Water</span></span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"type\">Cola</span></span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"type\">Juice</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> type: <span class=\"type\">ItemType</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> price: <span class=\"type\">Int</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> <span class=\"built_in\">count</span>: <span class=\"type\">Int</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">ItemError</span>: <span class=\"title\">Error</span>, <span class=\"title\">CustomStringConvertible</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"type\">NoSuchItem</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"type\">NotEnoughMoney</span>(<span class=\"type\">Int</span>)</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"type\">OutOfStock</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> description: <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> <span class=\"keyword\">self</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> .<span class=\"type\">NoSuchItem</span>:                 <span class=\"keyword\">return</span> <span class=\"string\">\"Not Such Item\"</span></span><br><span class=\"line\">            <span class=\"keyword\">case</span> .<span class=\"type\">NotEnoughMoney</span>(<span class=\"keyword\">let</span> price) : <span class=\"keyword\">return</span> <span class=\"string\">\"Not Enough Money. \\(price) Yuan needed.\"</span></span><br><span class=\"line\">            <span class=\"keyword\">case</span> .<span class=\"type\">OutOfStock</span>:                 <span class=\"keyword\">return</span> <span class=\"string\">\"Out of Stock\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">var</span> items = [<span class=\"string\">\"MIneral Water\"</span>: <span class=\"type\">Item</span>(type: .<span class=\"type\">Water</span>, price: <span class=\"number\">2</span>, <span class=\"built_in\">count</span>: <span class=\"number\">10</span>),</span><br><span class=\"line\">                         <span class=\"string\">\"Coca Cola\"</span>: <span class=\"type\">Item</span>(type: .<span class=\"type\">Cola</span>, price: <span class=\"number\">3</span>, <span class=\"built_in\">count</span>: <span class=\"number\">5</span>),</span><br><span class=\"line\">                         <span class=\"string\">\"Orange Juice\"</span>: <span class=\"type\">Item</span>(type: .<span class=\"type\">Juice</span>, price: <span class=\"number\">5</span>, <span class=\"built_in\">count</span>: <span class=\"number\">3</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">vend</span><span class=\"params\">(itemName: String, money: Int)</span></span> <span class=\"keyword\">throws</span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> item = items[itemName] <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"type\">ItemError</span>.<span class=\"type\">NoSuchItem</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">guard</span> money &gt;= item.price <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"type\">ItemError</span>.<span class=\"type\">NotEnoughMoney</span>(item.price)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">guard</span> item.<span class=\"built_in\">count</span> &gt; <span class=\"number\">0</span> <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"type\">ItemError</span>.<span class=\"type\">OutOfStock</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        items[itemName]!.<span class=\"built_in\">count</span> -= <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> money - item.price</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">display</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Want something to drink?\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> itemName <span class=\"keyword\">in</span> items.keys &#123;</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">\"*\"</span>, itemName)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"===========================\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> machine = <span class=\"type\">VendingMachine</span>()</span><br><span class=\"line\">machine.display()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> pocketMoney = <span class=\"number\">6</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可能抛出异常，但不管不顾，抛出异常后直接崩溃</span></span><br><span class=\"line\">pocketMoney = <span class=\"keyword\">try</span>! machine.vend(itemName: <span class=\"string\">\"Coca Cola\"</span>, money: pocketMoney)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果抛出异常，则得到一个nil</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"keyword\">try</span>? machine.vend(itemName: <span class=\"string\">\"Coca Cola\"</span>, money: pocketMoney)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 异常处理，如果抛出异常则进入对应的异常处理，如果都没有捕获到，则进入最后一个处理</span></span><br><span class=\"line\"><span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">    pocketMoney = <span class=\"keyword\">try</span> machine.vend(itemName: <span class=\"string\">\"Coca Cola\"</span>, money: pocketMoney)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(pocketMoney,<span class=\"string\">\"Yuan left\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span> <span class=\"type\">VendingMachine</span>.<span class=\"type\">ItemError</span>.<span class=\"type\">NoSuchItem</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"No Such Item\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span> <span class=\"type\">VendingMachine</span>.<span class=\"type\">ItemError</span>.<span class=\"type\">NotEnoughMoney</span>(<span class=\"keyword\">let</span> price)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Not Enough Money.\"</span> , price , <span class=\"string\">\"Yuan needed.\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span> <span class=\"type\">VendingMachine</span>.<span class=\"type\">ItemError</span>.<span class=\"type\">OutOfStock</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Out of Stock\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Error occured during vending.\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 捕获异常，并得到异常实例</span></span><br><span class=\"line\"><span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">    pocketMoney = <span class=\"keyword\">try</span> machine.vend(itemName: <span class=\"string\">\"Coca Cola\"</span>, money: pocketMoney)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(pocketMoney,<span class=\"string\">\"Yuan left\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span> <span class=\"keyword\">let</span> error <span class=\"keyword\">as</span> <span class=\"type\">VendingMachine</span>.<span class=\"type\">ItemError</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(error)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Error occured during vending.\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> defer<br>相当于java中的fanally，用于抛出异常或没有抛出异常都需要执行的语句；<br>使用方式：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">vend</span><span class=\"params\">(itemName itemName: String, money: Int)</span></span> <span class=\"keyword\">throws</span> -&gt; <span class=\"type\">Int</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 和代码平级</span></span><br><span class=\"line\">    <span class=\"keyword\">defer</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Have a nice day\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> item = items[itemName] <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"type\">VendingMachine</span>.<span class=\"type\">ItemError</span>.<span class=\"type\">NoSuchItem</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 如果有多个defer，则会倒叙执行</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果前方就抛出异常，则该局不会执行</span></span><br><span class=\"line\">    <span class=\"keyword\">defer</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Thank you\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> money - item.price</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"内存管理\">内存管理<a href=\"post/swift-study-note#内存管理\"></a></h2><p><strong>1.</strong> 析构函数，实例销毁前在这里做一些处理。由于内存自动销毁实例用的情况比较少<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">init</span>() &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"init...\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">doSomething</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"doing something\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">deinit</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"person is leaving!!!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person: <span class=\"type\">Person</span>? = <span class=\"type\">Person</span>()</span><br><span class=\"line\"><span class=\"comment\">// 当赋值为nil后，实例会被销毁</span></span><br><span class=\"line\">person = <span class=\"literal\">nil</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 当实例超出作用域后，实例会被销毁</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">inTheShop</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"======\"</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"Welcome\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> person: <span class=\"type\">Person</span> = <span class=\"type\">Person</span>()</span><br><span class=\"line\">    person.doSomething()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">inTheShop()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 输出</span></span><br><span class=\"line\"><span class=\"comment\">//init...</span></span><br><span class=\"line\"><span class=\"comment\">//person is leaving!!!</span></span><br><span class=\"line\"><span class=\"comment\">//======</span></span><br><span class=\"line\"><span class=\"comment\">//Welcome</span></span><br><span class=\"line\"><span class=\"comment\">//init...</span></span><br><span class=\"line\"><span class=\"comment\">//doing something</span></span><br><span class=\"line\"><span class=\"comment\">//person is leaving!!!</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 引用计数<br>当引用实例的变量为0的时候，那么就会被释放；<br>ARC：Automatic Reference Count<br><strong>3.</strong> 强引用循环和weak<br>weak必须是一个可选型的变量<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> apartment: <span class=\"type\">Apartment</span>?</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>()&#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Person is initialized\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">deinit</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Person is being deinitialized!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Apartment</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 弱引用必须是可选型</span></span><br><span class=\"line\">    <span class=\"comment\">// weak必须是var</span></span><br><span class=\"line\">    <span class=\"comment\">// 当弱引用的实例被销毁的时候，tenant会被赋值为nil</span></span><br><span class=\"line\">    <span class=\"keyword\">weak</span> <span class=\"keyword\">var</span> tenant: <span class=\"type\">Person</span>?</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>()&#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Apartment is initialized!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">deinit</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Apartment is being deinitialized!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> liuyubobobo: <span class=\"type\">Person</span>? = <span class=\"type\">Person</span>()</span><br><span class=\"line\"><span class=\"keyword\">var</span> imoocApartment: <span class=\"type\">Apartment</span>? = <span class=\"type\">Apartment</span>()</span><br><span class=\"line\">liuyubobobo!.apartment = imoocApartment</span><br><span class=\"line\">imoocApartment!.tenant = liuyubobobo</span><br><span class=\"line\"></span><br><span class=\"line\">liuyubobobo = <span class=\"literal\">nil</span></span><br><span class=\"line\">imoocApartment?.tenant <span class=\"comment\">//nil</span></span><br><span class=\"line\">imoocApartment = <span class=\"literal\">nil</span></span><br><span class=\"line\"><span class=\"comment\">// 两种顺序内存都能够正确释放</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>4.</strong> unowned<br>和上面一样也是弱引用，区别在于它只能修饰常量let，不能是可选的；<br>添加了unowned的实例最好在unowned引用的对象之前销毁，因为如果不这样访问unowned常量时会抛出异常<br><strong>5.</strong> 强引用循环<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Country</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> name: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"comment\">//let capital: City</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> capital: <span class=\"type\">City</span>! <span class=\"comment\">// 由于定义成这种隐式的可选，表示占时不会赋值，但肯定会被赋值</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(countryName: <span class=\"type\">String</span>, capitalName: <span class=\"type\">String</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.name = countryName</span><br><span class=\"line\">        <span class=\"comment\">//-------两段构造从此分割-------</span></span><br><span class=\"line\">        <span class=\"keyword\">self</span>.capital = <span class=\"type\">City</span>(cityName: capitalName, country: <span class=\"keyword\">self</span>) <span class=\"comment\">// 由于占时不用赋值，所以到了第二段构造，于是可以使用self</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Country\"</span>, name, <span class=\"string\">\"is intialized.\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">deinit</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Country\"</span>,name,<span class=\"string\">\"is being deinitialized!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">City</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> name: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">unowned</span> <span class=\"keyword\">let</span> country: <span class=\"type\">Country</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(cityName: <span class=\"type\">String</span>, country: <span class=\"type\">Country</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.name = cityName</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.country = country</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"City\"</span>, name, <span class=\"string\">\"is intialized.\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">deinit</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"City\"</span>,name,<span class=\"string\">\"is being deinitialized!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> china: <span class=\"type\">Country</span>? = <span class=\"type\">Country</span>(countryName: <span class=\"string\">\"China\"</span>, capitalName: <span class=\"string\">\"Beijing\"</span>)</span><br><span class=\"line\">china = <span class=\"literal\">nil</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>6.</strong> 闭包中的强引用循环<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SmartAirConditioner</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> temperature: <span class=\"type\">Int</span> = <span class=\"number\">26</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> temperatureChange: ((<span class=\"type\">Int</span>) -&gt; ())!</span><br><span class=\"line\">    <span class=\"keyword\">init</span>()&#123;</span><br><span class=\"line\">        temperatureChange = &#123; [<span class=\"keyword\">weak</span> <span class=\"keyword\">self</span>]newTemperature <span class=\"keyword\">in</span></span><br><span class=\"line\">            <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> `<span class=\"keyword\">self</span>` = <span class=\"keyword\">self</span> <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">abs</span>(newTemperature - <span class=\"keyword\">self</span>.temperature) &gt;= <span class=\"number\">10</span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">\"It's not healthy to do it!\"</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">self</span>.temperature = newTemperature</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">\"New temperature \\(newTemperature) is set!\"</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">deinit</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"Smart Air-conditioner is being deinitialized!\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> airCon: <span class=\"type\">SmartAirConditioner</span>? = <span class=\"type\">SmartAirConditioner</span>()</span><br><span class=\"line\">airCon?.temperature</span><br><span class=\"line\">airCon?.temperatureChange(<span class=\"number\">100</span>)</span><br><span class=\"line\">airCon?.temperatureChange(<span class=\"number\">24</span>)</span><br><span class=\"line\">airCon = <span class=\"literal\">nil</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"类型检查和类型转换\">类型检查和类型转换<a href=\"post/swift-study-note#类型检查和类型转换\"></a></h2><p><strong>1.</strong> 类型检查<code>is</code><br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span>: <span class=\"title\">Person</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person: <span class=\"type\">Person</span> = <span class=\"type\">Student</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">person <span class=\"keyword\">is</span> <span class=\"type\">Student</span> <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.</strong> 类型转换<code>as</code><br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 确定类型（失败有风险）</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> stu1 = person <span class=\"keyword\">as</span>! <span class=\"type\">Student</span></span><br><span class=\"line\"><span class=\"comment\">// 可选类型（失败为nil）</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> stu2 = person <span class=\"keyword\">as</span>? <span class=\"type\">Student</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>3.</strong> 可以用在协议上<br><strong>4.</strong> NSObject,AnyObject和Any<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">init</span>(name: <span class=\"type\">String</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.name = name</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//var objects: NSArray = [</span></span><br><span class=\"line\"><span class=\"comment\">//    CGFloat(3.1415926),</span></span><br><span class=\"line\"><span class=\"comment\">//    \"imooc\",</span></span><br><span class=\"line\"><span class=\"comment\">//    UIColor.blueColor(),</span></span><br><span class=\"line\"><span class=\"comment\">//    NSDate(),</span></span><br><span class=\"line\"><span class=\"comment\">//    Int(32),</span></span><br><span class=\"line\"><span class=\"comment\">//    Array&lt;Int&gt;([1,2,3])</span></span><br><span class=\"line\"><span class=\"comment\">//]</span></span><br><span class=\"line\"><span class=\"comment\">//var objects = [</span></span><br><span class=\"line\"><span class=\"comment\">//    CGFloat(3.1415926),</span></span><br><span class=\"line\"><span class=\"comment\">//    \"imooc\",</span></span><br><span class=\"line\"><span class=\"comment\">//    UIColor.blueColor(),</span></span><br><span class=\"line\"><span class=\"comment\">//    NSDate(),</span></span><br><span class=\"line\"><span class=\"comment\">//    Int(32),</span></span><br><span class=\"line\"><span class=\"comment\">//    Array&lt;Int&gt;([1,2,3]),</span></span><br><span class=\"line\"><span class=\"comment\">//    Person(name: \"liuyubobobo\")</span></span><br><span class=\"line\"><span class=\"comment\">//]</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//// a 为AnyObject</span></span><br><span class=\"line\"><span class=\"comment\">//let a = objects[0]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//var objects: [AnyObject] = [</span></span><br><span class=\"line\"><span class=\"comment\">//    CGFloat(3.1415926),</span></span><br><span class=\"line\"><span class=\"comment\">//    \"imooc\",</span></span><br><span class=\"line\"><span class=\"comment\">//    UIColor.blueColor(),</span></span><br><span class=\"line\"><span class=\"comment\">//    NSDate(),</span></span><br><span class=\"line\"><span class=\"comment\">//    Int(32),</span></span><br><span class=\"line\"><span class=\"comment\">//    Array&lt;Int&gt;([1,2,3]),</span></span><br><span class=\"line\"><span class=\"comment\">//    Person(name: \"liuyubobobo\")</span></span><br><span class=\"line\"><span class=\"comment\">//]</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//objects.append( &#123; (a:Int) -&gt; Int in</span></span><br><span class=\"line\"><span class=\"comment\">//    return a*a&#125; )</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> objects: [<span class=\"type\">Any</span>] = [</span><br><span class=\"line\">    <span class=\"type\">CGFloat</span>(<span class=\"number\">3.1415926</span>),</span><br><span class=\"line\">    <span class=\"string\">\"imooc\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">//swift 2: UIColor.blueColor(),</span></span><br><span class=\"line\">    <span class=\"comment\">//swift3中，颜色从“xxxColor()”变成了\"xxx\"。直接调用UIColor.xxx即可</span></span><br><span class=\"line\">    <span class=\"type\">UIColor</span>.blue,                <span class=\"comment\">//swift 3</span></span><br><span class=\"line\">    <span class=\"type\">NSDate</span>(),</span><br><span class=\"line\">    <span class=\"type\">Int</span>(<span class=\"number\">32</span>),</span><br><span class=\"line\">    <span class=\"type\">Array</span>&lt;<span class=\"type\">Int</span>&gt;([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]),</span><br><span class=\"line\">    <span class=\"type\">Person</span>(name: <span class=\"string\">\"liuyubobobo\"</span>)</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">objects.append( &#123; (a:<span class=\"type\">Int</span>) -&gt; <span class=\"type\">Int</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a*a&#125; )</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"一些注意事项\">一些注意事项<a href=\"post/swift-study-note#一些注意事项\"></a></h2><p><strong>1.</strong> 变量可以用中文，支持Unicode字符，并且可以用表情<br><strong>2.</strong> swift没有 <code>++</code> <code>--</code> 运算<br><strong>3.</strong> 类型都需要显示的自己去转换<br><strong>4.</strong> Array、Set、Dictionary、String等结构体都是值类型的</p>\n","prev":{"title":"iOS开发-零碎笔记","link":"post/ios-study-note"},"next":{"title":"Dagger2 的深入分析与使用","link":"post/learn-dagger"},"plink":"https://blog.xujiaji.com/post/swift-study-note/","toc":[{"title":"元组","id":"元组","index":"1"},{"title":"print打印","id":"print打印","index":"2"},{"title":"if条件判断","id":"if条件判断","index":"3"},{"title":"for循环","id":"for循环","index":"4"},{"title":"while循环","id":"while循环","index":"5"},{"title":"switch","id":"switch","index":"6"},{"title":"控制转移","id":"控制转移","index":"7"},{"title":"guard","id":"guard","index":"8"},{"title":"字符串","id":"字符串","index":"9"},{"title":"Optional","id":"Optional","index":"10"},{"title":"Array","id":"Array","index":"11"},{"title":"NSArray","id":"NSArray","index":"12"},{"title":"Dict","id":"Dict","index":"13"},{"title":"Set","id":"Set","index":"14"},{"title":"Function","id":"Function","index":"15","children":[{"title":"参数部分","id":"参数部分","index":"15.1"},{"title":"类型部分","id":"类型部分","index":"15.2"}]},{"title":"闭包","id":"闭包","index":"16"},{"title":"enum","id":"enum","index":"17"},{"title":"struct","id":"struct","index":"18"},{"title":"class","id":"class","index":"19"},{"title":"属性和方法","id":"属性和方法","index":"20"},{"title":"继承和构造函数","id":"继承和构造函数","index":"21"},{"title":"文档注释","id":"文档注释","index":"22"},{"title":"下标","id":"下标","index":"23"},{"title":"运算符重载","id":"运算符重载","index":"24"},{"title":"Extension","id":"Extension","index":"25"},{"title":"Generic","id":"Generic","index":"26"},{"title":"protocol","id":"protocol","index":"27"},{"title":"面向协议编程","id":"面向协议编程","index":"28"},{"title":"错误处理","id":"错误处理","index":"29"},{"title":"内存管理","id":"内存管理","index":"30"},{"title":"类型检查和类型转换","id":"类型检查和类型转换","index":"31"},{"title":"一些注意事项","id":"一些注意事项","index":"32"}],"reward":true,"copyright":{"author":"xujiaji","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow noopener\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","link":"<a href=\"https://blog.xujiaji.com/post/swift-study-note/\" title=\"Swift学习笔记\">https://blog.xujiaji.com/post/swift-study-note/</a>"}}